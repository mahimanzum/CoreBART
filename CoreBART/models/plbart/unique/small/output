2021-10-24 19:46:37 | INFO | fairseq_cli.generate | Namespace(all_gather_list_size=16384, beam=5, bf16=False, bpe=None, broadcast_buffers=False, bucket_cap_mb=25, checkpoint_suffix='', cpu=False, criterion='cross_entropy', data='../processed_data/small/data-bin', data_buffer_size=10, dataset_impl=None, ddp_backend='c10d', decoding_format=None, device_id=0, distributed_backend='nccl', distributed_init_method=None, distributed_no_spawn=False, distributed_port=-1, distributed_rank=0, distributed_world_size=1, distributed_wrapper='DDP', diverse_beam_groups=-1, diverse_beam_strength=0.5, diversity_rate=-1.0, empty_cache_freq=0, eval_bleu=False, eval_bleu_args=None, eval_bleu_detok='space', eval_bleu_detok_args=None, eval_bleu_print_samples=False, eval_bleu_remove_bpe=None, eval_tokenized_bleu=False, fast_stat_sync=False, find_unused_parameters=False, fix_batches_to_gpus=False, force_anneal=None, fp16=False, fp16_init_scale=128, fp16_no_flatten_grads=False, fp16_scale_tolerance=0.0, fp16_scale_window=None, gen_subset='test', iter_decode_eos_penalty=0.0, iter_decode_force_max_iter=False, iter_decode_max_iter=10, iter_decode_with_beam=1, iter_decode_with_external_reranker=False, langs='java,python,en_XX', left_pad_source='True', left_pad_target='False', lenpen=1, load_alignments=False, localsgd_frequency=3, log_format=None, log_interval=100, lr_scheduler='fixed', lr_shrink=0.1, match_source_len=False, max_len_a=0, max_len_b=200, max_sentences=128, max_source_positions=1024, max_target_positions=1024, max_tokens=None, memory_efficient_bf16=False, memory_efficient_fp16=False, min_len=1, min_loss_scale=0.0001, model_overrides='{}', model_parallel_size=1, momentum=0.99, nbest=1, no_beamable_mm=False, no_early_stop=False, no_progress_bar=False, no_repeat_ngram_size=0, no_seed_provided=True, nprocs_per_node=1, num_batch_buckets=0, num_shards=1, num_workers=1, optimizer='nag', path='../models/plbart/unique/small/checkpoint_best.pt', prefix_size=0, print_alignment=False, print_step=False, profile=False, quantization_config_path=None, quiet=False, remove_bpe='sentencepiece', replace_unk=None, required_batch_size_multiple=8, results_path=None, retain_dropout=False, retain_dropout_modules=None, retain_iter_history=False, sacrebleu=True, sampling=False, sampling_topk=-1, sampling_topp=-1.0, score_reference=False, seed=1, shard_id=0, skip_invalid_size_inputs_valid_test=False, slowmo_algorithm='LocalSGD', slowmo_momentum=None, source_lang='source', target_lang='target', task='translation_without_lang_token', temperature=1.0, tensorboard_logdir='', threshold_loss_scale=None, tokenizer=None, tpu=False, truncate_source=True, unkpen=0, unnormalized=False, upsample_primary=1, user_dir='../user_dir', warmup_updates=0, weight_decay=0.0)
2021-10-24 19:46:37 | INFO | fairseq.tasks.translation | [source] dictionary: 50001 types
2021-10-24 19:46:37 | INFO | fairseq.tasks.translation | [target] dictionary: 50001 types
2021-10-24 19:46:37 | INFO | fairseq.data.data_utils | loaded 827 examples from: ../processed_data/small/data-bin/test.source-target.source
2021-10-24 19:46:37 | INFO | fairseq.data.data_utils | loaded 827 examples from: ../processed_data/small/data-bin/test.source-target.target
2021-10-24 19:46:37 | INFO | fairseq.tasks.translation | ../processed_data/small/data-bin test source-target 827 examples
2021-10-24 19:46:37 | INFO | fairseq_cli.generate | loading model(s) from ../models/plbart/unique/small/checkpoint_best.pt
S-378	this.originX
T-378	this.originY
H-378	-0.3111688792705536	this.originY
D-378	-0.3111688792705536	this.originY
P-378	-0.1035 -0.0993 -1.0131 -0.2424 -0.0976
S-384	EJBException nsee
T-384	IllegalStateException nsee
H-384	-0.04130720719695091	IllegalStateException nsee
D-384	-0.04130720719695091	IllegalStateException nsee
P-384	-0.0452 -0.0166 -0.0547 -0.0063 -0.0837
S-300	IllegalStateException ise
T-300	IllegalArgumentException ise
H-300	-0.5098944306373596	IllegalStateException ise
D-300	-0.5098944306373596	IllegalStateException ise
P-300	-0.0177 -0.0094 -0.8796 -0.0163 -1.6264
S-309	assertTrue(found)
T-309	assertFalse(found)
H-309	-0.11384343355894089	assertFalse(found)
D-309	-0.11384343355894089	assertFalse(found)
P-309	-0.3026 -0.0547 -0.0284 -0.0832 -0.1004
S-320	Set<Renderer>
T-320	Set<String>
H-320	-0.12956154346466064	ImmutableSet<Renderer>
D-320	-0.12956154346466064	ImmutableSet<Renderer>
P-320	-0.3451 -0.0498 -0.0426 -0.1082 -0.1021
S-357	0 - originY
T-357	0 - originX
H-357	-0.07113862782716751	0 - originX
D-357	-0.07113862782716751	0 - originX
P-357	-0.0549 -0.0781 -0.0833 -0.0527 -0.0867
S-252	group.getId()
T-252	group.id()
H-252	-0.05751952528953552	group.id()
D-252	-0.05751952528953552	group.id()
P-252	-0.0099 -0.0972 -0.0143 -0.0614 -0.1049
S-251	TIMEOUT=20000L
T-251	TIMEOUT=40000L
H-251	-0.15005803108215332	TIMEOUT=20000L
D-251	-0.15005803108215332	TIMEOUT=20000L
P-251	-0.0438 -0.3153 -0.0255 -0.2454 -0.1203
S-390	activeCount == maxActive
T-390	activeCount >= maxActive
H-390	-0.05062564089894295	activeCount >= maxActive
D-390	-0.05062564089894295	activeCount >= maxActive
P-390	-0.0009 -0.0572 -0.0573 -0.0327 -0.1050
S-418	e.getMessage()
T-418	e.toString()
H-418	-0.12977783381938934	e.toString()
D-418	-0.12977783381938934	e.toString()
P-418	-0.2580 -0.0846 -0.1162 -0.0883 -0.1018
S-515	new StringBuilder(254)
T-515	new StringBuilder(253)
H-515	-0.05893528833985329	new StringBuilder(253)
D-515	-0.05893528833985329	new StringBuilder(253)
P-515	-0.0650 -0.0238 -0.0339 -0.0814 -0.0906
S-530	idAnnotation != null
T-530	idAnnotation != null && !method.isBridge()
H-530	-0.05719248577952385	idAnnotation != null && !method.isBridge()
D-530	-0.05719248577952385	idAnnotation != null && !method.isBridge()
P-530	-0.0541 -0.0175 -0.1016 -0.0934 -0.1023 -0.0097 -0.0006 -0.0844 -0.0434 -0.0260 -0.0705 -0.0827
S-254	items[30]
T-254	items[29]
H-254	-0.06607711315155029	items[29]
D-254	-0.06607711315155029	items[29]
P-254	-0.0455 -0.0524 -0.0376 -0.0978 -0.0972
S-540	id=15801
T-540	id=10801
H-540	-0.10898609459400177	id=10801
D-540	-0.10898609459400177	id=10801
P-540	-0.0700 -0.3160 -0.0297 -0.0288 -0.1005
S-775	id=15804
T-775	id=10804
H-775	-0.16393110156059265	id=10804
D-775	-0.16393110156059265	id=10804
P-775	-0.0632 -0.3801 -0.1043 -0.1081
S-3	libDirectory="."
T-3	outputDirectory="."
H-3	-0.03681997209787369	outputDirectory="."
D-3	-0.03681997209787369	outputDirectory="."
P-3	-0.0079 -0.0182 -0.0345 -0.0227 -0.1007
S-397	id=15806
T-397	id=10806
H-397	-0.10876286029815674	id=10806
D-397	-0.10876286029815674	id=10806
P-397	-0.0675 -0.2455 -0.0122 -0.1098
S-528	id=15848
T-528	id=10995
H-528	-0.11263982951641083	id=10848
D-528	-0.11263982951641083	id=10848
P-528	-0.0604 -0.1966 -0.1720 -0.0245 -0.1098
S-648	tiled != null
T-648	drawable != null
H-648	-0.05195905268192291	drawable != null
D-648	-0.05195905268192291	drawable != null
P-648	-0.0033 -0.0468 -0.0791 -0.0786
S-658	TIMEOUT=15000
T-658	TIMEOUT=30000
H-658	-0.11035782843828201	TIMEOUT=30000
D-658	-0.11035782843828201	TIMEOUT=30000
P-658	-0.0584 -0.2011 -0.0861 -0.0957
S-640	writeDelaySeconds=2
T-640	writeDelaySeconds=10
H-640	-0.3379489481449127	writeDelaySeconds=1
D-640	-0.3379489481449127	writeDelaySeconds=1
P-640	-0.1548 -0.0162 -0.0450 -0.9705 -0.5033
S-198	getHttpConnectionManager()
T-198	getClientConnectionManager()
H-198	-0.6686498522758484	getOrCreateConnectionManager()
D-198	-0.6686498522758484	getOrCreateConnectionManager()
P-198	-3.0599 -0.0330 -0.0631 -0.0927 -0.0946
S-21	return softDepend;
T-21	return loadBefore;
H-21	-0.04755553975701332	return loadBefore;
D-21	-0.04755553975701332	return loadBefore;
P-21	-0.0541 -0.0040 -0.0322 -0.0439 -0.1036
S-134	List<String>
T-134	ImmutableList<String>
H-134	-0.16821829974651337	ImmutableList<String>
D-134	-0.16821829974651337	ImmutableList<String>
P-134	-0.5114 -0.0529 -0.0285 -0.1503 -0.0979
S-135	getRequestMethod == null
T-135	getRequestMethod != null
H-135	-0.05982079356908798	getRequestMethod != null
D-135	-0.05982079356908798	getRequestMethod != null
P-135	-0.0277 -0.0424 -0.0560 -0.0836 -0.0894
S-155	Object... pathParams
T-155	String... pathParams
H-155	-0.043286245316267014	String... pathParams
D-155	-0.043286245316267014	String... pathParams
P-155	-0.0139 -0.0231 -0.0578 -0.0253 -0.0964
S-534	Metric<Integer>
T-534	Metric<Long>
H-534	-0.07158908247947693	Metric<Long>
D-534	-0.07158908247947693	Metric<Long>
P-534	-0.0250 -0.0447 -0.0588 -0.1272 -0.1022
S-148	knownType != null
T-148	typeName != null
H-148	-0.051605112850666046	typeName != null
D-148	-0.051605112850666046	typeName != null
P-148	-0.0368 -0.0339 -0.0595 -0.0762
S-524	(Node)container
T-524	(Relationship)container
H-524	-0.06053018942475319	(Relationship)container
D-524	-0.06053018942475319	(Relationship)container
P-524	-0.0690 -0.0450 -0.0477 -0.0232 -0.1177
S-84	this.comparator
T-84	this.comparatorIgnoringType
H-84	-0.04891427233815193	this.comparatorIgnoringType
D-84	-0.04891427233815193	this.comparatorIgnoringType
P-84	-0.1454 -0.1051 -0.0070 -0.0206 -0.0068 -0.0332 -0.0347 -0.0385
S-324	buf.clear()
T-324	buf.discardReadBytes()
H-324	-0.06282113492488861	buf.discardReadBytes()
D-324	-0.06282113492488861	buf.discardReadBytes()
P-324	-0.0275 -0.1000 -0.0350 -0.0458 -0.0131 -0.0871 -0.0866 -0.1075
S-68	s.count()
T-68	RT.count(s)
H-68	-0.07630448043346405	RT.count(s)
D-68	-0.07630448043346405	RT.count(s)
P-68	-0.0003 -0.0896 -0.0206 -0.1966 -0.0587 -0.0711 -0.0972
S-480	s.count()
T-480	RT.count(s)
H-480	-0.07630448043346405	RT.count(s)
D-480	-0.07630448043346405	RT.count(s)
P-480	-0.0003 -0.0896 -0.0206 -0.1966 -0.0587 -0.0711 -0.0972
S-682	sb.toString()
T-682	line.toString(charset)
H-682	-0.07458484917879105	line.toString(charset)
D-682	-0.07458484917879105	line.toString(charset)
P-682	-0.0112 -0.0864 -0.1538 -0.0991 -0.0045 -0.0600 -0.1070
S-821	remoteAddressAliases != null
T-821	remoteAddressAliases != null && returnValue
H-821	-0.05435241758823395	remoteAddressAliases != null && returnValue
D-821	-0.05435241758823395	remoteAddressAliases != null && returnValue
P-821	-0.0054 -0.0116 -0.0524 -0.0714 -0.0480 -0.1173 -0.0743
S-573	lock.lock()
T-573	lock.unlock()
H-573	-0.0618428960442543	lock.unlock()
D-573	-0.0618428960442543	lock.unlock()
P-573	-0.0244 -0.1063 -0.0300 -0.0116 -0.0884 -0.1104
S-501	0xff << shift
T-501	0xffL << shift
H-501	-0.039739228785037994	0xffL << shift
D-501	-0.039739228785037994	0xffL << shift
P-501	-0.0451 -0.0465 -0.0213 -0.0120 -0.0190 -0.0944
S-423	SocketTimeoutException.class
T-423	RetriesExhaustedException.class
H-423	-0.5056870579719543	SocketTimeoutException.class
D-423	-0.5056870579719543	SocketTimeoutException.class
P-423	-1.4200 -0.0568 -0.7761 -0.0591 -0.2165
S-332	Mockito.any()
T-332	Mockito.any(ProducerRecord.class)
H-332	-0.05401824042201042	Mockito.any(ProducerRecord.class)
D-332	-0.05401824042201042	Mockito.any(ProducerRecord.class)
P-332	-0.0111 -0.1109 -0.0495 -0.0530 -0.0006 -0.0182 -0.0355 -0.1083 -0.0470 -0.1061
S-145	routeList == null
T-145	routeList == null || routeList.isEmpty()
H-145	-0.10123686492443085	routeList == null || routeList.isEmpty()
D-145	-0.10123686492443085	routeList == null || routeList.isEmpty()
P-145	-0.0154 -0.0603 -0.0050 -0.1264 -0.1527 -0.0624 -0.0528 -0.3862 -0.0229 -0.1146 -0.1150
S-298	propEditor != null
T-298	propEditor != null && !type.isArray()
H-298	-0.3969046473503113	propEditor != null && !propEditor.isEmpty()
D-298	-0.3969046473503113	propEditor != null && !propEditor.isEmpty()
P-298	-0.0707 -1.0510 -0.1400 -0.0911 -0.0536 -0.2244 -0.3424 -1.3708 -0.1979 -1.0171 -0.0955 -0.1083
S-776	new byte[10]
T-776	new byte[11]
H-776	-0.20986859500408173	new byte[11]
D-776	-0.20986859500408173	new byte[11]
P-776	-0.0661 -0.0179 -0.0953 -0.8852 -0.0994 -0.0953
S-605	environmentVariableMode=1
T-605	environmentVariableMode=2
H-605	-0.05799475312232971	environmentVariableMode=2
D-605	-0.05799475312232971	environmentVariableMode=2
P-605	-0.0970 -0.0269 -0.0428 -0.0342 -0.0892
S-86	getCurrCapacity()
T-86	getCurrCapacityUsed()
H-86	-1.2357858419418335	getCurrRetainedCapacity()
D-86	-1.2357858419418335	getCurrRetainedCapacity()
P-86	-0.8864 -0.0291 -4.0411 -0.2655 -3.2432 -0.0801 -0.1050
S-171	(AST)child
T-171	(DetailAST)child
H-171	-0.06319811940193176	(DetailAST)child
D-171	-0.06319811940193176	(DetailAST)child
P-171	-0.0748 -0.0124 -0.0529 -0.1070 -0.0582 -0.0739
S-690	y / vz
T-690	z / vz
H-690	-0.06760404258966446	z / vz
D-690	-0.06760404258966446	z / vz
P-690	-0.0180 -0.1011 -0.0716 -0.0355 -0.1117
S-701	newId > max
T-701	newId >= max
H-701	-0.20827676355838776	newId >= max
D-701	-0.20827676355838776	newId >= max
P-701	-0.5943 -0.0647 -0.2257 -0.0570 -0.0996
S-728	xAmount > 0
T-728	xAmount != 0
H-728	-0.061366159468889236	xAmount != 0
D-728	-0.061366159468889236	xAmount != 0
P-728	-0.0713 -0.0409 -0.0238 -0.0767 -0.0941
S-7	AsyncHttpClient.class
T-7	AsyncHttpClientConfig.class
H-7	-0.05371522903442383	AsyncHttpClientConfig.class
D-7	-0.05371522903442383	AsyncHttpClientConfig.class
P-7	-0.0763 -0.0056 -0.0107 -0.0794 -0.0549 -0.0955
S-688	id=15844
T-688	id=10844
H-688	-0.11274797469377518	id=10844
D-688	-0.11274797469377518	id=10844
P-688	-0.0659 -0.3387 -0.0359 -0.0171 -0.1061
S-447	getCompletePredicate()
T-447	getHandledPredicate()
H-447	-0.0483679436147213	getHandledPredicate()
D-447	-0.0483679436147213	getHandledPredicate()
P-447	-0.0048 -0.0017 -0.0116 -0.0720 -0.1003 -0.0999
S-214	cursor.retry()
T-214	cursor.shouldRetry()
H-214	-0.06287777423858643	cursor.shouldRetry()
D-214	-0.06287777423858643	cursor.shouldRetry()
P-214	-0.0397 -0.1011 -0.0268 -0.0194 -0.0843 -0.1059
S-227	path.toString()
T-227	path.getPath()
H-227	-0.05750526860356331	path.getPath()
D-227	-0.05750526860356331	path.getPath()
P-227	-0.0299 -0.0961 -0.0163 -0.0138 -0.0882 -0.1007
S-290	new StringBuilder(730)
T-290	new StringBuilder(729)
H-290	-0.06459759920835495	new StringBuilder(729)
D-290	-0.06459759920835495	new StringBuilder(729)
P-290	-0.0774 -0.0184 -0.0122 -0.1330 -0.0473 -0.0993
S-409	put(v)
T-409	putBytes(v)
H-409	-0.07936173677444458	putBytes(v)
D-409	-0.07936173677444458	putBytes(v)
P-409	-0.0861 -0.0008 -0.1056 -0.0808 -0.1013 -0.1016
S-184	bodyParts != null
T-184	status != null
H-184	-0.05001186579465866	status != null
D-184	-0.05001186579465866	status != null
P-184	-0.0397 -0.0269 -0.0504 -0.0831
S-395	version == null
T-395	version == null || version.equals("")
H-395	-0.06776376813650131	version == null || version.equals("")
D-395	-0.06776376813650131	version == null || version.equals("")
P-395	-0.0527 -0.0201 -0.0949 -0.0969 -0.0163 -0.1769 -0.0080 -0.0328 -0.1112
S-669	n <= k
T-669	n <= k && i > 0
H-669	-0.13070303201675415	n <= k && i > 0
D-669	-0.13070303201675415	n <= k && i > 0
P-669	-0.2790 -0.5326 -0.0349 -0.0117 -0.0324 -0.0276 -0.0660 -0.0614
S-76	contentType != null
T-76	contentType != null && charset == null
H-76	-0.05849439278244972	contentType != null && charset == null
D-76	-0.05849439278244972	contentType != null && charset == null
P-76	-0.0087 -0.1623 -0.0514 -0.0613 -0.0204 -0.0256 -0.0359 -0.1022
S-588	version == null
T-588	version == null || version.equals("")
H-588	-0.06776376813650131	version == null || version.equals("")
D-588	-0.06776376813650131	version == null || version.equals("")
P-588	-0.0527 -0.0201 -0.0949 -0.0969 -0.0163 -0.1769 -0.0080 -0.0328 -0.1112
S-54	mime == null
T-54	mime == null || mime.value().length == 0
H-54	-0.09173141419887543	mime == null || mime.value().length == 0
D-54	-0.09173141419887543	mime == null || mime.value().length == 0
P-54	-0.0056 -0.0184 -0.0864 -0.0610 -0.0173 -0.5504 -0.0086 -0.0238 -0.0029 -0.1830 -0.0584 -0.0849
S-379	group != null
T-379	group != null && !"0".equals(group)
H-379	-0.6224406957626343	group != null && !"0")
D-379	-0.6224406957626343	group != null && !"0")
P-379	-0.0485 -0.0683 -0.0530 -0.0607 -0.2147 -0.0339 -0.0355 -4.9472 -0.1400
S-505	p == null
T-505	p == null || t < -1
H-505	-0.05243097245693207	p == null || t < -1
D-505	-0.05243097245693207	p == null || t < -1
P-505	-0.1045 -0.0039 -0.1010 -0.0650 -0.0170 -0.0076 -0.0033 -0.1171
S-570	new StringBuilder()
T-570	new StringBuilder(256)
H-570	-0.32786083221435547	new StringBuilder(28)
D-570	-0.32786083221435547	new StringBuilder(28)
P-570	-0.0661 -0.0238 -1.6257 -0.0175 -0.1253 -0.1088
S-219	Object strongReference
T-219	WeakSafeReadWriteLock strongReference
H-219	-0.9353553056716919	WeakReference strongReference
D-219	-0.9353553056716919	WeakReference strongReference
P-219	-1.7022 -2.5959 -0.2412 -0.0448 -0.0927
S-368	group == null
T-368	includedGroup == null
H-368	-0.13619348406791687	includedGroup == null
D-368	-0.13619348406791687	includedGroup == null
P-368	-0.4407 -0.0408 -0.0130 -0.0832 -0.1033
S-41	new Date(0)
T-41	new Date(1)
H-41	-0.045711956918239594	new Date(1)
D-41	-0.045711956918239594	new Date(1)
P-41	-0.0665 -0.0153 -0.0081 -0.0930
S-273	Throwable t2
T-273	Exception t2
H-273	-0.07461123168468475	Exception t2
D-273	-0.07461123168468475	Exception t2
P-273	-0.0789 -0.0569 -0.0683 -0.0943
S-266	writeUnlock()
T-266	readUnlock()
H-266	-0.06243589147925377	readUnlock()
D-266	-0.06243589147925377	readUnlock()
P-266	-0.0377 -0.0320 -0.0730 -0.1070
S-259	return false;
T-259	return true;
H-259	-0.06943214684724808	return true;
D-259	-0.06943214684724808	return true;
P-259	-0.0628 -0.0504 -0.0597 -0.1048
S-232	c * b
T-232	c * c
H-232	-0.07187189161777496	c * c
D-232	-0.07187189161777496	c * c
P-232	-0.0166 -0.1557 -0.0197 -0.0955
S-208	count <= 0
T-208	count < 0
H-208	-0.06783098727464676	count < 0
D-208	-0.06783098727464676	count < 0
P-208	-0.0348 -0.0722 -0.0778 -0.0865
S-132	i > 0
T-132	i >= 0
H-132	-0.06263332813978195	i >= 0
D-132	-0.06263332813978195	i >= 0
P-132	-0.0269 -0.0450 -0.0779 -0.1007
S-164	id=50
T-164	id=48
H-164	-0.05969277024269104	id=48
D-164	-0.05969277024269104	id=48
P-164	-0.0693 -0.0545 -0.0077 -0.1073
S-283	id=42
T-283	id=40
H-283	-0.05550946295261383	id=40
D-283	-0.05550946295261383	id=40
P-283	-0.0628 -0.0514 -0.0015 -0.1063
S-53	id=21
T-53	id=19
H-53	-0.0788433849811554	id=20
D-53	-0.0788433849811554	id=20
P-53	-0.0643 -0.0441 -0.1040 -0.1030
S-299	30 * 1000
T-299	60 * 1000
H-299	-0.07038389891386032	60 * 1000
D-299	-0.07038389891386032	60 * 1000
P-299	-0.0786 -0.0572 -0.0356 -0.1101
S-39	return true;
T-39	return false;
H-39	-0.09326206147670746	return false;
D-39	-0.09326206147670746	return false;
P-39	-0.0587 -0.1446 -0.0567 -0.1130
S-35	return false;
T-35	return true;
H-35	-0.06943214684724808	return true;
D-35	-0.06943214684724808	return true;
P-35	-0.0628 -0.0504 -0.0597 -0.1048
S-740	@PATCH
T-740	@DELETE
H-740	-0.14372795820236206	@DELETE
D-740	-0.14372795820236206	@DELETE
P-740	-0.0861 -0.2483 -0.0968
S-427	nodeString()
T-427	value()
H-427	-0.06012742966413498	value()
D-427	-0.06012742966413498	value()
P-427	-0.0049 -0.0636 -0.1119
S-381	nodeString()
T-381	value()
H-381	-0.06012742966413498	value()
D-381	-0.06012742966413498	value()
P-381	-0.0049 -0.0636 -0.1119
S-281	@PATCH
T-281	@DELETE
H-281	-0.14372795820236206	@DELETE
D-281	-0.14372795820236206	@DELETE
P-281	-0.0861 -0.2483 -0.0968
S-100	IllegalStateException ex
T-100	Exception ex
H-100	-0.4259704053401947	IllegalStateException ex
D-100	-0.4259704053401947	IllegalStateException ex
P-100	-0.6536 -0.0143 -0.2098 -0.8262
S-216	name == null
T-216	key == null
H-216	-0.48567864298820496	name == null || name == null
D-216	-0.48567864298820496	name == null || name == null
P-216	-0.5554 -0.0282 -0.0903 -0.0801 -0.2075 -1.8424 -0.0897 -0.9919
S-130	!returnValue
T-130	returnValue
H-130	-0.08543960750102997	returnValue
D-130	-0.08543960750102997	returnValue
P-130	-0.1033 -0.0675
S-280	id=23
T-280	id=21
H-280	-0.06538436561822891	id=21
D-280	-0.06538436561822891	id=21
P-280	-0.0754 -0.0581 -0.0263 -0.1017
S-730	IllegalArgumentException e
T-730	ConversionException e
H-730	-0.09388016909360886	ConversionException e
D-730	-0.09388016909360886	ConversionException e
P-730	-0.0259 -0.0306 -0.2181 -0.1009
S-649	return 18;
T-649	return 16;
H-649	-0.05572168901562691	return 16;
D-649	-0.05572168901562691	return 16;
P-649	-0.0466 -0.0101 -0.0572 -0.1090
S-262	listeners != null
T-262	eventListeners != null
H-262	-0.06756964325904846	eventListeners != null
D-262	-0.06756964325904846	eventListeners != null
P-262	-0.0352 -0.1066 -0.0530 -0.0744 -0.0687
S-40	listeners != null
T-40	eventListeners != null
H-40	-0.06756964325904846	eventListeners != null
D-40	-0.06756964325904846	eventListeners != null
P-40	-0.0352 -0.1066 -0.0530 -0.0744 -0.0687
S-803	total=10000
T-803	total=2000
H-803	-0.07571742683649063	total=20000
D-803	-0.07571742683649063	total=20000
P-803	-0.0214 -0.0081 -0.1817 -0.0917
S-793	executorCount--
T-793	workerCount--
H-793	-0.04261798784136772	workerCount--
D-793	-0.04261798784136772	workerCount--
P-793	-0.0004 -0.0750 -0.0051 -0.0900
S-782	16 << 10
T-782	32 << 10
H-782	-0.0370880588889122	32 << 10
D-782	-0.0370880588889122	32 << 10
P-782	-0.0059 -0.0133 -0.0327 -0.0965
S-762	size=500
T-762	size=250
H-762	-0.4611680209636688	size=100
D-762	-0.4611680209636688	size=100
P-762	-0.0239 -1.2591 -0.1005
S-747	i >= 0
T-747	i > 0
H-747	-0.08379613608121872	i > 0
D-747	-0.08379613608121872	i > 0
P-747	-0.0319 -0.1198 -0.0857 -0.0978
S-288	attributes == null
T-288	children == null
H-288	-0.04386039078235626	children == null
D-288	-0.04386039078235626	children == null
P-288	-0.0130 -0.0105 -0.0766 -0.0754
S-714	enabled=false
T-714	enabled=true
H-714	-0.10495172441005707	enabled=true
D-714	-0.10495172441005707	enabled=true
P-714	-0.2150 -0.0520 -0.0551 -0.0977
S-350	id=17
T-350	id=20
H-350	-0.12473970651626587	id=20
D-350	-0.12473970651626587	id=20
P-350	-0.0768 -0.0461 -0.2793 -0.0968
S-642	new Date(0)
T-642	new Date(1)
H-642	-0.045711956918239594	new Date(1)
D-642	-0.045711956918239594	new Date(1)
P-642	-0.0665 -0.0153 -0.0081 -0.0930
S-633	return false;
T-633	return true;
H-633	-0.06943214684724808	return true;
D-633	-0.06943214684724808	return true;
P-633	-0.0628 -0.0504 -0.0597 -0.1048
S-468	return true;
T-468	return false;
H-468	-0.09326206147670746	return false;
D-468	-0.09326206147670746	return false;
P-468	-0.0587 -0.1446 -0.0567 -0.1130
S-467	id=40
T-467	id=38
H-467	-0.07046335190534592	id=38
D-467	-0.07046335190534592	id=38
P-467	-0.0820 -0.0589 -0.0380 -0.1030
S-457	timeout=120000
T-457	timeout=30000
H-457	-0.06537645310163498	timeout=30000
D-457	-0.06537645310163498	timeout=30000
P-457	-0.0441 -0.1000 -0.0094 -0.1079
S-407	E extends Model
T-407	T extends Model
H-407	-0.5667622685432434	E extends Model
D-407	-0.5667622685432434	E extends Model
P-407	-0.0407 -0.0050 -1.1793 -1.0421
S-356	id=14
T-356	id=16
H-356	-0.24387036263942719	id=17
D-356	-0.24387036263942719	id=17
P-356	-0.0747 -0.0531 -0.7522 -0.0955
S-43	IllegalArgumentException iae
T-43	Exception iae
H-43	-0.2459300309419632	ConversionException iae
D-43	-0.2459300309419632	ConversionException iae
P-43	-0.8607 -0.0137 -0.0072 -0.1021
S-156	Exception exception
T-156	Throwable exception
H-156	-0.057980626821517944	Throwable exception
D-156	-0.057980626821517944	Throwable exception
P-156	-0.0064 -0.0668 -0.1007
S-187	LinkedList<>
T-187	ArrayList<>
H-187	-0.07963439077138901	ArrayList<>
D-187	-0.07963439077138901	ArrayList<>
P-187	-0.1135 -0.0308 -0.0946
S-323	@Converter
T-323	@Deprecated
H-323	-0.17976818978786469	@Deprecated
D-323	-0.17976818978786469	@Deprecated
P-323	-0.1003 -0.3290 -0.1101
S-138	Throwable t
T-138	Exception t
H-138	-0.08222696930170059	Exception t
D-138	-0.08222696930170059	Exception t
P-138	-0.1101 -0.0344 -0.1021
S-97	Exception e
T-97	IOException e
H-97	-0.06868666410446167	Throwable t
D-97	-0.06868666410446167	Throwable t
P-97	-0.0130 -0.0931 -0.0999
S-196	IOException e
T-196	Exception e
H-196	-0.3159564435482025	Exception e
D-196	-0.3159564435482025	Exception e
P-196	-0.4434 -0.3938 -0.1107
S-361	!first
T-361	first
H-361	-0.08382640779018402	first
D-361	-0.08382640779018402	first
P-361	-0.0439 -0.1238
S-341	Object edge
T-341	E edge
H-341	-0.04442105442285538	E edge
D-341	-0.04442105442285538	E edge
P-341	-0.0175 -0.0225 -0.0933
S-426	Object edge
T-426	E edge
H-426	-0.04442105442285538	E edge
D-426	-0.04442105442285538	E edge
P-426	-0.0175 -0.0225 -0.0933
S-475	Throwable t
T-475	Exception t
H-475	-0.08222696930170059	Exception t
D-475	-0.08222696930170059	Exception t
P-475	-0.1101 -0.0344 -0.1021
S-662	@Converter
T-662	@Deprecated
H-662	-0.17976818978786469	@Deprecated
D-662	-0.17976818978786469	@Deprecated
P-662	-0.1003 -0.3290 -0.1101
S-736	return 0;
T-736	return 1;
H-736	-0.05724178999662399	return 1;
D-736	-0.05724178999662399	return 1;
P-736	-0.0614 -0.0093 -0.1010
S-485	services=8
T-485	services=9
H-485	-0.19661791622638702	services=4
D-485	-0.19661791622638702	services=4
P-485	-0.0510 -0.4382 -0.1007
S-167	getTimeout()
T-167	getConnectTimeout()
H-167	-0.09290943294763565	getConnectTimeout()
D-167	-0.09290943294763565	getConnectTimeout()
P-167	-0.1082 -0.0354 -0.1100 -0.1014 -0.1095
S-83	Exception exception
T-83	Throwable exception
H-83	-0.057980626821517944	Throwable exception
D-83	-0.057980626821517944	Throwable exception
P-83	-0.0064 -0.0668 -0.1007
S-609	-1
T-609	1
H-609	-0.4290402829647064	-1L
D-609	-0.4290402829647064	-1L
P-609	-1.1283 -0.0629 -0.0959
S-477	-1
T-477	1
H-477	-0.4290402829647064	-1L
D-477	-0.4290402829647064	-1L
P-477	-1.1283 -0.0629 -0.0959
S-315	T
T-315	E
H-315	-0.2059691697359085	T1
D-315	-0.2059691697359085	T1
P-315	-0.4809 -0.0095 -0.1275
S-755	-1
T-755	-2
H-755	-0.4290402829647064	-1L
D-755	-0.4290402829647064	-1L
P-755	-1.1283 -0.0629 -0.0959
S-799	active
T-799	!active
H-799	-0.9689309597015381	active == null
D-799	-0.9689309597015381	active == null
P-799	-0.6640 -2.0496 -1.0413 -0.1209
S-17	-1
T-17	1
H-17	-0.4290402829647064	-1L
D-17	-0.4290402829647064	-1L
P-17	-1.1283 -0.0629 -0.0959
S-472	allGroupingColumns.isEmpty()
T-472	groupingSets.isEmpty()
H-472	-0.17265884578227997	allGroupingColumns == null || allGroupingColumns.isEmpty()
D-472	-0.17265884578227997	allGroupingColumns == null || allGroupingColumns.isEmpty()
P-472	-1.0743 -0.1871 -0.0159 -0.1721 -0.0725 -0.0393 -0.0920 -0.2343 -0.0189 -0.0983 -0.0300 -0.1120 -0.0977
S-308	!traceIds.isEmpty()
T-308	traceIds.isEmpty()
H-308	-0.07620321959257126	traceIds.isEmpty()
D-308	-0.07620321959257126	traceIds.isEmpty()
P-308	-0.0872 -0.0314 -0.1219 -0.0402 -0.0889 -0.0876
S-483	NoopSegmentPublisher.class
T-483	DbSegmentPublisher.class
H-483	-0.47336888313293457	ServiceAnnouncingSegmentPublisher.class
D-483	-0.47336888313293457	ServiceAnnouncingSegmentPublisher.class
P-483	-3.8053 -0.0676 -0.0626 -0.0053 -0.0036 -0.0697 -0.0907 -0.0475 -0.1081
S-671	checkpointPath.getPath()
T-671	checkpointPath.toString()
H-671	-0.21958035230636597	checkpointPath.toString()
D-671	-0.21958035230636597	checkpointPath.toString()
P-671	-0.8166 -0.0457 -0.0949 -0.1771 -0.0742 -0.1090
S-661	{11,6.5f}
T-661	{11,7.0f}
H-661	-0.09696323424577713	{11,6.5f}
D-661	-0.09696323424577713	{11,6.5f}
P-661	-0.0236 -0.2442 -0.1775 -0.0486 -0.0729 -0.0376 -0.0744
S-560	SpringBootWebSecurityConfiguration.class
T-560	SecurityAutoConfiguration.class
H-560	-0.07075825333595276	SecurityAutoConfiguration.class
D-560	-0.07075825333595276	SecurityAutoConfiguration.class
P-560	-0.0166 -0.0031 -0.0739 -0.1589 -0.0610 -0.1111
S-176	dstPath.getPath()
T-176	dstPath.toString()
H-176	-0.059574101120233536	dstPath.toString()
D-176	-0.059574101120233536	dstPath.toString()
P-176	-0.0292 -0.0564 -0.0868 -0.0181 -0.0659 -0.1011
S-745	{11,6.5f}
T-745	{11,7.0f}
H-745	-0.09696323424577713	{11,6.5f}
D-745	-0.09696323424577713	{11,6.5f}
P-745	-0.0236 -0.2442 -0.1775 -0.0486 -0.0729 -0.0376 -0.0744
S-376	mapper.getJsonFactory()
T-376	mapper.getFactory()
H-376	-0.09189514815807343	mapper.getFactory()
D-376	-0.09189514815807343	mapper.getFactory()
P-376	-0.0521 -0.0915 -0.0563 -0.1579 -0.0820 -0.1116
S-169	clearFromMember.start()
T-169	clearFromMember.join()
H-169	-0.8735039830207825	clearFromMember.start()
D-169	-0.8735039830207825	clearFromMember.start()
P-169	-4.0649 -0.0481 -0.0434 -0.0918 -0.0474 -1.5395 -0.2794
S-253	UndertowServletWebServer.class
T-253	UndertowWebServer.class
H-253	-0.07261313498020172	UndertowWebServer.class
D-253	-0.07261313498020172	UndertowWebServer.class
P-253	-0.0659 -0.0097 -0.1137 -0.0814 -0.0622 -0.1027
S-231	RuntimeGlue optionalGlue
T-231	Glue optionalGlue
H-231	-0.04293283075094223	Glue optionalGlue
D-231	-0.04293283075094223	Glue optionalGlue
P-231	-0.0109 -0.0436 -0.0056 -0.0186 -0.0191 -0.1598
S-205	isTestOnBorrow()
T-205	isTestOnReturn()
H-205	-0.07473333925008774	isTestOnReturn()
D-205	-0.07473333925008774	isTestOnReturn()
P-205	-0.0768 -0.0762 -0.0346 -0.0685 -0.0684 -0.1239
S-182	ChannelBuffers.dynamicBuffer()
T-182	ChannelBuffers.buffer(2)
H-182	-0.04784305393695831	ChannelBuffers.buffer(2)
D-182	-0.04784305393695831	ChannelBuffers.buffer(2)
P-182	-0.0254 -0.0091 -0.1017 -0.0252 -0.0174 -0.1083
S-550	sizeNeeded >= items.length
T-550	sizeNeeded > items.length
H-550	-0.06342288106679916	sizeNeeded > items.length
D-550	-0.06342288106679916	sizeNeeded > items.length
P-550	-0.0342 -0.0354 -0.0457 -0.0225 -0.1009 -0.0990 -0.1063
S-748	dstPath.getPath()
T-748	dstPath.toString()
H-748	-0.059574101120233536	dstPath.toString()
D-748	-0.059574101120233536	dstPath.toString()
P-748	-0.0292 -0.0564 -0.0868 -0.0181 -0.0659 -0.1011
S-15	new ClobTypeHandler()
T-15	new StringTypeHandler()
H-15	-0.06415586173534393	new StringTypeHandler()
D-15	-0.06415586173534393	new StringTypeHandler()
P-15	-0.0730 -0.0002 -0.0635 -0.0773 -0.1068
S-353	acquiredChannelCount <= maxConnections
T-353	acquiredChannelCount < maxConnections
H-353	-0.03728603571653366	acquiredChannelCount < maxConnections
D-353	-0.03728603571653366	acquiredChannelCount < maxConnections
P-353	-0.0290 -0.0263 -0.0393 -0.0116 -0.0464 -0.0188 -0.0897
S-317	Character.toLowerCase(ch)
T-317	Character.toUpperCase(ch)
H-317	-0.06918184459209442	Character.toUpperCase(ch)
D-317	-0.06918184459209442	Character.toUpperCase(ch)
P-317	-0.0375 -0.0936 -0.0574 -0.0807 -0.0315 -0.0847 -0.0989
S-520	toHeapData(key)
T-520	toEventData(key)
H-520	-0.09293293952941895	toEventData(key)
D-520	-0.09293293952941895	toEventData(key)
P-520	-0.1560 -0.1530 -0.0414 -0.0822 -0.0373 -0.0812 -0.0995
S-439	maxPendingPersists > 0
T-439	maxPendingPersists <= 0
H-439	-0.06725543737411499	maxPendingPersists <= 0
D-439	-0.06725543737411499	maxPendingPersists <= 0
P-439	-0.0607 -0.0386 -0.0381 -0.0397 -0.1023 -0.0995 -0.0918
S-433	zkWorker.getWorker()
T-433	zkWorker2.getWorker()
H-433	-0.03990233317017555	zkWorker2.getWorker()
D-433	-0.03990233317017555	zkWorker2.getWorker()
P-433	-0.0141 -0.0145 -0.0408 -0.0374 -0.0198 -0.0535 -0.0993
S-424	idGenerator.generateId()
T-424	idGenerator.generateUuid()
H-424	-0.06586287170648575	idGenerator.generateUuid()
D-424	-0.06586287170648575	idGenerator.generateUuid()
P-424	-0.0833 -0.0275 -0.1047 -0.0375 -0.0147 -0.0775 -0.1160
S-366	request.getServletPath()
T-366	request.getPathInfo()
H-366	-0.07939426600933075	request.getPathInfo()
D-366	-0.07939426600933075	request.getPathInfo()
P-366	-0.0547 -0.1008 -0.0525 -0.1758 -0.0002 -0.0669 -0.1047
S-118	TimeUtils.nanoTime()
T-118	TimeUtils.millis()
H-118	-0.2030346691608429	TimeUtils.nanoTime()
D-118	-0.2030346691608429	TimeUtils.nanoTime()
P-118	-0.0172 -0.0353 -0.0970 -0.0423 -0.0366 -0.9183 -0.2746
S-322	rj.mapProgress()
T-322	rj.reduceProgress()
H-322	-0.05025510489940643	rj.reduceProgress()
D-322	-0.05025510489940643	rj.reduceProgress()
P-322	-0.0448 -0.0231 -0.0836 -0.0058 -0.0215 -0.0706 -0.1025
S-175	to("direct:foo")
T-175	sendTo("direct:foo")
H-175	-0.06399562954902649	sendTo("direct:foo")
D-175	-0.06399562954902649	sendTo("direct:foo")
P-175	-0.0075 -0.0670 -0.0371 -0.0840 -0.0280 -0.1260 -0.0984
S-223	assertEquals(2,data.size())
T-223	assertEquals(3,data.size())
H-223	-0.11918947845697403	assertEquals(3,data.size())
D-223	-0.11918947845697403	assertEquals(3,data.size())
P-223	-0.0347 -0.4097 -0.0565 -0.1075 -0.0440 -0.0797 -0.1023
S-221	new LogVersionMismatchRequest()
T-221	new VersionMismatchLogRequest()
H-221	-0.0518282987177372	new VersionMismatchLogRequest()
D-221	-0.0518282987177372	new VersionMismatchLogRequest()
P-221	-0.0804 -0.0568 -0.0335 -0.0223 -0.0085 -0.0501 -0.1112
S-217	pieces.length <= wordColumn
T-217	pieces.length <= tagColumn
H-217	-0.050103168934583664	pieces.length <= tagColumn
D-217	-0.050103168934583664	pieces.length <= tagColumn
P-217	-0.0256 -0.0855 -0.0362 -0.0616 -0.0274 -0.0355 -0.0789
S-207	lastFailureException instanceof ConnectException
T-207	lastFailureException instanceof SocketTimeoutException
H-207	-0.04408711567521095	lastFailureException instanceof SocketTimeoutException
D-207	-0.04408711567521095	lastFailureException instanceof SocketTimeoutException
P-207	-0.0514 -0.0111 -0.0302 -0.0290 -0.0354 -0.0607 -0.0907
S-177	start.expectedMessageCount(6)
T-177	start.expectedMessageCount(7)
H-177	-0.14304888248443604	start.expectedMessageCount(7)
D-177	-0.14304888248443604	start.expectedMessageCount(7)
P-177	-0.0516 -0.0879 -0.0212 -0.6248 -0.1098 -0.0086 -0.0974
S-712	getter.getRawReturnType()
T-712	getter.getType()
H-712	-0.06710515171289444	getter.getType()
D-712	-0.06710515171289444	getter.getType()
P-712	-0.0421 -0.0979 -0.0251 -0.0651 -0.1053
S-811	DataStream<OUT>
T-811	DataStreamSink<OUT>
H-811	-0.05405464023351669	DataStreamSink<OUT>
D-811	-0.05405464023351669	DataStreamSink<OUT>
P-811	-0.0169 -0.0252 -0.0047 -0.0321 -0.0493 -0.1505 -0.0995
S-802	event.getColumns()
T-802	event.getChangeColumns()
H-802	-0.056633397936820984	event.getChangeColumns()
D-802	-0.056633397936820984	event.getChangeColumns()
P-802	-0.0407 -0.0948 -0.0500 -0.0151 -0.0228 -0.0713 -0.1016
S-634	mock.expectedMessageCount(2)
T-634	mock.expectedMinimumMessageCount(2)
H-634	-0.1235835924744606	mock.expectedMinimumMessageCount(2)
D-634	-0.1235835924744606	mock.expectedMinimumMessageCount(2)
P-634	-0.0554 -0.0899 -0.0219 -0.0713 -0.4987 -0.0251 -0.1028
S-819	sExecutorService.shutdown()
T-819	sExecutorService.shutdownNow()
H-819	-0.057026106864213943	sExecutorService.shutdownNow()
D-819	-0.057026106864213943	sExecutorService.shutdownNow()
P-819	-0.0335 -0.0019 -0.1149 -0.0128 -0.0191 -0.1079 -0.1091
S-822	result.expectedMessageCount(3)
T-822	result.expectedMinimumMessageCount(3)
H-822	-0.25192177295684814	result.expectedMinimumMessageCount(3)
D-822	-0.25192177295684814	result.expectedMinimumMessageCount(3)
P-822	-0.0833 -0.0898 -0.0351 -0.2419 -1.1749 -0.0376 -0.1009
S-676	deletionRetentionStrategy == null
T-676	deletionRetentionStrategyConfig == null
H-676	-0.44681254029273987	deletionRetentionStrategy == null || deletionRetentionStrategy == null
D-676	-0.44681254029273987	deletionRetentionStrategy == null || deletionRetentionStrategy == null
P-676	-0.0938 -0.0153 -0.0128 -0.4203 -0.1039 -0.0626 -0.4683 -0.0315 -0.0149 -3.4054 -0.1841 -0.5488
S-147	context.reloadRequired()
T-147	context.revertReloadRequired()
H-147	-0.05669700354337692	context.revertReloadRequired()
D-147	-0.05669700354337692	context.revertReloadRequired()
P-147	-0.0260 -0.0959 -0.0051 -0.0054 -0.0513 -0.0702 -0.0917 -0.1080
S-557	address.getHostName()
T-557	address.getHostAddress()
H-557	-0.10878051072359085	address.getHostAddress()
D-557	-0.10878051072359085	address.getHostAddress()
P-557	-0.0337 -0.0914 -0.0488 -0.2869 -0.1025 -0.0893 -0.1088
S-532	result.expectedMessageCount(2)
T-532	result.expectedMinimumMessageCount(2)
H-532	-0.10525161772966385	result.expectedMinimumMessageCount(2)
D-532	-0.10525161772966385	result.expectedMinimumMessageCount(2)
P-532	-0.0768 -0.0920 -0.0286 -0.0675 -0.3428 -0.0263 -0.1027
S-511	new Entry[0xff]
T-511	new Entry[2048]
H-511	-0.3765160143375397	new Entry[2048]
D-511	-0.3765160143375397	new Entry[2048]
P-511	-0.0727 -0.0402 -0.2499 -0.0424 -0.0035 -2.1278 -0.0991
S-473	DataStream<OUT>
T-473	DataStreamSink<OUT>
H-473	-0.05405464023351669	DataStreamSink<OUT>
D-473	-0.05405464023351669	DataStreamSink<OUT>
P-473	-0.0169 -0.0252 -0.0047 -0.0321 -0.0493 -0.1505 -0.0995
S-450	node.getNodeName()
T-450	node.getLocalName()
H-450	-0.0703912228345871	node.getLocalName()
D-450	-0.0703912228345871	node.getLocalName()
P-450	-0.0643 -0.0861 -0.0603 -0.0179 -0.0671 -0.0899 -0.1072
S-435	result.expectedMessageCount(3)
T-435	result.expectedMinimumMessageCount(3)
H-435	-0.25192177295684814	result.expectedMinimumMessageCount(3)
D-435	-0.25192177295684814	result.expectedMinimumMessageCount(3)
P-435	-0.0833 -0.0898 -0.0351 -0.2419 -1.1749 -0.0376 -0.1009
S-61	BlockMasterClient.class
T-61	RetryHandlingBlockMasterClient.class
H-61	-0.05601973459124565	RetryHandlingBlockMasterClient.class
D-61	-0.05601973459124565	RetryHandlingBlockMasterClient.class
P-61	-0.0036 -0.0141 -0.0782 -0.0410 -0.0575 -0.1059 -0.0442 -0.1037
S-355	result.expectedMessageCount(3)
T-355	result.expectedMinimumMessageCount(3)
H-355	-0.25192177295684814	result.expectedMinimumMessageCount(3)
D-355	-0.25192177295684814	result.expectedMinimumMessageCount(3)
P-355	-0.0833 -0.0898 -0.0351 -0.2419 -1.1749 -0.0376 -0.1009
S-815	expectedMinimumCount == -1
T-815	expectedMinimumCount == -1 && expectedCount <= 0
H-815	-0.08012790977954865	expectedMinimumCount == -1 && expectedCount <= 0
D-815	-0.08012790977954865	expectedMinimumCount == -1 && expectedCount <= 0
P-815	-0.0473 -0.0254 -0.0414 -0.0431 -0.0593 -0.0341 -0.0257 -0.3099 -0.1933 -0.0318 -0.0701
S-764	typeSerializer.getClass()
T-764	typeSerializer.getDeserializedType()
H-764	-0.05322711914777756	typeSerializer.getDeserializedType()
D-764	-0.05322711914777756	typeSerializer.getDeserializedType()
P-764	-0.0176 -0.0216 -0.1080 -0.2160 -0.0001 -0.0047 -0.0006 -0.0055 -0.0634 -0.0947
S-284	mapJoinTables != null
T-284	(this.getExecContext().getLocalWork() != null && this.getExecContext().getLocalWork().getInputFileChangeSensitive()) && mapJoinTables != null
H-284	-0.2405111938714981	(this.getExecContext().getLocalWork() != null && this.getExecContext().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork() != null && this.getExecContext().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getWork().
D-284	-0.2405111938714981	(this.getExecContext().getLocalWork() != null && this.getExecContext().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork() != null && this.getExecContext().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getLocalWork().getWork().
P-284	-0.0103 -0.0008 -0.0292 -0.0791 -0.0106 -0.0046 -0.0782 -0.1996 -0.0000 -0.0076 -0.0206 -1.0233 -0.0782 -0.0388 -0.4807 -0.0692 -0.0524 -0.0015 -0.0116 -0.0076 -0.0504 -0.0001 -0.0061 -0.0283 -0.1106 -0.0006 -0.0031 -0.0929 -0.1859 -0.0030 -0.0028 -0.2112 -0.1980 -0.0079 -0.0029 -0.2899 -0.1942 -0.0127 -0.0030 -2.5727 -0.5806 -0.0982 -0.0737 -0.1391 -0.1087 -0.0493 -0.0040 -0.0181 -0.0338 -0.0463 -0.0009 -0.0069 -0.0396 -0.0806 -0.0030 -0.0061 -0.0437 -0.1105 -0.0143 -0.0061 -0.0647 -0.1407 -0.0270 -0.0063 -0.0963 -0.1673 -0.0365 -0.0063 -0.1288 -0.1841 -0.0381 -0.0064 -0.1597 -0.1948 -0.0346 -0.0063 -0.1875 -0.1981 -0.0354 -0.0063 -0.2126 -0.1994 -0.0374 -0.0061 -0.2364 -0.2022 -0.0421 -0.0061 -0.2656 -0.2010 -0.0457 -0.0063 -0.2810 -0.1995 -0.0543 -0.0065 -0.2960 -0.1992 -0.0656 -0.0066 -0.3239 -0.2000 -0.0787 -0.0067 -0.3480 -0.2028 -0.0864 -0.0067 -0.3799 -0.2048 -0.0867 -0.0067 -0.4429 -0.2100 -0.0840 -0.0067 -0.4975 -0.2170 -0.0857 -0.0067 -0.5530 -0.2261 -0.0968 -0.0068 -0.5990 -0.2354 -0.1177 -0.0069 -0.6253 -0.2458 -0.1547 -0.0073 -0.6431 -0.2526 -0.1920 -0.0075 -0.6441 -0.2574 -0.2303 -0.0078 -0.6006 -0.2611 -0.2682 -0.0082 -0.5595 -0.2612 -0.3037 -0.0086 -0.5289 -0.2590 -0.3229 -0.0090 -0.4826 -0.2578 -0.3356 -0.0093 -0.4200 -0.2547 -0.3200 -0.0096 -0.3688 -0.2522 -0.2902 -0.0100 -0.3212 -0.2486 -0.2405 -0.0102 -0.2973 -0.2498 -0.2117 -0.0102 -0.2768 -0.2529 -0.1986 -0.0104 -0.2674 -0.2599 -0.2163 -0.0105 -0.2700 -0.2713 -0.2537 -0.0106 -0.2790 -0.2854 -0.3057 -0.0109 -0.2977 -0.3031 -0.3847 -0.0112 -0.3233 -0.3193 -0.4797 -0.0114 -0.3553 -0.3380 -2.0963 -0.4343 -11.2880
S-487	new NotSupportedException()
T-487	new NotSupportedException("getResultSetInfo() is not supported by this resource adapter as per spec 15.11.3")
H-487	-0.3214990794658661	new NotSupportedException("'level' cannot be null")
D-487	-0.3214990794658661	new NotSupportedException("'level' cannot be null")
P-487	-0.0721 -0.4496 -0.0164 -0.0236 -0.1819 -2.5820 -0.4370 -0.0061 -0.0744 -0.0245 -0.0679 -0.1416 -0.1025
S-537	type != EventType.QUERY
T-537	type != EventType.QUERY && type != EventType.INSERT && type != EventType.UPDATE && type != EventType.DELETE
H-537	-0.1040816605091095	type != EventType.QUERY && type != EventType.INSERT && type != EventType.UPDATE && type != EventType.DELETE
D-537	-0.1040816605091095	type != EventType.QUERY && type != EventType.INSERT && type != EventType.UPDATE && type != EventType.DELETE
P-537	-0.0243 -0.0890 -0.0206 -0.0871 -0.1023 -0.2882 -0.0230 -0.0573 -0.0299 -0.0965 -0.0371 -0.0867 -0.0287 -0.0913 -0.0217 -0.0919 -0.0173 -0.2943 -0.0316 -0.0877 -0.0230 -0.1019 -0.6902 -0.0763
S-331	new ASMClassLoader()
T-331	new ASMClassLoader(ASMSerializerFactory.class.getClassLoader())
H-331	-0.42234569787979126	new ASMClassLoader(loader)
D-331	-0.42234569787979126	new ASMClassLoader(loader)
P-331	-0.0789 -0.9104 -0.0426 -0.0278 -0.4970 -1.3792 -0.3344 -0.1084
S-636	patientExitObs != null
T-636	patientExitObs != null && patientExitObs.size() > 0
H-636	-0.5344206094741821	patientExitObs != null && patientExitObs != null
D-636	-0.5344206094741821	patientExitObs != null && patientExitObs != null
P-636	-0.0289 -0.0222 -0.0033 -0.0938 -0.0566 -0.0665 -0.0216 -0.0237 -0.0045 -5.8964 -0.0988 -0.0966
S-436	AnimationAdapter<T>
T-436	PropertyValuesAnimationAdapter<T>
H-436	-0.08072418719530106	PropertyValuesAnimationAdapter<T>
D-436	-0.08072418719530106	PropertyValuesAnimationAdapter<T>
P-436	-0.0018 -0.2912 -0.0110 -0.0513 -0.0668 -0.0429 -0.0714 -0.1094
S-498	return sinkMaxBufferSize;
T-498	return maxPagePartitioningBufferSize;
H-498	-0.08961069583892822	return maxPagePartitioningBufferSize;
D-498	-0.08961069583892822	return maxPagePartitioningBufferSize;
P-498	-0.0375 -0.0608 -0.0850 -0.1444 -0.0628 -0.1631 -0.0587 -0.1046
S-405	new UnsupportedOperationException()
T-405	new UnsupportedOperationException(getClass().getName())
H-405	-0.20322179794311523	new UnsupportedOperationException("'level' cannot be null")
D-405	-0.20322179794311523	new UnsupportedOperationException("'level' cannot be null")
P-405	-0.0642 -0.0910 -0.0399 -0.0382 -0.0695 -1.1748 -0.8230 -0.0052 -0.0465 -0.0234 -0.0639 -0.0997 -0.1025
S-496	new Notification(notification)
T-496	new Notification(notification,nodeService)
H-496	-0.07170102000236511	new Notification(notification,nodeService)
D-496	-0.07170102000236511	new Notification(notification,nodeService)
P-496	-0.0723 -0.0177 -0.1094 -0.0228 -0.1355 -0.0222 -0.0241 -0.1406 -0.1007
S-67	findDelegate(name)
T-67	findDelegateForNewObject(name)
H-67	-0.7454925179481506	findDelegate(name,true)
D-67	-0.7454925179481506	findDelegate(name,true)
P-67	-0.0412 -2.0896 -0.0886 -1.4889 -1.1589 -0.9123 -0.0836 -0.1009
S-59	findDelegate(name)
T-59	findDelegateForNewObject(name)
H-59	-0.7454925179481506	findDelegate(name,true)
D-59	-0.7454925179481506	findDelegate(name,true)
P-59	-0.0412 -2.0896 -0.0886 -1.4889 -1.1589 -0.9123 -0.0836 -0.1009
S-689	page.getSizeInBytes()
T-689	page.getRetainedSizeInBytes()
H-689	-0.08518350124359131	page.getLogicalSizeInBytes()
D-689	-0.08518350124359131	page.getLogicalSizeInBytes()
P-689	-0.0292 -0.1019 -0.0572 -0.1621 -0.0437 -0.0991 -0.1032
S-386	result.expectedMessageCount(2)
T-386	result.expectedMinimumMessageCount(2)
H-386	-0.10525161772966385	result.expectedMinimumMessageCount(2)
D-386	-0.10525161772966385	result.expectedMinimumMessageCount(2)
P-386	-0.0768 -0.0920 -0.0286 -0.0675 -0.3428 -0.0263 -0.1027
S-327	Thread.sleep(500)
T-327	Thread.sleep(500L)
H-327	-0.17807869613170624	Thread.sleep(500L)
D-327	-0.17807869613170624	Thread.sleep(500L)
P-327	-0.0332 -0.0932 -0.0151 -0.8887 -0.0335 -0.0745 -0.1084
S-336	DEFAULT_MAX=1024
T-336	DEFAULT_MAX=4096
H-336	-0.5410255789756775	DEFAULT_MAX=1024
D-336	-0.5410255789756775	DEFAULT_MAX=1024
P-336	-0.0422 -0.0856 -0.0138 -2.7587 -0.1837 -0.1622
S-150	this(type,0);
T-150	this(type,1);
H-150	-0.06897513568401337	this(type,1);
D-150	-0.06897513568401337	this(type,1);
P-150	-0.0634 -0.0957 -0.0379 -0.1021 -0.0162 -0.0985
S-158	lockForRegularUsage()
T-158	lockForRescale()
H-158	-0.044656556099653244	lockForRescale()
D-158	-0.044656556099653244	lockForRescale()
P-158	-0.0124 -0.0430 -0.0201 -0.0388 -0.0497 -0.1038
S-85	view.getCurrentMode()
T-85	view.getMode()
H-85	-0.09241614490747452	view.getMode()
D-85	-0.09241614490747452	view.getMode()
P-85	-0.1357 -0.1390 -0.0607 -0.0052 -0.1091 -0.1048
S-96	activeFrom.getTime()
T-96	expiresOn.getTime()
H-96	-0.060224659740924835	expiresOn.getTime()
D-96	-0.060224659740924835	expiresOn.getTime()
P-96	-0.0163 -0.0498 -0.0887 -0.0340 -0.0741 -0.0984
S-107	exchange.getOut()
T-107	exchange.getIn()
H-107	-0.07340173423290253	exchange.getIn()
D-107	-0.07340173423290253	exchange.getIn()
P-107	-0.0464 -0.0930 -0.0635 -0.0520 -0.0816 -0.1040
S-119	new StringBuilder(247)
T-119	new StringBuilder(246)
H-119	-0.08852451294660568	new StringBuilder(246)
D-119	-0.08852451294660568	new StringBuilder(246)
P-119	-0.0741 -0.0227 -0.1076 -0.1300 -0.0992 -0.0975
S-58	RawUDPInput.class
T-58	RawTCPInput.class
H-58	-0.05476868152618408	RawTCPInput.class
D-58	-0.05476868152618408	RawTCPInput.class
P-58	-0.0147 -0.0112 -0.0323 -0.1131 -0.0526 -0.1047
S-33	Thread.sleep(50)
T-33	Thread.sleep(100)
H-33	-0.2036682814359665	Thread.sleep(100)
D-33	-0.2036682814359665	Thread.sleep(100)
P-33	-0.0324 -0.0865 -0.0160 -0.8843 -0.0904 -0.1125
S-159	new StringBuilder(561)
T-159	new StringBuilder(560)
H-159	-0.05885223671793938	new StringBuilder(560)
D-159	-0.05885223671793938	new StringBuilder(560)
P-159	-0.0617 -0.0418 -0.0670 -0.0581 -0.0270 -0.0976
S-168	32 * 1024 * 1024
T-168	10 * 1024 * 1024
H-168	-0.08672168105840683	10 * 1024 * 1024
D-168	-0.08672168105840683	10 * 1024 * 1024
P-168	-0.0732 -0.1485 -0.0332 -0.1492 -0.0225 -0.0938
S-264	error.expectedMessageCount(2)
T-264	error.expectedMinimumMessageCount(2)
H-264	-0.3925422728061676	error.expectedMinimumMessageCount(2)
D-264	-0.3925422728061676	error.expectedMinimumMessageCount(2)
P-264	-0.1231 -0.0913 -0.0325 -0.0421 -2.3313 -0.0269 -0.1007
S-234	System.currentTimeMillis()
T-234	System.nanoTime()
H-234	-0.17898166179656982	System.nanoTime()
D-234	-0.17898166179656982	System.nanoTime()
P-234	-0.5020 -0.1276 -0.2001 -0.0398 -0.1009 -0.1035
S-77	Thread.sleep(2000)
T-77	Thread.sleep(5000)
H-77	-0.07415571063756943	Thread.sleep(3000)
D-77	-0.07415571063756943	Thread.sleep(3000)
P-77	-0.0330 -0.0918 -0.0157 -0.0601 -0.1420 -0.1024
S-190	view.getCurrentMode()
T-190	view.getMode()
H-190	-0.09241614490747452	view.getMode()
D-190	-0.09241614490747452	view.getMode()
P-190	-0.1357 -0.1390 -0.0607 -0.0052 -0.1091 -0.1048
S-518	closeCode < 1002
T-518	closeCode < 1001
H-518	-0.2305361032485962	closeCode < 1003
D-518	-0.2305361032485962	closeCode < 1003
P-518	-0.0310 -0.0202 -0.0787 -0.4906 -0.6561 -0.1065
S-533	id=15842
T-533	id=10842
H-533	-0.10571044683456421	id=10842
D-533	-0.10571044683456421	id=10842
P-533	-0.0658 -0.2438 -0.0337 -0.0752 -0.1100
S-189	size * 1.75f
T-189	size * 1.8f
H-189	-0.6552571058273315	size * 2.75f
D-189	-0.6552571058273315	size * 2.75f
P-189	-0.0201 -0.1546 -3.4929 -0.1003 -0.0657 -0.0979
S-277	id=15873
T-277	id=10873
H-277	-0.11647765338420868	id=10873
D-277	-0.11647765338420868	id=10873
P-277	-0.0609 -0.3099 -0.0116 -0.0964 -0.1036
S-287	id=15872
T-287	id=10872
H-287	-0.0985545888543129	id=10872
D-287	-0.0985545888543129	id=10872
P-287	-0.0600 -0.2313 -0.0172 -0.0739 -0.1103
S-404	id=15802
T-404	id=10802
H-404	-0.12913531064987183	id=10802
D-404	-0.12913531064987183	id=10802
P-404	-0.0611 -0.2793 -0.1768 -0.0220 -0.1065
S-306	Gauge<Object>
T-306	Gauge<Integer>
H-306	-0.05261705815792084	Gauge<Integer>
D-306	-0.05261705815792084	Gauge<Integer>
P-306	-0.0198 -0.0396 -0.0493 -0.0368 -0.0703 -0.1000
S-22	constructor.getTypeParameters()
T-22	constructor.getParameterTypes()
H-22	-0.06709868460893631	constructor.getParameterTypes()
D-22	-0.06709868460893631	constructor.getParameterTypes()
P-22	-0.0361 -0.0869 -0.0880 -0.0151 -0.0732 -0.1032
S-749	STANADALONE
T-749	STANDALONE
H-749	-0.29190218448638916	STANDALONE
D-749	-0.29190218448638916	STANDALONE
P-749	-0.0350 -1.2711 -0.0031 -0.0399 -0.1103
S-750	id=15841
T-750	id=10841
H-750	-0.10158011317253113	id=10841
D-750	-0.10158011317253113	id=10841
P-750	-0.0668 -0.2471 -0.0237 -0.0618 -0.1085
S-2	existing.getState()
T-2	server.getState()
H-2	-0.06961697340011597	server.getState()
D-2	-0.06961697340011597	server.getState()
P-2	-0.0115 -0.0887 -0.0576 -0.0668 -0.0898 -0.1033
S-20	monochrome=false
T-20	monochrome=true
H-20	-0.044272005558013916	monochrome=true
D-20	-0.044272005558013916	monochrome=true
P-20	-0.0290 -0.0262 -0.0295 -0.0567 -0.0213 -0.1030
S-243	this.supervisors
T-243	this.hostToId
H-243	-0.5370648503303528	this.supervisors == null
D-243	-0.5370648503303528	this.supervisors == null
P-243	-0.0643 -0.1024 -0.0472 -0.7016 -0.0196 -3.0305 -0.1531 -0.1778
S-507	getApprovalParameters()
T-507	getRequestParameters()
H-507	-0.061013251543045044	getRequestParameters()
D-507	-0.061013251543045044	getRequestParameters()
P-507	-0.0268 -0.0430 -0.0680 -0.1062
S-805	next.getField(0)
T-805	next.getField(1)
H-805	-0.05423140525817871	next.getField(1)
D-805	-0.05423140525817871	next.getField(1)
P-805	-0.0615 -0.0876 -0.0570 -0.0208 -0.0062 -0.0924
S-36	"Stream " + importer
T-36	"Stream " + importerName
H-36	-0.4812861382961273	"Stream " + streamId
D-36	-0.4812861382961273	"Stream " + streamId
P-36	-0.0583 -0.0236 -0.0862 -0.0843 -2.5688 -0.0666
S-663	new StringBuilder(561)
T-663	new StringBuilder(560)
H-663	-0.05885223671793938	new StringBuilder(560)
D-663	-0.05885223671793938	new StringBuilder(560)
P-663	-0.0617 -0.0418 -0.0670 -0.0581 -0.0270 -0.0976
S-703	bits2[1] == false
T-703	bits2[1] == true
H-703	-0.03783939406275749	bits2[1] == true
D-703	-0.03783939406275749	bits2[1] == true
P-703	-0.0172 -0.0427 -0.0185 -0.0295 -0.0270 -0.0920
S-760	private CSVFilter filter;
T-760	private CsvFilter filter;
H-760	-0.05458889901638031	private CsvFilter filter;
D-760	-0.05458889901638031	private CsvFilter filter;
P-760	-0.0373 -0.0059 -0.0257 -0.0973 -0.0626 -0.0987
S-795	getTablename().getBytes()
T-795	getTablename().getName()
H-795	-0.0447925366461277	getTablename().getName()
D-795	-0.0447925366461277	getTablename().getName()
P-795	-0.0193 -0.0076 -0.0557 -0.0063 -0.0749 -0.1050
S-639	new StringBuilder(561)
T-639	new StringBuilder(560)
H-639	-0.05885223671793938	new StringBuilder(560)
D-639	-0.05885223671793938	new StringBuilder(560)
P-639	-0.0617 -0.0418 -0.0670 -0.0581 -0.0270 -0.0976
S-599	quoteMatcher.group(0)
T-599	quoteMatcher.group(1)
H-599	-0.04686550423502922	quoteMatcher.group(1)
D-599	-0.04686550423502922	quoteMatcher.group(1)
P-599	-0.0357 -0.0126 -0.0845 -0.0345 -0.0186 -0.0953
S-56	mock.expectedMessageCount(1)
T-56	mock.expectedMinimumMessageCount(1)
H-56	-0.13758082687854767	mock.expectedMinimumMessageCount(1)
D-56	-0.13758082687854767	mock.expectedMinimumMessageCount(1)
P-56	-0.0574 -0.0908 -0.0254 -0.3798 -0.2412 -0.0673 -0.1011
S-73	element.getNodeName()
T-73	element.getLocalName()
H-73	-0.11067801713943481	element.getLocalName()
D-73	-0.11067801713943481	element.getLocalName()
P-73	-0.3404 -0.0872 -0.0645 -0.0107 -0.0716 -0.0937 -0.1067
S-87	LOG.isInfoEnabled()
T-87	LOG.isDebugEnabled()
H-87	-0.06200416758656502	LOG.isDebugEnabled()
D-87	-0.06200416758656502	LOG.isDebugEnabled()
P-87	-0.0337 -0.0872 -0.0531 -0.0715 -0.0077 -0.0814 -0.0993
S-116	Thread.sleep(200)
T-116	Thread.sleep(300)
H-116	-0.3788931667804718	Thread.sleep(500)
D-116	-0.3788931667804718	Thread.sleep(500)
P-116	-0.0363 -0.0900 -0.0149 -1.8880 -0.1368 -0.1073
S-653	this.getLimit()
T-653	other.getLimit()
H-653	-0.07249687612056732	other.getLimit()
D-653	-0.07249687612056732	other.getLimit()
P-653	-0.0022 -0.0962 -0.0542 -0.0759 -0.1035 -0.1030
S-304	context.getContextPath()
T-304	request.getContextPath()
H-304	-0.1355143040418625	request.getContextPath()
D-304	-0.1355143040418625	request.getContextPath()
P-304	-0.4470 -0.1048 -0.0279 -0.0482 -0.0830 -0.1022
S-451	future.isCancelled()
T-451	future.isDone()
H-451	-0.5446429252624512	future.isCancelled() || future. isCancelled()
D-451	-0.5446429252624512	future.isCancelled() || future. isCancelled()
P-451	-0.1521 -0.1128 -0.4135 -0.0139 -0.1087 -0.1498 -0.1862 -0.1059 -4.5721 -0.0702 -0.1060
S-452	stackTrace.length < depth
T-452	stackTrace.length <= depth
H-452	-0.06314720958471298	stackTrace.length <= depth
D-452	-0.06314720958471298	stackTrace.length <= depth
P-452	-0.0247 -0.0759 -0.0551 -0.0589 -0.0656 -0.0987
S-334	activeFrom.getTime()
T-334	expiresOn.getTime()
H-334	-0.060224659740924835	expiresOn.getTime()
D-334	-0.060224659740924835	expiresOn.getTime()
P-334	-0.0163 -0.0498 -0.0887 -0.0340 -0.0741 -0.0984
S-349	in.readInt()
T-349	in.readLong()
H-349	-0.15097875893115997	in.readLong()
D-349	-0.15097875893115997	in.readLong()
P-349	-0.0755 -0.0915 -0.0686 -0.4902 -0.0785 -0.1015
S-410	{14,3.0f}
T-410	{14,3.5f}
H-410	-0.045090410858392715	{14,3.5f}
D-410	-0.045090410858392715	{14,3.5f}
P-410	-0.0537 -0.0168 -0.0086 -0.0607 -0.0439 -0.0868
S-448	System.nanoTime()
T-448	System.currentTimeMillis()
H-448	-0.27931955456733704	System.nanoTime()
D-448	-0.27931955456733704	System.nanoTime()
P-448	-0.2232 -0.1208 -0.0197 -0.0298 -0.6541 -0.6283
S-313	littleEndian.order()
T-313	bigEndian.order()
H-313	-0.0568973645567894	bigEndian.order()
D-313	-0.0568973645567894	bigEndian.order()
P-313	-0.0118 -0.0477 -0.0873 -0.0294 -0.0626 -0.1026
S-589	new StringBuilder(246)
T-589	new StringBuilder(245)
H-589	-0.0776912122964859	new StringBuilder(245)
D-589	-0.0776912122964859	new StringBuilder(245)
P-589	-0.0658 -0.0255 -0.0742 -0.1922 -0.0173 -0.0911
S-458	CompletableFuture<Boolean>
T-458	CompletableFuture<Void>
H-458	-0.04764034226536751	CompletableFuture<Void>
D-458	-0.04764034226536751	CompletableFuture<Void>
P-458	-0.0114 -0.0160 -0.0341 -0.0187 -0.0997 -0.1059
S-488	callTimeoutMs=5000
T-488	callTimeoutMs=10000
H-488	-0.05259963497519493	callTimeoutMs=10000
D-488	-0.05259963497519493	callTimeoutMs=10000
P-488	-0.0497 -0.0359 -0.0235 -0.0192 -0.0866 -0.1007
S-510	args.length != 2
T-510	args.length != 3
H-510	-0.12982557713985443	args.length != 3
D-510	-0.12982557713985443	args.length != 3
P-510	-0.0167 -0.0861 -0.0573 -0.2967 -0.2207 -0.1014
S-551	new StringBuilder(239)
T-551	new StringBuilder(238)
H-551	-0.05554993823170662	new StringBuilder(238)
D-551	-0.05554993823170662	new StringBuilder(238)
P-551	-0.0719 -0.0324 -0.0394 -0.0093 -0.0774 -0.1029
S-136	id=15863
T-136	id=10863
H-136	-0.21146464347839355	id=10863
D-136	-0.21146464347839355	id=10863
P-136	-0.0700 -0.7768 -0.0295 -0.0754 -0.1056
S-442	rowsRet <= 0
T-442	rowsRet <= 0 || work.getLimit() == totalRows
H-442	-0.7974937558174133	rowsRet < 0
D-442	-0.7974937558174133	rowsRet < 0
P-442	-2.1857 -0.0159 -1.6018 -0.0951 -0.0889
S-94	bindings.get()
T-94	bindings.or(ImmutableMap.<ColumnHandle,Object>of())
H-94	-0.53045654296875	bindings.or(ImmutableList.of())
D-94	-0.53045654296875	bindings.or(ImmutableList.of())
P-94	-0.0254 -0.1004 -0.0158 -0.1058 -0.0179 -3.4966 -1.3718 -0.0451 -0.0244 -0.1014
S-255	serialVersionUID=1L
T-255	serialVersionUID=1975269372645791816L
H-255	-0.6141709089279175	serialVersionUID=19752693726457916L
D-255	-0.6141709089279175	serialVersionUID=19752693726457916L
P-255	-0.0276 -0.0180 -0.4332 -0.1080 -0.0893 -0.4515 -0.8328 -0.0681 -0.2247 -0.4127 -4.7839 -0.2425 -0.2920
S-655	sendMessage() == false
T-655	currentStage != NodeStage.DONE && sendMessage() == false
H-655	-0.06555100530385971	currentStage != NodeStage.DONE && sendMessage() == false
D-655	-0.06555100530385971	currentStage != NodeStage.DONE && sendMessage() == false
P-655	-0.1327 -0.0011 -0.0612 -0.0046 -0.0392 -0.0898 -0.0522 -0.1506 -0.0880 -0.0819 -0.0374 -0.0279 -0.0854
S-242	elementClass != null
T-242	elementClass != null && Modifier.isPublic(elementClass.getModifiers())
H-242	-0.22784721851348877	elementClass != null && !elementClass.isEmpty()
D-242	-0.22784721851348877	elementClass != null && !elementClass.isEmpty()
P-242	-0.4080 -0.0381 -0.1001 -0.0745 -0.1453 -0.5097 -0.4137 -0.0516 -0.1827 -0.5821 -0.1392 -0.0891
S-503	detailNode != null
T-503	detailNode != null && detailNode.getNodeType().equals(JsonNodeType.OBJECT)
H-503	-0.04074561968445778	detailNode != null && detailNode.getNodeType().equals(JsonNodeType.OBJECT)
D-503	-0.04074561968445778	detailNode != null && detailNode.getNodeType().equals(JsonNodeType.OBJECT)
P-503	-0.0061 -0.0511 -0.0782 -0.1051 -0.0591 -0.0074 -0.0259 -0.0672 -0.0163 -0.0055 -0.0092 -0.1267 -0.0195 -0.0013 -0.0074 -0.0254 -0.0192 -0.0532 -0.0905
S-44	new BadRequestException()
T-44	new BadRequestException("Field " + field + " is not of a numeric type and the cardinality could not be calculated either.",e1)
H-44	-0.05071390047669411	new BadRequestException("Field " + field + " is not of a numeric type and the cardinality could not be calculated either.",e1)
D-44	-0.05071390047669411	new BadRequestException("Field " + field + " is not of a numeric type and the cardinality could not be calculated either.",e1)
P-44	-0.0699 -0.0363 -0.0176 -0.0653 -0.0085 -0.0329 -0.0519 -0.0764 -0.0128 -0.0401 -0.3880 -0.0275 -0.0242 -0.0624 -0.0466 -0.0322 -0.0295 -0.0379 -0.0080 -0.0179 -0.0571 -0.0561 -0.0395 -0.0135 -0.0015 -0.0132 -0.0502 -0.1030
S-726	new IllegalArgumentException()
T-726	new IllegalArgumentException("'level' cannot be null")
H-726	-0.11509938538074493	new IllegalArgumentException("'level' cannot be null")
D-726	-0.11509938538074493	new IllegalArgumentException("'level' cannot be null")
P-726	-0.0750 -0.0873 -0.0553 -0.0232 -0.0552 -0.7206 -0.0033 -0.0956 -0.0248 -0.0199 -0.1175 -0.1035
S-239	cacheConfig.isPopulateCache()
T-239	cacheConfig.isUseCache()
H-239	-0.08687479794025421	cacheConfig.isUseCache()
D-239	-0.08687479794025421	cacheConfig.isUseCache()
P-239	-0.0789 -0.0769 -0.0987 -0.1508 -0.0750 -0.0220 -0.0957 -0.0971
S-149	new RuntimeException(msg.getMessage())
T-149	new IllegalStateException(msg.getMessage())
H-149	-0.07116015255451202	new IllegalStateException(msg.getMessage())
D-149	-0.07116015255451202	new IllegalStateException(msg.getMessage())
P-149	-0.0740 -0.0636 -0.0859 -0.0805 -0.0239 -0.0866 -0.0282 -0.0965 -0.1013
S-133	runningTasks.get(assignedTask)
T-133	runningTasks.remove(assignedTask)
H-133	-0.05527292937040329	runningTasks.remove(assignedTask)
D-133	-0.05527292937040329	runningTasks.remove(assignedTask)
P-133	-0.0378 -0.0345 -0.1095 -0.0209 -0.0437 -0.0228 -0.0464 -0.0814 -0.1005
S-74	websocketComponent.setMaxThreads(11)
T-74	websocketComponent.setMaxThreads(20)
H-74	-0.05099033564329147	websocketComponent.setMaxThreads(20)
D-74	-0.05099033564329147	websocketComponent.setMaxThreads(20)
P-74	-0.0397 -0.0156 -0.0867 -0.0479 -0.0376 -0.0121 -0.0622 -0.0527 -0.1044
S-617	authentication.hasDefined(USERS)
T-617	authentication.has(USERS)
H-617	-0.06516233086585999	authentication.has(USERS)
D-617	-0.06516233086585999	authentication.has(USERS)
P-617	-0.0380 -0.0827 -0.0869 -0.0309 -0.0384 -0.0593 -0.0822 -0.1029
S-178	CONCURRENT_THREAD_COUNT=300
T-178	CONCURRENT_THREAD_COUNT=30
H-178	-0.047037024050951004	CONCURRENT_THREAD_COUNT=30
D-178	-0.047037024050951004	CONCURRENT_THREAD_COUNT=30
P-178	-0.0233 -0.0193 -0.0777 -0.0136 -0.0784 -0.0261 -0.0534 -0.0297 -0.1018
S-758	status().isMovedTemporarily()
T-758	status().isFound()
H-758	-0.4347613453865051	status().isMovedTemporarily() || status().isCancelled()
D-758	-0.4347613453865051	status().isMovedTemporarily() || status().isCancelled()
P-758	-0.1045 -0.0638 -0.0569 -1.7241 -1.5906 -0.2049 -0.1188 -0.1433 -0.1218 -0.1155 -0.0516 -0.0483 -2.0205 -0.0665 -0.0903
S-270	getFirstByType(type,withProxy)
T-270	getFirstByType(type)
H-270	-0.06456159800291061	getFirstByType(type)
D-270	-0.06456159800291061	getFirstByType(type)
P-270	-0.0278 -0.0145 -0.1133 -0.0407 -0.0849 -0.1062
S-553	Integer.valueOf(tokens[3])
T-553	Integer.parseInt(tokens[3])
H-553	-0.062236566096544266	Integer.parseInt(tokens[3])
D-553	-0.062236566096544266	Integer.parseInt(tokens[3])
P-553	-0.0511 -0.1149 -0.0228 -0.0897 -0.0466 -0.0457 -0.0283 -0.0989
S-604	conf.getSearchBaseURL()
T-604	conf.getRestBaseURL()
H-604	-0.08324510604143143	conf.getRestBaseURL()
D-604	-0.08324510604143143	conf.getRestBaseURL()
P-604	-0.0246 -0.0948 -0.0533 -0.2883 -0.0103 -0.0240 -0.0690 -0.1016
S-527	simple.getFromSentDate()
T-527	simple.getToReceivedDate()
H-527	-0.18058109283447266	simple.getToSentDate()
D-527	-0.18058109283447266	simple.getToSentDate()
P-527	-0.0384 -0.0970 -0.1066 -0.5724 -0.3860 -0.0614 -0.0774 -0.1054
S-10	globalExecutionStats.getSplits()
T-10	globalExecutionStats.getStartedSplits()
H-10	-0.04381628707051277	globalExecutionStats.getStartedSplits()
D-10	-0.04381628707051277	globalExecutionStats.getStartedSplits()
P-10	-0.0293 -0.0140 -0.0187 -0.0907 -0.0489 -0.0011 -0.0202 -0.0691 -0.1025
S-597	setPin(file,false)
T-597	setPin(file,true)
H-597	-0.0782068744301796	setPin(file,true)
D-597	-0.0782068744301796	setPin(file,true)
P-597	-0.0412 -0.0651 -0.0965 -0.0538 -0.0825 -0.0810 -0.0992 -0.1063
S-482	messageHandler.serverAcceptor()
T-482	messageHandler.serverResponder()
H-482	-0.05342365801334381	messageHandler.serverResponder()
D-482	-0.05342365801334381	messageHandler.serverResponder()
P-482	-0.0337 -0.0411 -0.1093 -0.0442 -0.0231 -0.0042 -0.0695 -0.1024
S-620	config.getInputShipStrategy(0)
T-620	config.getInputShipStrategy(1)
H-620	-0.05623093247413635	config.getInputShipStrategy(1)
D-620	-0.05623093247413635	config.getInputShipStrategy(1)
P-620	-0.0934 -0.0916 -0.0677 -0.0525 -0.0125 -0.0170 -0.0132 -0.1020
S-650	assertFalse(dr.isFailure())
T-650	assertTrue(dr.isFailure())
H-650	-0.0611114539206028	assertTrue(dr.isFailure())
D-650	-0.0611114539206028	assertTrue(dr.isFailure())
P-650	-0.0229 -0.0958 -0.0252 -0.0948 -0.0488 -0.0280 -0.0808 -0.0927
S-725	bar.setResultWaitTime(3000)
T-725	bar.setResultWaitTime(1000)
H-725	-0.05449768900871277	bar.setResultWaitTime(4000)
D-725	-0.05449768900871277	bar.setResultWaitTime(4000)
P-725	-0.0328 -0.0771 -0.0511 -0.0414 -0.0200 -0.0238 -0.0803 -0.1095
S-752	visitNode(node,context)
T-752	visitStatement(node,context)
H-752	-0.06226614490151405	visitStatement(node,context)
D-752	-0.06226614490151405	visitStatement(node,context)
P-752	-0.0344 -0.0014 -0.0949 -0.0364 -0.0857 -0.0355 -0.1088 -0.1009
S-400	maxSize > (used / total)
T-400	maxSize < (used / total)
H-400	-0.04796062782406807	maxSize < (used / total)
D-400	-0.04796062782406807	maxSize < (used / total)
P-400	-0.0230 -0.0100 -0.0790 -0.0161 -0.0629 -0.0177 -0.0814 -0.0937
S-493	10 * Constants.SECOND_MS
T-493	300 * Constants.SECOND_MS
H-493	-0.06820797175168991	300 * Constants.SECOND_MS
D-493	-0.06820797175168991	300 * Constants.SECOND_MS
P-493	-0.0023 -0.1097 -0.0318 -0.1005 -0.0872 -0.0689 -0.0311 -0.1142
S-202	beansXml.createAlternatives()
T-202	beansXml.getOrCreateAlternatives()
H-202	-0.046211205422878265	beansXml.getOrCreateAlternatives()
D-202	-0.046211205422878265	beansXml.getOrCreateAlternatives()
P-202	-0.0188 -0.0429 -0.1134 -0.0034 -0.0244 -0.0195 -0.0069 -0.0831 -0.1036
S-456	Integer.MIN_VALUE + 11
T-456	Integer.MIN_VALUE + 9
H-456	-0.0687364786863327	Integer.MIN_VALUE + 9
D-456	-0.0687364786863327	Integer.MIN_VALUE + 9
P-456	-0.0376 -0.0927 -0.0281 -0.1107 -0.0368 -0.0934 -0.0432 -0.1073
S-318	TestSuiteEnvironment.getServerAddress()
T-318	TestSuiteEnvironment.getHttpAddress()
H-318	-0.06325246393680573	TestSuiteEnvironment.getServerAddressNode1()
D-318	-0.06325246393680573	TestSuiteEnvironment.getServerAddressNode1()
P-318	-0.0401 -0.0362 -0.0928 -0.0620 -0.0290 -0.0248 -0.0235 -0.1631 -0.0977
S-374	conf.getSearchBaseURL()
T-374	conf.getRestBaseURL()
H-374	-0.08324510604143143	conf.getRestBaseURL()
D-374	-0.08324510604143143	conf.getRestBaseURL()
P-374	-0.0246 -0.0948 -0.0533 -0.2883 -0.0103 -0.0240 -0.0690 -0.1016
S-188	header.writeBytes(mask)
T-188	out.writeBytes(mask)
H-188	-0.08094724267721176	out.writeBytes(mask)
D-188	-0.08094724267721176	out.writeBytes(mask)
P-188	-0.0455 -0.1161 -0.1347 -0.0291 -0.1010 -0.0272 -0.0925 -0.1015
S-233	out.writeObject(function)
T-233	out.writeData(function)
H-233	-0.06510145217180252	out.writeData(function)
D-233	-0.06510145217180252	out.writeData(function)
P-233	-0.0223 -0.0955 -0.0876 -0.0018 -0.0866 -0.0346 -0.0924 -0.1001
S-236	name="java:/TransactionManager"
T-236	lookup="java:/TransactionManager"
H-236	-0.05472883582115173	lookup="java:/TransactionManager"
D-236	-0.05472883582115173	lookup="java:/TransactionManager"
P-236	-0.0138 -0.0728 -0.0264 -0.0219 -0.0445 -0.0445 -0.1048 -0.1092
S-294	name="java:/ConnectionFactory"
T-294	lookup="java:/ConnectionFactory"
H-294	-0.05246588587760925	lookup="java:/ConnectionFactory"
D-294	-0.05246588587760925	lookup="java:/ConnectionFactory"
P-294	-0.0110 -0.0706 -0.0298 -0.0168 -0.0318 -0.0497 -0.0991 -0.1111
S-455	Integer.valueOf(tokens[3])
T-455	Integer.parseInt(tokens[3])
H-455	-0.062236566096544266	Integer.parseInt(tokens[3])
D-455	-0.062236566096544266	Integer.parseInt(tokens[3])
P-455	-0.0511 -0.1149 -0.0228 -0.0897 -0.0466 -0.0457 -0.0283 -0.0989
S-429	mCurrentBlockLeftByte > tLen
T-429	mCurrentBlockLeftByte >= tLen
H-429	-0.03933655843138695	mCurrentBlockLeftByte >= tLen
D-429	-0.03933655843138695	mCurrentBlockLeftByte >= tLen
P-429	-0.0224 -0.0451 -0.0587 -0.0244 -0.0250 -0.0263 -0.0196 -0.0932
S-383	assertEquals(12,tokens.size())
T-383	assertEquals(9,tokens.size())
H-383	-0.07060334831476212	assertEquals(9,tokens.size())
D-383	-0.07060334831476212	assertEquals(9,tokens.size())
P-383	-0.0373 -0.0920 -0.0715 -0.0135 -0.1052 -0.0607 -0.0788 -0.1058
S-391	buffer.readableBytes() < 4
T-391	buffer.readableBytes() < 8
H-391	-0.0519067719578743	buffer.readableBytes() < 8
D-391	-0.0519067719578743	buffer.readableBytes() < 8
P-391	-0.0289 -0.0929 -0.0181 -0.0440 -0.0535 -0.0515 -0.0237 -0.1027
S-519	@IntMethodAnnotation(-44)
T-519	@InputIntMethodAnnotation(-44)
H-519	-0.06229807436466217	@InputIntMethodAnnotation(-44)
D-519	-0.06229807436466217	@InputIntMethodAnnotation(-44)
P-519	-0.1031 -0.0794 -0.0479 -0.0686 -0.0175 -0.0472 -0.0125 -0.0882 -0.0963
S-425	registered.add(objectName)
T-425	registered.remove(objectName)
H-425	-0.06656020879745483	registered.remove(objectName)
D-425	-0.06656020879745483	registered.remove(objectName)
P-425	-0.0394 -0.0854 -0.0152 -0.0861 -0.0558 -0.0625 -0.0856 -0.1026
S-114	BiMap<Integer,String>
T-114	ImmutableBiMap<Integer,String>
H-114	-0.15623438358306885	ImmutableBiMap<Integer,String>
D-114	-0.15623438358306885	ImmutableBiMap<Integer,String>
P-114	-0.6959 -0.0842 -0.0678 -0.0648 -0.1102 -0.0978 -0.0464 -0.1258 -0.1131
S-102	ps.createRelationship(rel)
T-102	ps.saveRelationship(rel)
H-102	-0.060765597969293594	ps.saveRelationship(rel)
D-102	-0.060765597969293594	ps.saveRelationship(rel)
P-102	-0.0117 -0.1041 -0.0257 -0.0202 -0.0822 -0.0413 -0.0940 -0.1069
S-556	group.shutdownGracefully()
T-556	group.shutdownGracefully(0,10,TimeUnit.SECONDS)
H-556	-0.05490964278578758	group.shutdownGracefully(0,10,TimeUnit.SECONDS)
D-556	-0.05490964278578758	group.shutdownGracefully(0,10,TimeUnit.SECONDS)
P-556	-0.0349 -0.0978 -0.0244 -0.0137 -0.0039 -0.0177 -0.0061 -0.0135 -0.0604 -0.0613 -0.1202 -0.1101 -0.0985 -0.1061
S-131	body.endsWith("6")
T-131	body.endsWith("6") || body.endsWith("10")
H-131	-0.054789114743471146	body.endsWith("6") || body.endsWith("10")
D-131	-0.054789114743471146	body.endsWith("6") || body.endsWith("10")
P-131	-0.0209 -0.0872 -0.0242 -0.0234 -0.0422 -0.0446 -0.1143 -0.0556 -0.0294 -0.0958 -0.0191 -0.0440 -0.0427 -0.0233 -0.0981 -0.1119
S-212	scrollbarsOnTop && scrollX
T-212	!fadeScrollBars && scrollbarsOnTop && scrollX
H-212	-0.2919866442680359	!fadeScrollBars && scrollbars && scrollX
D-212	-0.2919866442680359	!fadeScrollBars && scrollbars && scrollX
P-212	-0.2297 -0.0798 -0.0346 -0.4437 -0.0192 -0.0753 -0.0228 -0.1757 -0.0388 -1.6860 -0.4062
S-240	configList.size() == 0
T-240	configList == null || configList.size() == 0
H-240	-0.07993267476558685	configList == null || configList.size() == 0
D-240	-0.07993267476558685	configList == null || configList.size() == 0
P-240	-0.1054 -0.0886 -0.0095 -0.1260 -0.0714 -0.0559 -0.0435 -0.1197 -0.0810 -0.1226 -0.0276 -0.1060 -0.0820
S-337	c.getPath() == null
T-337	c.getPath() == null && getPath() != null
H-337	-0.1215430498123169	c.getPath() == null && getPath() != null
D-337	-0.1215430498123169	c.getPath() == null && getPath() != null
P-337	-0.0318 -0.0786 -0.0600 -0.0718 -0.0628 -0.0753 -0.0889 -0.6086 -0.1091 -0.0657 -0.1443 -0.0894 -0.0938
S-647	new HashSet<RecordReplicationInfo>()
T-647	new HashSet<RecordReplicationInfo>(recordStore.size())
H-647	-0.06021985784173012	new HashSet<RecordReplicationInfo>(recordStore.size())
D-647	-0.06021985784173012	new HashSet<RecordReplicationInfo>(recordStore.size())
P-647	-0.0721 -0.0252 -0.0426 -0.0273 -0.0395 -0.0492 -0.0650 -0.0250 -0.1713 -0.0664 -0.0673 -0.0268 -0.1052
S-113	String pattern=this.prefix;
T-113	StringBuffer pattern=new StringBuffer(this.prefix);
H-113	-0.13125240802764893	StringBuilder pattern=new StringBuilder(this.prefix);
D-113	-0.13125240802764893	StringBuilder pattern=new StringBuilder(this.prefix);
P-113	-0.6139 -0.0335 -0.0563 -0.0136 -0.0172 -0.1218 -0.0510 -0.1150 -0.0352 -0.2830 -0.1034
S-340	stopwatch.elapsedMillis()
T-340	stopwatch.elapsed(MILLISECONDS)
H-340	-0.08152803033590317	stopwatch.elapsed(MILLISECONDS)
D-340	-0.08152803033590317	stopwatch.elapsed(MILLISECONDS)
P-340	-0.0505 -0.0093 -0.1089 -0.0643 -0.0160 -0.0902 -0.1577 -0.0624 -0.1476 -0.1085
S-413	user.getSystemId() == null
T-413	user.getSystemId() == null || user.getSystemId().equals("")
H-413	-0.562333345413208	user.getSystemId() == null &&SystemId.equals("")
D-413	-0.562333345413208	user.getSystemId() == null &&SystemId.equals("")
P-413	-0.0357 -0.0771 -0.0455 -0.0215 -0.1061 -0.0926 -0.0789 -3.0780 -2.3014 -0.8671 -0.0917 -0.4105 -0.1042
S-289	new java.util.Date()
T-289	new java.util.Date(System.currentTimeMillis() - 3600 * 24)
H-289	-0.460978627204895	new java.util.Date(timeIsGivenInThisTimeZone)
D-289	-0.460978627204895	new java.util.Date(timeIsGivenInThisTimeZone)
P-289	-0.0830 -0.0447 -0.0782 -0.1583 -0.0813 -0.1139 -1.3207 -1.8247 -2.1418 -0.0349 -0.0915 -0.0338 -0.6699 -0.1374 -0.1005
S-517	"LEVEL".equalsIgnoreCase(ident)
T-517	"LEVEL".equalsIgnoreCase(ident) || "CONNECT_BY_ISCYCLE".equalsIgnoreCase(ident)
H-517	-0.3880153000354767	"LEVEL".equalsIgnoreCase(ident) || "LEVEL".equalsIgnoreCase(ident)
D-517	-0.3880153000354767	"LEVEL".equalsIgnoreCase(ident) || "LEVEL".equalsIgnoreCase(ident)
P-517	-0.3847 -0.0200 -0.0755 -0.0039 -0.1057 -0.1656 -0.0693 -0.0819 -0.1417 -3.5063 -0.1796 -0.0146 -0.1125 -0.8827 -0.1738 -0.2904
S-562	processInstanceArray.size() == 0
T-562	processInstanceArray.size() == 0 && StringUtils.isNotEmpty(callActivityBehavior.getProcessDefinitonKey())
H-562	-0.22991317510604858	processInstanceArray == null || processInstanceArray.size() == 0
D-562	-0.22991317510604858	processInstanceArray == null || processInstanceArray.size() == 0
P-562	-0.0238 -0.0572 -2.0322 -0.2739 -0.0717 -0.0438 -0.0328 -0.0881 -0.0641 -0.1018 -0.0286 -0.0918 -0.0790
S-197	this.referenceId == referenceId
T-197	!transactional && this.referenceId == referenceId
H-197	-0.08354337513446808	!this.transactional && this.referenceId == referenceId
D-197	-0.08354337513446808	!this.transactional && this.referenceId == referenceId
P-197	-0.0473 -0.0439 -0.0964 -0.3372 -0.0633 -0.1022 -0.0941 -0.0913 -0.0206 -0.0502 -0.0418 -0.0525 -0.0668 -0.0620
S-261	SLEEP_TIME=500
T-261	SLEEP_TIME=1500
H-261	-0.06517745554447174	SLEEP_TIME=1500
D-261	-0.06517745554447174	SLEEP_TIME=1500
P-261	-0.0326 -0.0259 -0.0073 -0.0740 -0.0600 -0.0592 -0.0747 -0.1691 -0.0838
S-715	ExprEval.of(null)
T-715	ExprEval.ofLong(null)
H-715	-0.40264490246772766	ExprEval.of(null)
D-715	-0.40264490246772766	ExprEval.of(null)
P-715	-0.5459 -0.9419 -0.0879 -0.0933 -0.2214 -0.0633 -1.0247 -0.2428
S-737	ImmutableList.of(interceptors)
T-737	ImmutableList.copyOf(interceptors)
H-737	-0.34707000851631165	ImmutableList.copyOf(interceptors)
D-737	-0.34707000851631165	ImmutableList.copyOf(interceptors)
P-737	-0.0419 -0.1119 -1.5056 -0.0321 -0.0974 -0.9629 -0.1722 -0.1003 -0.0994
S-392	logger.info("Strip code")
T-392	logger.fine("Strip code")
H-392	-0.054091982543468475	logger.fine("Strip code")
D-392	-0.054091982543468475	logger.fine("Strip code")
P-392	-0.0470 -0.0893 -0.0408 -0.0093 -0.0557 -0.0047 -0.0640 -0.0788 -0.0971
S-486	TestSuiteEnvironment.getServerAddress()
T-486	TestSuiteEnvironment.getServerAddressNode1()
H-486	-0.06325246393680573	TestSuiteEnvironment.getServerAddressNode1()
D-486	-0.06325246393680573	TestSuiteEnvironment.getServerAddressNode1()
P-486	-0.0401 -0.0362 -0.0928 -0.0620 -0.0290 -0.0248 -0.0235 -0.1631 -0.0977
S-592	FSImageFormatProtobuf.class
T-592	FSImageFormatPBINode.class
H-592	-0.04271896183490753	FSImageFormatPBINode.class
D-592	-0.04271896183490753	FSImageFormatPBINode.class
P-592	-0.0100 -0.0216 -0.0185 -0.0229 -0.0050 -0.0962 -0.0650 -0.0405 -0.1047
S-601	TestSuiteEnvironment.getServerAddress()
T-601	TestSuiteEnvironment.getServerAddressNode1()
H-601	-0.06325246393680573	TestSuiteEnvironment.getServerAddressNode1()
D-601	-0.06325246393680573	TestSuiteEnvironment.getServerAddressNode1()
P-601	-0.0401 -0.0362 -0.0928 -0.0620 -0.0290 -0.0248 -0.0235 -0.1631 -0.0977
S-268	logger.info("Normalizing")
T-268	logger.fine("Normalizing")
H-268	-0.06211524084210396	logger.fine("Normalizing")
D-268	-0.06211524084210396	logger.fine("Normalizing")
P-268	-0.0455 -0.0841 -0.0800 -0.0160 -0.0612 -0.0227 -0.0583 -0.0916 -0.0996
S-303	stopwatch.elapsedMillis()
T-303	stopwatch.elapsed(MILLISECONDS)
H-303	-0.08152803033590317	stopwatch.elapsed(MILLISECONDS)
D-303	-0.08152803033590317	stopwatch.elapsed(MILLISECONDS)
P-303	-0.0505 -0.0093 -0.1089 -0.0643 -0.0160 -0.0902 -0.1577 -0.0624 -0.1476 -0.1085
S-763	executionJobVertex.getParallelism()
T-763	executionJobVertex.getMaxParallelism()
H-763	-0.044692251831293106	executionJobVertex.getMaxParallelism()
D-763	-0.044692251831293106	executionJobVertex.getMaxParallelism()
P-763	-0.0222 -0.0267 -0.0155 -0.0938 -0.0490 -0.0050 -0.0067 -0.0727 -0.1108
S-783	ExprEval.of(null)
T-783	ExprEval.ofDouble(null)
H-783	-0.40264490246772766	ExprEval.of(null)
D-783	-0.40264490246772766	ExprEval.of(null)
P-783	-0.5459 -0.9419 -0.0879 -0.0933 -0.2214 -0.0633 -1.0247 -0.2428
S-37	camelContext.getComponent(component)
T-37	camelContext.getComponent(component,false)
H-37	-0.40874117612838745	camelContext.getComponent(component)
D-37	-0.40874117612838745	camelContext.getComponent(component)
P-37	-0.0133 -0.1022 -0.0862 -0.5973 -0.1083 -2.0905 -0.1301 -0.1420
S-128	NoopChatHandlerProvider.class
T-128	ServiceAnnouncingChatHandlerProvider.class
H-128	-0.0470677986741066	ServiceAnnouncingChatHandlerProvider.class
D-128	-0.0470677986741066	ServiceAnnouncingChatHandlerProvider.class
P-128	-0.0197 -0.0545 -0.0505 -0.0047 -0.0141 -0.0321 -0.0298 -0.0866 -0.0679 -0.1107
S-153	name="java:/ConnectionFactory"
T-153	lookup="java:/ConnectionFactory"
H-153	-0.05246588587760925	lookup="java:/ConnectionFactory"
D-153	-0.05246588587760925	lookup="java:/ConnectionFactory"
P-153	-0.0110 -0.0706 -0.0298 -0.0168 -0.0318 -0.0497 -0.0991 -0.1111
S-38	Thread.currentThread().isInterrupted()
T-38	Thread.currentThread().interrupted()
H-38	-0.12792567908763885	Thread.currentThread().isInterrupted() || Thread.currentThread().isInterrupted()
D-38	-0.12792567908763885	Thread.currentThread().isInterrupted() || Thread.currentThread().isInterrupted()
P-38	-0.0462 -0.1018 -0.0182 -0.0705 -0.0776 -0.3599 -0.0580 -0.1972 -0.0148 -0.1252 -0.0070 -0.0955 -0.2922 -0.3450 -0.1302 -0.1076
S-89	edge.setType(type)
T-89	edge.setDirection(type)
H-89	-0.22651301324367523	edge.setType(type)
D-89	-0.22651301324367523	edge.setType(type)
P-89	-0.0160 -0.0864 -0.0627 -0.0768 -0.7957 -0.3709 -0.2374 -0.1662
S-62	new TelnetServerPipelineFactory()
T-62	new TelnetServerInitializer()
H-62	-0.06883450597524643	new TelnetServerPipelineFactory()
D-62	-0.06883450597524643	new TelnetServerPipelineFactory()
P-62	-0.0892 -0.0268 -0.0188 -0.0655 -0.0542 -0.0628 -0.1099 -0.1235
S-544	ufsPath.getPath()
T-544	ufsPath.toString()
H-544	-0.05931848660111427	ufsPath.toString()
D-544	-0.05931848660111427	ufsPath.toString()
P-544	-0.0567 -0.0138 -0.0399 -0.0919 -0.0320 -0.0784 -0.1026
S-464	this.isDefaultAutoCommit()
T-464	this.getDefaultReadOnly()
H-464	-0.09206827729940414	this.getDefaultReadOnly()
D-464	-0.09206827729940414	this.getDefaultReadOnly()
P-464	-0.2246 -0.1102 -0.0088 -0.0194 -0.0931 -0.0963
S-559	this.isDefaultAutoCommit()
T-559	this.getDefaultReadOnly()
H-559	-0.09206827729940414	this.getDefaultReadOnly()
D-559	-0.09206827729940414	this.getDefaultReadOnly()
P-559	-0.2246 -0.1102 -0.0088 -0.0194 -0.0931 -0.0963
S-25	HashMap<String,ASTNode>
T-25	LinkedHashMap<String,ASTNode>
H-25	-0.05735002085566521	LinkedHashMap<String,ASTNode>
D-25	-0.05735002085566521	LinkedHashMap<String,ASTNode>
P-25	-0.0250 -0.0391 -0.0282 -0.0742 -0.0197 -0.0526 -0.1165 -0.1035
S-180	tempBlock.getCommitPath()
T-180	tempBlock.getPath()
H-180	-0.07567590475082397	tempBlock.getPath()
D-180	-0.07567590475082397	tempBlock.getPath()
P-180	-0.0908 -0.0368 -0.0885 -0.0687 -0.0570 -0.0822 -0.1058
S-513	!segments.add(segment)
T-513	segments.add(segment)
H-513	-0.0777815654873848	segments.add(segment)
D-513	-0.0777815654873848	segments.add(segment)
P-513	-0.1085 -0.0934 -0.0433 -0.0985 -0.0201 -0.0811 -0.0995
S-536	lineageInfo.getParents()
T-536	lineageInfo.getChildren()
H-536	-0.0731806829571724	lineageInfo.getChildren()
D-536	-0.0731806829571724	lineageInfo.getChildren()
P-536	-0.0375 -0.0225 -0.0416 -0.1091 -0.1282 -0.0646 -0.1087
S-90	HazelcastInstanceFactory.terminateAll()
T-90	factory.terminateAll()
H-90	-0.06532979011535645	factory.terminateAll()
D-90	-0.06532979011535645	factory.terminateAll()
P-90	-0.0094 -0.1118 -0.0112 -0.0635 -0.0891 -0.1071
S-542	obj.getAcceptableTokens()
T-542	obj.getRequiredTokens()
H-542	-0.06609932333230972	obj.getRequiredTokens()
D-542	-0.06609932333230972	obj.getRequiredTokens()
P-542	-0.0284 -0.1109 -0.0604 -0.0068 -0.0437 -0.1028 -0.1097
S-598	Bukkit.getOfflinePlayers()
T-598	Bukkit.getOperators()
H-598	-0.05754519999027252	Bukkit.getOperators()
D-598	-0.05754519999027252	Bukkit.getOperators()
P-598	-0.0360 -0.0209 -0.0923 -0.0483 -0.0047 -0.0967 -0.1038
S-616	ctx.alloc().heapBuffer()
T-616	ctx.alloc().buffer()
H-616	-0.05327707901597023	ctx.alloc().buffer()
D-616	-0.05327707901597023	ctx.alloc().buffer()
P-616	-0.0193 -0.0983 -0.0085 -0.0843 -0.0009 -0.0508 -0.1110
S-664	assertEquals(9,set.size())
T-664	assertEquals(10,set.size())
H-664	-0.1388063132762909	assertEquals(10,set.size())
D-664	-0.1388063132762909	assertEquals(10,set.size())
P-664	-0.0475 -0.5665 -0.0372 -0.1022 -0.0421 -0.0726 -0.1036
S-722	!segments.add(segment)
T-722	segments.add(segment)
H-722	-0.0777815654873848	segments.add(segment)
D-722	-0.0777815654873848	segments.add(segment)
P-722	-0.1085 -0.0934 -0.0433 -0.0985 -0.0201 -0.0811 -0.0995
S-767	ctx.alloc().heapBuffer()
T-767	ctx.alloc().buffer()
H-767	-0.05327707901597023	ctx.alloc().buffer()
D-767	-0.05327707901597023	ctx.alloc().buffer()
P-767	-0.0193 -0.0983 -0.0085 -0.0843 -0.0009 -0.0508 -0.1110
S-0	expectedValue.equals(oldValue)
T-0	expectedValue.equals(oldObject)
H-0	-0.07715382426977158	expectedValue.equals(oldObject)
D-0	-0.07715382426977158	expectedValue.equals(oldObject)
P-0	-0.0721 -0.0974 -0.0658 -0.0942 -0.0858 -0.0076 -0.0992 -0.0952
S-260	this.isDefaultAutoCommit()
T-260	this.getDefaultReadOnly()
H-260	-0.09206827729940414	this.getDefaultReadOnly()
D-260	-0.09206827729940414	this.getDefaultReadOnly()
P-260	-0.2246 -0.1102 -0.0088 -0.0194 -0.0931 -0.0963
S-826	connections.get(address)
T-826	connections.get(target)
H-826	-0.0891512930393219	connections.get(target)
D-826	-0.0891512930393219	connections.get(target)
P-826	-0.0406 -0.1013 -0.1394 -0.1438 -0.0262 -0.0678 -0.1050
S-765	preDestroys != null
T-765	prePassivates != null
H-765	-0.06346926838159561	prePassivates != null
D-765	-0.06346926838159561	prePassivates != null
P-765	-0.0267 -0.0206 -0.0364 -0.1921 -0.0502 -0.0659 -0.0524
S-778	left.getQualifierLength()
T-778	left.getRowLength()
H-778	-0.577528715133667	left.getQualifierLengthWithoutLength()
D-778	-0.577528715133667	left.getQualifierLengthWithoutLength()
P-778	-0.0626 -0.1068 -0.0602 -1.4065 -0.3516 -0.7396 -2.3029 -0.0664 -0.1012
S-717	is("/home/source")
T-717	endsWith("/home/source")
H-717	-0.061865996569395065	endsWith("/home/source")
D-717	-0.061865996569395065	endsWith("/home/source")
P-717	-0.0066 -0.0216 -0.0295 -0.0720 -0.0596 -0.1430 -0.1008
S-82	fields.contains(name)
T-82	!fields.contains(name)
H-82	-0.06564079225063324	!fields.contains(name)
D-82	-0.06564079225063324	!fields.contains(name)
P-82	-0.0059 -0.0655 -0.0896 -0.0408 -0.0870 -0.0518 -0.0968 -0.0879
S-126	grammar.getTokenNames()
T-126	grammar.getTokenDisplayNames()
H-126	-0.0744365006685257	grammar.getTokenDisplayNames()
D-126	-0.0744365006685257	grammar.getTokenDisplayNames()
P-126	-0.0239 -0.0930 -0.0631 -0.0624 -0.0014 -0.1644 -0.0838 -0.1034
S-229	boundary.startsWith("\"")
T-229	boundary.endsWith("\"")
H-229	-0.06788396090269089	boundary.endsWith("\"")
D-229	-0.06788396090269089	boundary.endsWith("\"")
P-229	-0.0230 -0.1052 -0.0262 -0.0118 -0.0699 -0.0533 -0.1499 -0.1039
S-245	entries.remove(key)
T-245	entries.remove(timeKey)
H-245	-0.06889143586158752	entries.remove(timeKey)
D-245	-0.06889143586158752	entries.remove(timeKey)
P-245	-0.0590 -0.0908 -0.0220 -0.0598 -0.0066 -0.1237 -0.0877 -0.1016
S-578	sizeNeeded >= items.length
T-578	sizeNeeded > items.length
H-578	-0.06342288106679916	sizeNeeded > items.length
D-578	-0.06342288106679916	sizeNeeded > items.length
P-578	-0.0342 -0.0354 -0.0457 -0.0225 -0.1009 -0.0990 -0.1063
S-751	Character.toLowerCase(ch)
T-751	Character.toUpperCase(ch)
H-751	-0.06918184459209442	Character.toUpperCase(ch)
D-751	-0.06918184459209442	Character.toUpperCase(ch)
P-751	-0.0375 -0.0936 -0.0574 -0.0807 -0.0315 -0.0847 -0.0989
S-432	CxfEndpointBean.class
T-432	CxfSpringEndpointBean.class
H-432	-0.5315077900886536	AbstractEndpointBean.class
D-432	-0.5315077900886536	AbstractEndpointBean.class
P-432	-2.5112 -0.3673 -0.0365 -0.0892 -0.0679 -0.1168
S-602	NettyAsyncHttpProvider.class
T-602	JDKAsyncHttpProvider.class
H-602	-0.051753707230091095	NettyConnectionsPool.class
D-602	-0.051753707230091095	NettyConnectionsPool.class
P-602	-0.0008 -0.0387 -0.0105 -0.0995 -0.0514 -0.1097
S-603	time.put(delta)
T-603	time.put(current)
H-603	-0.05719061940908432	time.put(current)
D-603	-0.05719061940908432	time.put(current)
P-603	-0.0425 -0.0799 -0.0154 -0.0939 -0.0028 -0.0584 -0.1074
S-577	coreThreads.asString()
T-577	queueLength.asString()
H-577	-0.26915243268013	coreThreads.asStringWithoutResolving()
D-577	-0.26915243268013	coreThreads.asStringWithoutResolving()
P-577	-1.7548 -0.0187 -0.1027 -0.0842 -0.1958 -0.0643 -0.3094 -0.0001 -0.0626 -0.0989
S-117	assertClusterSize(2,h2)
T-117	assertClusterSizeEventually(2,h2)
H-117	-0.043496474623680115	assertClusterSizeEventually(2,h2)
D-117	-0.043496474623680115	assertClusterSizeEventually(2,h2)
P-117	-0.0549 -0.0372 -0.0466 -0.0408 -0.0154 -0.0335 -0.0263 -0.0400 -0.0966
S-595	toHeapData(key)
T-595	toEventData(key)
H-595	-0.09293334186077118	toEventData(key)
D-595	-0.09293334186077118	toEventData(key)
P-595	-0.1560 -0.1530 -0.0414 -0.0822 -0.0373 -0.0812 -0.0995
S-716	queue.size() < 100000
T-716	queue.size() > 100000
H-716	-0.0824679434299469	queue.size() > 100000
D-716	-0.0824679434299469	queue.size() > 100000
P-716	-0.0360 -0.0970 -0.0488 -0.0718 -0.2036 -0.0218 -0.0984
S-707	message.getFormattedFields()
T-707	message.getFilteredFields()
H-707	-0.06066899746656418	message.getFilteredFields()
D-707	-0.06066899746656418	message.getFilteredFields()
P-707	-0.0523 -0.0963 -0.0489 -0.0106 -0.0243 -0.0894 -0.1030
S-623	toHeapData(key)
T-623	toEventData(key)
H-623	-0.09293334186077118	toEventData(key)
D-623	-0.09293334186077118	toEventData(key)
P-623	-0.1560 -0.1530 -0.0414 -0.0822 -0.0373 -0.0812 -0.0995
S-667	client.getBulkReply()
T-667	client.getStatusCodeReply()
H-667	-0.08940818160772324	client.getStatusCodeReply()
D-667	-0.08940818160772324	client.getStatusCodeReply()
P-667	-0.0560 -0.1002 -0.0638 -0.2037 -0.0247 -0.0752 -0.1022
S-699	val.get(key)
T-699	val.get(k)
H-699	-0.08407317847013474	val.get(k)
D-699	-0.08407317847013474	val.get(k)
P-699	-0.1180 -0.0855 -0.0932 -0.1281 -0.0028 -0.0572 -0.1038
S-347	sectionStartToken.word()
T-347	sectionStartTagToken.word()
H-347	-0.6102651953697205	SectionStartToken.word()
D-347	-0.6102651953697205	SectionStartToken.word()
P-347	-3.3850 -0.4602 -0.0308 -0.1078 -0.1358 -0.0518 -0.1004
S-572	is("/home/source")
T-572	endsWith("/home/source")
H-572	-0.061865996569395065	endsWith("/home/source")
D-572	-0.061865996569395065	endsWith("/home/source")
P-572	-0.0066 -0.0216 -0.0295 -0.0720 -0.0596 -0.1430 -0.1008
S-548	grammar.getTokenNames()
T-548	grammar.getTokenDisplayNames()
H-548	-0.0744365006685257	grammar.getTokenDisplayNames()
D-548	-0.0744365006685257	grammar.getTokenDisplayNames()
P-548	-0.0239 -0.0930 -0.0631 -0.0624 -0.0014 -0.1644 -0.0838 -0.1034
S-593	assertClusterSize(2,h2)
T-593	assertClusterSizeEventually(2,h2)
H-593	-0.043496474623680115	assertClusterSizeEventually(2,h2)
D-593	-0.043496474623680115	assertClusterSizeEventually(2,h2)
P-593	-0.0549 -0.0372 -0.0466 -0.0408 -0.0154 -0.0335 -0.0263 -0.0400 -0.0966
S-345	assertClusterSize(2,nodes[0])
T-345	assertClusterSizeEventually(2,nodes[0])
H-345	-0.043491583317518234	assertClusterSizeEventually(2,nodes[0])
D-345	-0.043491583317518234	assertClusterSizeEventually(2,nodes[0])
P-345	-0.0599 -0.0404 -0.0429 -0.0235 -0.0174 -0.0437 -0.0359 -0.0315 -0.0963
S-387	new GenerationException(e)
T-387	new GenerationException("Couldn't parse type: " + typeDefinition,e)
H-387	-0.1499459147453308	new GenerationException("Couldn't parse type: " + typeDefinition,e)
D-387	-0.1499459147453308	new GenerationException("Couldn't parse type: " + typeDefinition,e)
P-387	-0.0759 -0.0092 -0.0366 -0.0262 -1.2450 -0.0482 -0.0014 -0.0890 -0.0543 -0.0233 -0.0905 -0.1909 -0.0700 -0.0373 -0.3945 -0.1794 -0.0595 -0.1131 -0.1045
S-808	configuredScriptEngineNames == null
T-808	configuredScriptEngineNames == null || configuredScriptEngineNames.isEmpty()
H-808	-0.06109383702278137	configuredScriptEngineNames == null || configuredScriptEngineNames.isEmpty()
D-808	-0.06109383702278137	configuredScriptEngineNames == null || configuredScriptEngineNames.isEmpty()
P-808	-0.0176 -0.0179 -0.0095 -0.0277 -0.0111 -0.0952 -0.0779 -0.0251 -0.0160 -0.0092 -0.0342 -0.2960 -0.0226 -0.1466 -0.1097
S-681	toBeRemovedKeys.clear()
T-681	toBeRemovedKeys.removeAll(keysToDelete)
H-681	-0.05170011147856712	toBeRemovedKeys.removeAll(keysToDelete)
D-681	-0.05170011147856712	toBeRemovedKeys.removeAll(keysToDelete)
P-681	-0.0051 -0.0204 -0.0177 -0.1051 -0.0348 -0.1768 -0.0270 -0.0082 -0.0021 -0.0690 -0.1025
S-629	row.size() == 0
T-629	row == null || row.size() == 0
H-629	-0.06423783302307129	row == null || row.size() == 0
D-629	-0.06423783302307129	row == null || row.size() == 0
P-629	-0.0294 -0.0064 -0.0873 -0.0737 -0.0283 -0.1084 -0.0547 -0.0973 -0.0398 -0.0941 -0.0872
S-607	newroot.length == 1
T-607	shift > 0 && newroot.length == 1
H-607	-0.11249404400587082	shift > 0 && newroot.length == 1
D-607	-0.11249404400587082	shift > 0 && newroot.length == 1
P-607	-0.0004 -0.0183 -0.0792 -0.1041 -0.6252 -0.0830 -0.0817 -0.0594 -0.0323 -0.0526 -0.1013
S-342	analysis.getType(aggregate)
T-342	analysis.getTypeWithCoercions(aggregate)
H-342	-0.03851298242807388	analysis.getTypeWithCoercions(aggregate)
D-342	-0.03851298242807388	analysis.getTypeWithCoercions(aggregate)
P-342	-0.0203 -0.0885 -0.0069 -0.0109 -0.0042 -0.0393 -0.0031 -0.0730 -0.0158 -0.0631 -0.0987
S-88	new JobConf(config_)
T-88	new JobConf(config_,StreamJob.class)
H-88	-0.08215054869651794	new JobConf(config_,StreamJob.class)
D-88	-0.08215054869651794	new JobConf(config_,StreamJob.class)
P-88	-0.0668 -0.0082 -0.1131 -0.0521 -0.4299 -0.0167 -0.0084 -0.0519 -0.0130 -0.0395 -0.1040
S-31	analysis.getType(expression)
T-31	analysis.getTypeWithCoercions(expression)
H-31	-0.11478134989738464	analysis.getTypeWithCoercions(expression)
D-31	-0.11478134989738464	analysis.getTypeWithCoercions(expression)
P-31	-0.0248 -0.0916 -0.0084 -0.0370 -0.0076 -0.0356 -0.0048 -0.0752 -0.8103 -0.0695 -0.0978
S-608	ImmutableSet.of(modules)
T-608	ImmutableSet.copyOf(modules)
H-608	-0.0730816200375557	ImmutableSet.copyOf(modules)
D-608	-0.0730816200375557	ImmutableSet.copyOf(modules)
P-608	-0.0056 -0.1018 -0.1395 -0.0353 -0.0857 -0.0318 -0.0816 -0.1034
S-367	visitor.visit(this)
T-367	visitor.visitTypeLiteral(this)
H-367	-0.3996666371822357	visitor.visit(this)
D-367	-0.3996666371822357	visitor.visit(this)
P-367	-0.0826 -0.0968 -0.3687 -0.2047 -0.6130 -0.6691 -0.7627
S-611	executionStats.getSplits()
T-611	executionStats.getStartedSplits()
H-611	-0.05072043463587761	executionStats.getStartedSplits()
D-611	-0.05072043463587761	executionStats.getStartedSplits()
P-611	-0.0259 -0.0272 -0.0975 -0.0442 -0.0020 -0.0307 -0.0744 -0.1040
S-333	new ModelNode().set(15000)
T-333	new ModelNode().set(15000L)
H-333	-0.07690620422363281	new ModelNode().set(15000L)
D-333	-0.07690620422363281	new ModelNode().set(15000L)
P-333	-0.0767 -0.0098 -0.0451 -0.0362 -0.0311 -0.1922 -0.0206 -0.1789 -0.1014
S-256	Gdx.input.getX()
T-256	Gdx.input.getX(i)
H-256	-0.05703158676624298	Gdx.input.getX(i)
D-256	-0.05703158676624298	Gdx.input.getX(i)
P-256	-0.0386 -0.0874 -0.0452 -0.1035 -0.0203 -0.0332 -0.0226 -0.0682 -0.0942
S-804	AsyncIOWriterAdapter.class
T-804	AtmosphereInterceptorWriter.class
H-804	-0.21188873052597046	AsyncIOWriterAdapter.class
D-804	-0.21188873052597046	AsyncIOWriterAdapter.class
P-804	-0.1299 -0.0777 -0.8647 -0.0793 -0.1212 -0.0584 -0.1520
S-788	context.var("double")
T-788	context.var("double",2)
H-788	-0.06685172021389008	context.var("double",2)
D-788	-0.06685172021389008	context.var("double",2)
P-788	-0.0512 -0.0902 -0.0456 -0.0734 -0.0459 -0.0942 -0.0319 -0.1025
S-779	config.getMaxRedirects()
T-779	clusterProperties.getMaxRedirects()
H-779	-0.06865271925926208	clusterProperties.getMaxRedirects()
D-779	-0.06865271925926208	clusterProperties.getMaxRedirects()
P-779	-0.0818 -0.0968 -0.0926 -0.0510 -0.0326 -0.0059 -0.0802 -0.1084
S-738	grammar.getTokenNames()
T-738	grammar.getTokenDisplayNames()
H-738	-0.0744365006685257	grammar.getTokenDisplayNames()
D-738	-0.0744365006685257	grammar.getTokenDisplayNames()
P-738	-0.0239 -0.0930 -0.0631 -0.0624 -0.0014 -0.1644 -0.0838 -0.1034
S-685	put.writeToWAL()
T-685	put.getWriteToWAL()
H-685	-0.8118982911109924	put.writeToWAL(true)
D-685	-0.8118982911109924	put.writeToWAL(true)
P-685	-0.0797 -0.1125 -0.1432 -0.3937 -2.1187 -1.1652 -2.9912 -0.1927 -0.1102
S-678	document.tokens().get(10)
T-678	document.tokens().get(9)
H-678	-0.0738646537065506	document.tokens().get(9)
D-678	-0.0738646537065506	document.tokens().get(9)
P-678	-0.0779 -0.0975 -0.0422 -0.0735 -0.0788 -0.0296 -0.0864 -0.1049
S-558	clearFromMember.start()
T-558	clearFromMember.join()
H-558	-0.8735036849975586	clearFromMember.start()
D-558	-0.8735036849975586	clearFromMember.start()
P-558	-4.0649 -0.0481 -0.0434 -0.0918 -0.0474 -1.5395 -0.2794
S-108	LOG.error("Async Kafka commit failed.",cause)
T-108	LOG.warn("Async Kafka commit failed.",cause)
H-108	-0.05371477082371712	LOG.warn("Async Kafka commit failed.",cause)
D-108	-0.05371477082371712	LOG.warn("Async Kafka commit failed.",cause)
P-108	-0.0971 -0.0925 -0.0233 -0.0531 -0.0255 -0.0195 -0.0696 -0.0288 -0.0317 -0.0207 -0.0774 -0.1053
S-111	LOG.warn("Exception while fetching metrics.",e)
T-111	LOG.debug("Exception while fetching metrics.",e)
H-111	-0.05386634171009064	LOG.debug("Exception while fetching metrics.",e)
D-111	-0.05386634171009064	LOG.debug("Exception while fetching metrics.",e)
P-111	-0.0457 -0.0926 -0.0168 -0.0459 -0.0401 -0.0418 -0.0212 -0.0262 -0.0299 -0.0819 -0.0966 -0.1076
S-139	GL.glBindTextureEXT(target,texture)
T-139	GL.glBindTexture(target,texture)
H-139	-0.06746786087751389	GL.glBindTexture(target,texture)
D-139	-0.06746786087751389	GL.glBindTexture(target,texture)
P-139	-0.0284 -0.0919 -0.0206 -0.0350 -0.0796 -0.1208 -0.0135 -0.1310 -0.0452 -0.0716 -0.1044
S-694	!tableLayoutHandle.getPartitions().isPresent()
T-694	tableLayoutHandle.getPartitions().isPresent()
H-694	-0.05558016523718834	tableLayoutHandle.getPartitions().isPresent()
D-694	-0.05558016523718834	tableLayoutHandle.getPartitions().isPresent()
P-694	-0.0595 -0.0113 -0.0272 -0.1114 -0.0608 -0.0140 -0.0548 -0.0599 -0.0346 -0.0862 -0.0917
S-416	DEFAULT_USER_AS_DEFAULT_QUEUE=false
T-416	DEFAULT_USER_AS_DEFAULT_QUEUE=true
H-416	-0.06799666583538055	DEFAULT_USER_AS_DEFAULT_QUEUE=true
D-416	-0.06799666583538055	DEFAULT_USER_AS_DEFAULT_QUEUE=true
P-416	-0.0552 -0.0782 -0.0327 -0.0775 -0.0713 -0.1104 -0.0724 -0.1007 -0.0399 -0.0437 -0.0372 -0.0966
S-773	ImmutableSet.Builder<ImplemetationMethodDescriptor>
T-773	ImmutableSet.Builder<ImplementationMethodDescriptor>
H-773	-0.05948903039097786	ImmutableSet.Builder<ImplementationMethodDescriptor>
D-773	-0.05948903039097786	ImmutableSet.Builder<ImplementationMethodDescriptor>
P-773	-0.0151 -0.0847 -0.0325 -0.0738 -0.0412 -0.0470 -0.0210 -0.1138 -0.1062
S-6	reg.put("localhost:" + port,env)
T-6	reg.bind("localhost:" + port,env)
H-6	-0.06804734468460083	reg.bind("localhost:" + port,env)
D-6	-0.06804734468460083	reg.bind("localhost:" + port,env)
P-6	-0.0183 -0.0960 -0.0532 -0.0633 -0.0415 -0.0540 -0.1057 -0.0553 -0.0838 -0.0312 -0.1054 -0.1089
S-166	minZ != 0f && maxZ != 0f
T-166	minZ != 0f || maxZ != 0f
H-166	-0.06032681465148926	minZ != 0f || maxZ != 0f
D-166	-0.06032681465148926	minZ != 0f || maxZ != 0f
P-166	-0.0369 -0.0371 -0.0755 -0.0942 -0.0520 -0.0541 -0.0607 -0.0271 -0.0663 -0.0675 -0.0474 -0.1052
S-348	public Integer getOlderThan(){ return olderThan; }
T-348	public Long getOlderThan(){ return olderThan; }
H-348	-0.05981384590268135	public Long getOlderThan(){ return olderThan; }
D-348	-0.05981384590268135	public Long getOlderThan(){ return olderThan; }
P-348	-0.0524 -0.1894 -0.0150 -0.0308 -0.0155 -0.0385 -0.0825 -0.0134 -0.0247 -0.0647 -0.0870 -0.1039
S-402	LOGGER.debug("Unable to process JSON",exception)
T-402	LOGGER.warn("Unable to process JSON",exception)
H-402	-0.07541152834892273	LOGGER.warn("Unable to process JSON",exception)
D-402	-0.07541152834892273	LOGGER.warn("Unable to process JSON",exception)
P-402	-0.0229 -0.0920 -0.2256 -0.0549 -0.0191 -0.0660 -0.0315 -0.0513 -0.0640 -0.0890 -0.0820 -0.1066
S-420	entry.getValue().getManagementInterfaceMinorVersion()
T-420	entry.getValue().getManagementInterfaceMicroVersion()
H-420	-0.0579407662153244	entry.getValue().getManagementInterfaceMicroVersion()
D-420	-0.0579407662153244	entry.getValue().getManagementInterfaceMicroVersion()
P-420	-0.0630 -0.0897 -0.0168 -0.0570 -0.0647 -0.0120 -0.0242 -0.0435 -0.0692 -0.0948 -0.1026
S-285	assertTrue(jmsTemplate.isPubSubDomain())
T-285	assertFalse(jmsTemplate.isPubSubDomain())
H-285	-0.05531737580895424	assertFalse(jmsTemplate.isPubSubDomain())
D-285	-0.05531737580895424	assertFalse(jmsTemplate.isPubSubDomain())
P-285	-0.0090 -0.0866 -0.0142 -0.0180 -0.1037 -0.0590 -0.0152 -0.0671 -0.0228 -0.1153 -0.0975
S-581	assertFalse(runtimeOptions.isMonochrome())
T-581	assertTrue(runtimeOptions.isMonochrome())
H-581	-0.1830170601606369	assertTrue(runtimeOptions.isMonochrome())
D-581	-0.1830170601606369	assertTrue(runtimeOptions.isMonochrome())
P-581	-0.0271 -0.0958 -0.0068 -0.0290 -0.0973 -0.0587 -1.4609 -0.0363 -0.0082 -0.0956 -0.0976
S-596	Assert.assertEquals(select.size(),1)
T-596	Assert.assertEquals(select.size(),0)
H-596	-0.06326448172330856	Assert.assertEquals(select.size(),0)
D-596	-0.06326448172330856	Assert.assertEquals(select.size(),0)
P-596	-0.0468 -0.0901 -0.0491 -0.0646 -0.0986 -0.0323 -0.0989 -0.0511 -0.0588 -0.0030 -0.1026
S-463	!dynamicState.changingBlobs.isEmpty()
T-463	dynamicState.changingBlobs.isEmpty()
H-463	-0.2510139048099518	DynamicState.changingBlobs.isEmpty()
D-463	-0.2510139048099518	DynamicState.changingBlobs.isEmpty()
P-463	-1.5037 -0.0763 -0.0976 -0.4004 -0.0403 -0.0290 -0.1157 -0.0534 -0.0934 -0.1003
S-312	assertEquals(expectedResponse,orig.getResponse())
T-312	assertEquals(orig.getResponse(),expectedResponse)
H-312	-0.059160783886909485	assertEquals(orig.getResponse(),expectedResponse)
D-312	-0.059160783886909485	assertEquals(orig.getResponse(),expectedResponse)
P-312	-0.0534 -0.0662 -0.0056 -0.0822 -0.0385 -0.0389 -0.0910 -0.0274 -0.0376 -0.1054 -0.1047
S-637	compare(leftValue,rightValue) < 0
T-637	compare(leftValue,rightValue) >= 0
H-637	-0.11885564774274826	compare(leftValue,rightValue) <= 0
D-637	-0.11885564774274826	compare(leftValue,rightValue) <= 0
P-637	-0.0869 -0.0920 -0.0806 -0.1633 -0.0774 -0.0587 -0.1757 -0.0711 -0.3497 -0.0618 -0.0904
S-279	Mockito.verify(mRMClient).start()
T-279	Mockito.verify(mRMClient).stop()
H-279	-0.21330814063549042	Mockito.verify(mRMClient).start()
D-279	-0.21330814063549042	Mockito.verify(mRMClient).start()
P-279	-0.0179 -0.0930 -0.2657 -0.1092 -0.0343 -0.0139 -0.0384 -0.0766 -0.0627 -1.4933 -0.1413
S-163	spanEvent.getNextSpanId() == -1
T-163	spanEvent.getNextSpanId() != -1
H-163	-0.06761644780635834	spanEvent.getNextSpanId() != -1
D-163	-0.06761644780635834	spanEvent.getNextSpanId() != -1
P-163	-0.0403 -0.0301 -0.0974 -0.0456 -0.0353 -0.0383 -0.0510 -0.0845 -0.2142 -0.0154 -0.0916
S-109	Math.min(1000L,connectionTimeout)
T-109	Math.max(1000L,connectionTimeout)
H-109	-0.0900685042142868	Math.max(1000L,connectionTimeout)
D-109	-0.0900685042142868	Math.max(1000L,connectionTimeout)
P-109	-0.0251 -0.0996 -0.3616 -0.0475 -0.0536 -0.0460 -0.0795 -0.0276 -0.0452 -0.1009 -0.1042
S-34	level <= RF_STATUS_HIGH_SIGNAL
T-34	level < RF_STATUS_HIGH_SIGNAL
H-34	-0.04507659003138542	level < RF_STATUS_HIGH_SIGNAL
D-34	-0.04507659003138542	level < RF_STATUS_HIGH_SIGNAL
P-34	-0.0461 -0.0143 -0.0070 -0.0909 -0.0170 -0.0927 -0.0324 -0.0837 -0.0055 -0.0105 -0.0956
S-541	zController.sendData(doRequestStop())
T-541	zController.enqueue(doRequestStop())
H-541	-0.18279090523719788	zController.sendData(doRequestStop(),true)
D-541	-0.18279090523719788	zController.sendData(doRequestStop(),true)
P-541	-0.0319 -0.0224 -0.0975 -0.0410 -0.0523 -0.6316 -0.2178 -0.0894 -0.0440 -0.2383 -0.7223 -0.0762 -0.1117
S-160	isNodeHealing(node.getNodeId())
T-160	!isNodeHealing(node.getNodeId())
H-160	-0.05215534567832947	!isNodeHealing(node.getNodeId())
D-160	-0.05215534567832947	!isNodeHealing(node.getNodeId())
P-160	-0.0084 -0.0200 -0.0314 -0.0216 -0.0138 -0.0835 -0.0474 -0.0930 -0.0657 -0.0292 -0.1159 -0.0959
S-358	@ConditionalOnEnablednHealthIndicator("mongo")
T-358	@ConditionalOnEnabledHealthIndicator("mongo")
H-358	-0.054049745202064514	@ConditionalOnEnabledHealthIndicator("mongo")
D-358	-0.054049745202064514	@ConditionalOnEnabledHealthIndicator("mongo")
P-358	-0.0923 -0.0162 -0.0435 -0.0300 -0.0479 -0.0165 -0.0684 -0.0280 -0.0947 -0.1031
S-610	responseCode < OK && MULTIPLE_CHOICES <= responseCode
T-610	responseCode < OK || MULTIPLE_CHOICES <= responseCode
H-610	-0.0327068492770195	responseCode < OK || MULTIPLE_CHOICES <= responseCode
D-610	-0.0327068492770195	responseCode < OK || MULTIPLE_CHOICES <= responseCode
P-610	-0.0186 -0.0401 -0.0070 -0.0675 -0.0183 -0.0169 -0.0703 -0.0084 -0.0193 -0.0091 -0.0843
S-614	new JmxEndpointProperties(this.environment)
T-614	new JmxEndpointProperties()
H-614	-0.04769914597272873	new JmxEndpointProperties()
D-614	-0.04769914597272873	new JmxEndpointProperties()
P-614	-0.0817 -0.0236 -0.0189 -0.0299 -0.0581 -0.0198 -0.1018
S-504	dis.read(serializedData,0,length)
T-504	dis.readFully(serializedData,0,length)
H-504	-0.05664753168821335	dis.readFully(serializedData,0,length)
D-504	-0.05664753168821335	dis.readFully(serializedData,0,length)
P-504	-0.0193 -0.0949 -0.0473 -0.0048 -0.0967 -0.0149 -0.0356 -0.0753 -0.0644 -0.0339 -0.0901 -0.1027
S-346	reg.getCounters(transformFilter(filter))
T-346	reg.getHistograms(transformFilter(filter))
H-346	-0.0666009709239006	reg.getMeters(transformFilter(filter))
D-346	-0.0666009709239006	reg.getMeters(transformFilter(filter))
P-346	-0.0236 -0.0866 -0.0715 -0.1755 -0.0261 -0.1072 -0.0179 -0.0340 -0.0885 -0.0483 -0.0173 -0.1028
S-792	dbSqlSessionFactory.getDatabaseCatalog() != null
T-792	dbSqlSessionFactory.getDatabaseCatalog() != null && dbSqlSessionFactory.getDatabaseCatalog().length() > 0
H-792	-0.15348753333091736	dbSqlSessionFactory.getDatabaseCatalog() != null && dbSqlSessionFactory.getDatabaseCatalog().length() > 0
D-792	-0.15348753333091736	dbSqlSessionFactory.getDatabaseCatalog() != null && dbSqlSessionFactory.getDatabaseCatalog().length() > 0
P-792	-0.0197 -0.0305 -0.1641 -0.1547 -0.0674 -0.0342 -0.0144 -0.0682 -0.2607 -0.0878 -0.1733 -0.0815 -0.0419 -0.2474 -0.1410 -0.0657 -0.0537 -0.0152 -0.0590 -1.2183 -0.3447 -0.1250 -0.1130 -0.1024
S-161	Arrays.asList("Java","CSharp")
T-161	Arrays.asList("Java","CSharp","Cpp")
H-161	-0.04809519648551941	Arrays.asList("Java","CSharp","Cpp")
D-161	-0.04809519648551941	Arrays.asList("Java","CSharp","Cpp")
P-161	-0.0501 -0.0890 -0.0230 -0.0516 -0.0239 -0.0337 -0.0276 -0.0610 -0.0319 -0.0388 -0.0170 -0.0207 -0.0991 -0.1059
S-321	ObjectHelper.isEmpty(configuration.getClusterService())
T-321	ObjectHelper.isNotEmpty(configuration.getClusterService())
H-321	-0.06506066769361496	ObjectHelper.isNotEmpty(configuration.getClusterService())
D-321	-0.06506066769361496	ObjectHelper.isNotEmpty(configuration.getClusterService())
P-321	-0.0180 -0.1024 -0.0656 -0.0267 -0.0964 -0.1100 -0.0421 -0.0931 -0.0534 -0.0200 -0.0381 -0.0781 -0.1020
S-310	inner.innerSetException(new TimeoutException())
T-310	inner.innerSetException(new TimeoutException(),false)
H-310	-0.27988332509994507	inner.innerSetException(new TimeoutException())
D-310	-0.27988332509994507	inner.innerSetException(new TimeoutException())
P-310	-0.0509 -0.0943 -0.0320 -0.0580 -0.0582 -0.1777 -0.0425 -2.3056 -0.0699 -0.0775 -0.1121
S-569	subProperties.put(subName,value)
T-569	subProperties.putIfAbsent(subName,value)
H-569	-0.07519999146461487	subProperties.putIfAbsent(subName,value)
D-569	-0.07519999146461487	subProperties.putIfAbsent(subName,value)
P-569	-0.0590 -0.0332 -0.1097 -0.0466 -0.0008 -0.1017 -0.0696 -0.0468 -0.1010 -0.1320 -0.0994 -0.1025
S-403	stats.getLastUpdateTime() > lastUpdateTime
T-403	stats.getLastUpdateTime() >= lastUpdateTime
H-403	-0.0563032440841198	stats.getLastUpdateTime() >= lastUpdateTime
D-403	-0.0563032440841198	stats.getLastUpdateTime() >= lastUpdateTime
P-403	-0.0294 -0.0855 -0.0718 -0.0593 -0.0475 -0.0501 -0.0727 -0.0368 -0.0165 -0.0537 -0.0962
S-365	className.indexOf("org.openmrs.")
T-365	className.lastIndexOf("org.openmrs.")
H-365	-0.3854432702064514	className.indexOf("org.openmrs.")
D-365	-0.3854432702064514	className.indexOf("org.openmrs.")
P-365	-0.0363 -0.1019 -0.2939 -0.0605 -0.0250 -0.0954 -0.0736 -0.0506 -0.0174 -0.2255 -3.2598
S-700	postAgg.getName().equals(metricName)
T-700	postAgg.getName().equalsIgnoreCase(metricName)
H-700	-0.05337090790271759	postAgg.getName().equalsIgnoreCase(metricName)
D-700	-0.05337090790271759	postAgg.getName().equalsIgnoreCase(metricName)
P-700	-0.0304 -0.0129 -0.0800 -0.0302 -0.0700 -0.0092 -0.0834 -0.0219 -0.0604 -0.0920 -0.0967
S-295	reg.getCounters(transformFilter(filter))
T-295	reg.getMeters(transformFilter(filter))
H-295	-0.0666009709239006	reg.getMeters(transformFilter(filter))
D-295	-0.0666009709239006	reg.getMeters(transformFilter(filter))
P-295	-0.0236 -0.0866 -0.0715 -0.1755 -0.0261 -0.1072 -0.0179 -0.0340 -0.0885 -0.0483 -0.0173 -0.1028
S-818	assertFalse(runtimeOptions.isMonochrome())
T-818	assertTrue(runtimeOptions.isMonochrome())
H-818	-0.1830170601606369	assertTrue(runtimeOptions.isMonochrome())
D-818	-0.1830170601606369	assertTrue(runtimeOptions.isMonochrome())
P-818	-0.0271 -0.0958 -0.0068 -0.0290 -0.0973 -0.0587 -1.4609 -0.0363 -0.0082 -0.0956 -0.0976
S-91	mock.expectedBodiesReceived("Hello World 2")
T-91	mock.expectedBodiesReceivedInAnyOrder("Hello World 2")
H-91	-0.06170187145471573	mock.expectedBodiesReceivedInAnyOrder("Hello World 2")
D-91	-0.06170187145471573	mock.expectedBodiesReceivedInAnyOrder("Hello World 2")
P-91	-0.0677 -0.0898 -0.0324 -0.0123 -0.0231 -0.0037 -0.0547 -0.0499 -0.0789 -0.0916 -0.1363 -0.1001
S-659	rsWrap.getMobFileCacheAccessCount()
T-659	rsWrap.getMobFileCacheMissCount()
H-659	-0.05739555507898331	rsWrap.getMobFileCacheMissCount()
D-659	-0.05739555507898331	rsWrap.getMobFileCacheMissCount()
P-659	-0.0242 -0.0160 -0.0915 -0.0702 -0.0356 -0.0931 -0.0386 -0.0172 -0.0513 -0.0894 -0.1043
S-727	Color.fromRGB(0x434343)
T-727	Color.fromRGB(0xABABAB)
H-727	-0.3953079581260681	Color.fromRGB(0xABABAB)
D-727	-0.3953079581260681	Color.fromRGB(0xABABAB)
P-727	-0.0313 -0.0981 -0.0832 -0.0127 -0.0414 -0.1490 -0.0014 -0.0246 -0.0951 -3.7024 -0.1092
S-269	lookupService.lookupPrincipalByGroupName(user)
T-269	lookupService.lookupPrincipalByName(user)
H-269	-0.06514647603034973	lookupService.lookupPrincipalByName(user)
D-269	-0.06514647603034973	lookupService.lookupPrincipalByName(user)
P-269	-0.0381 -0.0458 -0.0921 -0.0756 -0.0236 -0.0447 -0.0810 -0.0526 -0.0931 -0.1049
S-816	Assert.assertEquals(2,json.size())
T-816	Assert.assertEquals(3,json.size())
H-816	-0.07402504235506058	Assert.assertEquals(3,json.size())
D-816	-0.07402504235506058	Assert.assertEquals(3,json.size())
P-816	-0.0375 -0.0951 -0.0500 -0.0407 -0.1205 -0.0373 -0.1049 -0.0515 -0.1032 -0.0995
S-172	new PoolBagEntry(null,pool)
T-172	new PoolBagEntry(null,0,pool)
H-172	-0.056069470942020416	new PoolBagEntry(null,0,pool)
D-172	-0.056069470942020416	new PoolBagEntry(null,0,pool)
P-172	-0.0702 -0.0282 -0.0034 -0.0365 -0.0977 -0.0236 -0.1228 -0.0216 -0.0322 -0.0728 -0.1078
S-71	mListView.getChildAt(index)
T-71	mListView.getListChildAt(index)
H-71	-0.07430750876665115	mListView.getChildAt(index)
D-71	-0.07430750876665115	mListView.getChildAt(index)
P-71	-0.0533 -0.0277 -0.0938 -0.0733 -0.0160 -0.0143 -0.0391 -0.0928 -0.1681 -0.1645
S-278	mListView.getChildAt(index)
T-278	mListView.getListChildAt(index)
H-278	-0.07430750876665115	mListView.getChildAt(index)
D-278	-0.07430750876665115	mListView.getChildAt(index)
P-278	-0.0533 -0.0277 -0.0938 -0.0733 -0.0160 -0.0143 -0.0391 -0.0928 -0.1681 -0.1645
S-810	response.set(ROLLED_BACK)
T-810	response.get(ROLLED_BACK)
H-810	-0.07898007333278656	response.get(ROLLED_BACK)
D-810	-0.07898007333278656	response.get(ROLLED_BACK)
P-810	-0.0423 -0.0965 -0.1466 -0.0919 -0.0151 -0.0302 -0.0941 -0.0896 -0.0811 -0.1024
S-673	"Using bind address: " + publicAddress
T-673	"Using bind address: " + bindAddress
H-673	-0.059062279760837555	"Using bind address: " + bindAddress
D-673	-0.059062279760837555	"Using bind address: " + bindAddress
P-673	-0.0651 -0.0171 -0.0354 -0.0309 -0.0856 -0.0768 -0.1034 -0.0271 -0.0592 -0.0900
S-624	distinctValues.put(distinct,distinct)
T-624	distinctValues.put(slice,distinct)
H-624	-0.0729137659072876	distinctValues.put(slice,distinct)
D-624	-0.0729137659072876	distinctValues.put(slice,distinct)
P-624	-0.0449 -0.0612 -0.0860 -0.0377 -0.1249 -0.0289 -0.0880 -0.0446 -0.1105 -0.1023
S-619	hz1.getLifecycleService().terminate()
T-619	hz1.getLifecycleService().shutdown()
H-619	-0.04817083105444908	hz1.getLifecycleService().shutdown()
D-619	-0.04817083105444908	hz1.getLifecycleService().shutdown()
P-619	-0.0321 -0.0238 -0.0398 -0.0574 -0.0195 -0.0338 -0.0703 -0.0311 -0.0667 -0.1071
S-257	StatBuckets.prettyUptime(secs)
T-257	StatBuckets.prettyUptimeStr(secs)
H-257	-0.6626526117324829	StatBuckets.prettyUptime(secs)
D-257	-0.6626526117324829	StatBuckets.prettyUptime(secs)
P-257	-0.7937 -0.3564 -0.0955 -0.4056 -0.0495 -0.0154 -0.2746 -3.7726 -0.7422 -0.1211
S-561	assertRemoveSubsystemResources(servicesA)
T-561	assertRemoveSubsystemResources(servicesB)
H-561	-0.40850502252578735	assertRemoveSubsystemResources(servicesA)
D-561	-0.40850502252578735	assertRemoveSubsystemResources(servicesA)
P-561	-0.0932 -0.1073 -0.2608 -0.0315 -0.0379 -0.1225 -1.6709 -0.9631 -0.6373 -0.1606
S-654	key.equals(OAuthConstants.SCOPE)
T-654	!key.equals(OAuthConstants.SCOPE)
H-654	-0.0601806677877903	!key.equals(OAuthConstants.SCOPE)
D-654	-0.0601806677877903	!key.equals(OAuthConstants.SCOPE)
P-654	-0.0253 -0.0486 -0.0880 -0.0528 -0.0953 -0.0298 -0.0434 -0.0941 -0.0089 -0.0877 -0.0880
S-757	engine.execute(cypher).toString()
T-757	engine.execute(cypher).dumpToString()
H-757	-0.07531777024269104	engine.execute(cypher).dumpToString()
D-757	-0.07531777024269104	engine.execute(cypher).dumpToString()
P-757	-0.0132 -0.1022 -0.0466 -0.0879 -0.0285 -0.0099 -0.0689 -0.2635 -0.0137 -0.0821 -0.1121
S-406	new HashMap<>(queryMemoryReservations)
T-406	new HashMap<>(queryMemoryRevocableReservations)
H-406	-0.03951399400830269	new HashMap<>(queryMemoryRevocableReservations)
D-406	-0.03951399400830269	new HashMap<>(queryMemoryRevocableReservations)
P-406	-0.0623 -0.0570 -0.0424 -0.0409 -0.0109 -0.0131 -0.0021 -0.0122 -0.0027 -0.0617 -0.0172 -0.0910 -0.1002
S-538	Calendar.getInstance(JSON.defaultLocale)
T-538	Calendar.getInstance(JSON.defaultTimeZone,JSON.defaultLocale)
H-538	-0.08510623127222061	Calendar.getInstance(JSON.defaultLocale)
D-538	-0.08510623127222061	Calendar.getInstance(JSON.defaultLocale)
P-538	-0.0221 -0.1003 -0.0111 -0.0606 -0.1592 -0.0909 -0.0286 -0.0206 -0.2416 -0.1161
S-711	autoCommit != conn.getAutoCommit()
T-711	autoCommit != null && autoCommit != conn.getAutoCommit()
H-711	-0.06897449493408203	autoCommit != null && autoCommit != conn.getAutoCommit()
D-711	-0.06897449493408203	autoCommit != null && autoCommit != conn.getAutoCommit()
P-711	-0.0154 -0.0314 -0.1754 -0.0909 -0.0715 -0.0233 -0.0276 -0.0436 -0.1524 -0.1061 -0.0633 -0.0313 -0.0261 -0.0794 -0.0970
S-5	"false".equals(showRelationships)
T-5	"false".equals(showRelationships) || result.hasErrors()
H-5	-0.07465577870607376	"false".equals(showRelationships) || result.hasErrors()
D-5	-0.07465577870607376	"false".equals(showRelationships) || result.hasErrors()
P-5	-0.2358 -0.0538 -0.0910 -0.0427 -0.1107 -0.1014 -0.0508 -0.0126 -0.0865 -0.0514 -0.0186 -0.0616 -0.0595 -0.0157 -0.1054 -0.0970
S-495	config().getSoLinger() > 0
T-495	javaChannel().isOpen() && config().getSoLinger() > 0
H-495	-0.13627637922763824	javaChannel().isOpen() && config().getSoLinger() > 0
D-495	-0.13627637922763824	javaChannel().isOpen() && config().getSoLinger() > 0
P-495	-1.1262 -0.0749 -0.1180 -0.1556 -0.0519 -0.0543 -0.0738 -0.1393 -0.0526 -0.0540 -0.0291 -0.0223 -0.0104 -0.0890 -0.1231 -0.0662 -0.0760
S-789	Flux.create(camelSink::set)
T-789	Flux.create(camelSink::set,FluxSink.OverflowStrategy.IGNORE)
H-789	-0.26574379205703735	Flux.create(camelSink::set,true)
D-789	-0.26574379205703735	Flux.create(camelSink::set,true)
P-789	-0.6051 -0.1138 -0.0728 -0.3433 -0.0733 -0.0240 -0.1945 -0.0823 -0.0791 -1.3871 -0.1025 -0.1111
S-335	new UnderFileStatus("dummy",isDirectory)
T-335	new UnderFileStatus("dummy",0L,isDirectory,0L,"owner","group",(short)077)
H-335	-0.07232598960399628	new UnderFileStatus("dummy",0L,isDirectory,0L,"owner","group",(short)077)
D-335	-0.07232598960399628	new UnderFileStatus("dummy",0L,isDirectory,0L,"owner","group",(short)077)
P-335	-0.0827 -0.0161 -0.0137 -0.0823 -0.0282 -0.0812 -0.1203 -0.0612 -0.2313 -0.1005 -0.0765 -0.0678 -0.0949 -0.0886 -0.0001 -0.1350 -0.0060 -0.1645 -0.0328 -0.0635 -0.0302 -0.0474 -0.0110 -0.0710 -0.1011
S-230	options.checkProvides.isOn()
T-230	options.checkProvides.isOn() || options.enables(DiagnosticGroups.MISSING_PROVIDE)
H-230	-0.053331874310970306	options.checkProvides.isOn() || options.enables(DiagnosticGroups.MISSING_PROVIDE)
D-230	-0.053331874310970306	options.checkProvides.isOn() || options.enables(DiagnosticGroups.MISSING_PROVIDE)
P-230	-0.0729 -0.1023 -0.0948 -0.0365 -0.0297 -0.1083 -0.1322 -0.0667 -0.0388 -0.0521 -0.1273 -0.0965 -0.0001 -0.0851 -0.0215 -0.0022 -0.0055 -0.0376 -0.0002 -0.0546 -0.0345 -0.0046 -0.0354 -0.0296 -0.0301 -0.0876
S-564	len % (1024 * 1024) / 10
T-564	len % (1024 * 1024) / 10000
H-564	-0.0698338970541954	len % (1024 * 1024) / 10000
D-564	-0.0698338970541954	len % (1024 * 1024) / 10000
P-564	-0.0815 -0.0370 -0.0216 -0.0502 -0.1150 -0.0288 -0.0620 -0.0379 -0.1725 -0.0918
S-461	RestartStrategies.fixedDelayRestart(3,0)
T-461	RestartStrategies.fixedDelayRestart(1,0)
H-461	-0.046813130378723145	RestartStrategies.fixedDelayRestart(1,0)
D-461	-0.046813130378723145	RestartStrategies.fixedDelayRestart(1,0)
P-461	-0.0633 -0.0200 -0.0163 -0.1107 -0.0415 -0.0222 -0.0293 -0.0109 -0.0483 -0.1056
S-521	future1.get(1,TimeUnit.SECONDS)
T-521	future1.get(2,TimeUnit.SECONDS)
H-521	-0.05703701451420784	future1.get(2,TimeUnit.SECONDS)
D-521	-0.05703701451420784	future1.get(2,TimeUnit.SECONDS)
P-521	-0.0467 -0.0185 -0.0501 -0.0234 -0.0682 -0.0388 -0.1031 -0.0221 -0.0954 -0.1043
S-590	new GZIPOutputStream(outputStream,true)
T-590	new GZIPOutputStream(outputStream)
H-590	-0.06247630715370178	new GZIPOutputStream(outputStream)
D-590	-0.06247630715370178	new GZIPOutputStream(outputStream)
P-590	-0.0703 -0.0326 -0.0117 -0.1090 -0.0264 -0.0361 -0.0963 -0.1174
S-771	mWorkerId + BASE_FILE_NUMBER
T-771	pId + BASE_FILE_NUMBER
H-771	-0.07716827094554901	times + BASE_FILE_NUMBER
D-771	-0.07716827094554901	times + BASE_FILE_NUMBER
P-771	-0.0828 -0.1173 -0.0291 -0.0943 -0.0415 -0.1025 -0.0268 -0.1230
S-274	implemetationMethodDescriptors.build()
T-274	implementationMethodDescriptors.build()
H-274	-0.06729298084974289	implementationMethodDescriptors.build()
D-274	-0.06729298084974289	implementationMethodDescriptors.build()
P-274	-0.0837 -0.0415 -0.0127 -0.1046 -0.0378 -0.0822 -0.1087
S-631	ImmutableSet<ImplemetationMethodDescriptor>
T-631	ImmutableSet<ImplementationMethodDescriptor>
H-631	-0.06804223358631134	ImmutableSet<ImplementationMethodDescriptor>
D-631	-0.06804223358631134	ImmutableSet<ImplementationMethodDescriptor>
P-631	-0.0156 -0.0702 -0.0864 -0.0649 -0.0315 -0.0985 -0.1091
S-307	new IntRangeValidator(1,true,true)
T-307	new IntRangeValidator(0,true,true)
H-307	-0.06977301836013794	new IntRangeValidator(1,true,true,true)
D-307	-0.06977301836013794	new IntRangeValidator(1,true,true,true)
P-307	-0.0703 -0.0237 -0.0154 -0.0089 -0.0830 -0.0772 -0.0923 -0.0956 -0.1070 -0.0360 -0.1198 -0.1080
S-127	ReferenceCountUtil.safeRelease(holder)
T-127	ReferenceCountUtil.release(holder)
H-127	-0.0711364597082138	ReferenceCountUtil.release(holder)
D-127	-0.0711364597082138	ReferenceCountUtil.release(holder)
P-127	-0.0100 -0.0698 -0.0528 -0.0978 -0.0628 -0.1004 -0.0444 -0.0955 -0.1065
S-272	mWorkerId + BASE_FILE_NUMBER
T-272	pId + BASE_FILE_NUMBER
H-272	-0.07716827094554901	times + BASE_FILE_NUMBER
D-272	-0.07716827094554901	times + BASE_FILE_NUMBER
P-272	-0.0828 -0.1173 -0.0291 -0.0943 -0.0415 -0.1025 -0.0268 -0.1230
S-587	IR.name(TMP_ERROR)
T-587	IR.thisNode()
H-587	-0.043354760855436325	IR.thisNode()
D-587	-0.043354760855436325	IR.thisNode()
P-587	-0.0167 -0.0905 -0.0255 -0.0150 -0.0342 -0.0782
S-698	ReferenceCountUtil.safeRelease(holder)
T-698	ReferenceCountUtil.release(holder)
H-698	-0.0711364597082138	ReferenceCountUtil.release(holder)
D-698	-0.0711364597082138	ReferenceCountUtil.release(holder)
P-698	-0.0100 -0.0698 -0.0528 -0.0978 -0.0628 -0.1004 -0.0444 -0.0955 -0.1065
S-344	field.set(instanceRef,value)
T-344	field.set(instance,value)
H-344	-0.09979212284088135	field.set(instance,value)
D-344	-0.09979212284088135	field.set(instance,value)
P-344	-0.0634 -0.0988 -0.1250 -0.0983 -0.0289 -0.1374 -0.1465 -0.0782 -0.1216
S-51	setNetworkTimeout(connection,networkTimeout)
T-51	setNetworkTimeout(connection,originalTimeout)
H-51	-0.07250389456748962	setNetworkTimeout(connection,originalTimeout)
D-51	-0.07250389456748962	setNetworkTimeout(connection,originalTimeout)
P-51	-0.0643 -0.0465 -0.0942 -0.1107 -0.0386 -0.1009 -0.0403 -0.0510 -0.0718 -0.1067
S-99	DEFAULT_ALLOW_SPILLING=false
T-99	DEFAULT_ALLOW_SPILLING=true
H-99	-0.051960911601781845	DEFAULT_ALLOW_SPILLING=true
D-99	-0.051960911601781845	DEFAULT_ALLOW_SPILLING=true
P-99	-0.0547 -0.0951 -0.0109 -0.0980 -0.0412 -0.0127 -0.0170 -0.0519 -0.0349 -0.1033
S-165	"unable to parse " + abstractOption
T-165	"unable to parse " + optionStr
H-165	-0.05439673736691475	"unable to parse " + optionStr
D-165	-0.05439673736691475	"unable to parse " + optionStr
P-165	-0.0526 -0.0182 -0.0134 -0.0619 -0.0979 -0.0635 -0.0948 -0.0322 -0.0157 -0.0937
S-222	out.writeObject(entry.getValue())
T-222	out.writeData(entry.getValue())
H-222	-0.07169433683156967	out.writeData(entry.getValue())
D-222	-0.07169433683156967	out.writeData(entry.getValue())
P-222	-0.0288 -0.0952 -0.0894 -0.0030 -0.0792 -0.0718 -0.1005 -0.0469 -0.1035 -0.0986
S-225	DEFAULT_LABEL_MIPMAP=true
T-225	DEFAULT_LABEL_MIPMAP=false
H-225	-0.07440588623285294	DEFAULT_LABEL_MIPMAP=false
D-225	-0.07440588623285294	DEFAULT_LABEL_MIPMAP=false
P-225	-0.0424 -0.0842 -0.0167 -0.0754 -0.0303 -0.0250 -0.0856 -0.0658 -0.2097 -0.1090
S-11	cached.get(walCacheLock)
T-11	cached.get(group)
H-11	-0.09906928241252899	cached.get(group)
D-11	-0.09906928241252899	cached.get(group)
P-11	-0.1048 -0.0940 -0.1541 -0.1266 -0.0192 -0.0747 -0.1201
S-30	patientState.getState().getId()
T-30	patientState.getState().getUuid()
H-30	-0.0633125901222229	patientState.getState().getUuid()
D-30	-0.0633125901222229	patientState.getState().getUuid()
P-30	-0.0344 -0.0654 -0.0929 -0.0524 -0.0365 -0.0644 -0.0383 -0.0609 -0.0759 -0.1119
S-787	eventJournalConfig.getMapName()
T-787	eventJournalConfig.getCacheName()
H-787	-0.06201541796326637	eventJournalConfig.getCacheName()
D-787	-0.06201541796326637	eventJournalConfig.getCacheName()
P-787	-0.0590 -0.0124 -0.0509 -0.1082 -0.0501 -0.0539 -0.0401 -0.0818 -0.1017
S-790	name="java:jboss/mail"
T-790	lookup="java:jboss/mail"
H-790	-0.05902429297566414	lookup="java:jboss/mail"
D-790	-0.05902429297566414	lookup="java:jboss/mail"
P-790	-0.0229 -0.0890 -0.0306 -0.0878 -0.0255 -0.0300 -0.0270 -0.1069 -0.1116
S-672	Math.min(clientCount,1)
T-672	Math.max(clientCount,1)
H-672	-0.07150060683488846	Math.max(clientCount,1)
D-672	-0.07150060683488846	Math.max(clientCount,1)
P-672	-0.0296 -0.1055 -0.0413 -0.0729 -0.0654 -0.0734 -0.0813 -0.0644 -0.1098
S-203	mTestStream.getBytesFlushed()
T-203	mTestStream.getFlushedBytes()
H-203	-0.10384394973516464	mTestStream.getFlushedBytes()
D-203	-0.10384394973516464	mTestStream.getFlushedBytes()
P-203	-0.0376 -0.0380 -0.0170 -0.0945 -0.0262 -0.0020 -0.0316 -0.6045 -0.0830 -0.1040
S-329	engine.execute(query).toString()
T-329	engine.execute(query).dumpToString()
H-329	-0.06399405747652054	engine.execute(query).dumpToString()
D-329	-0.06399405747652054	engine.execute(query).dumpToString()
P-329	-0.0174 -0.0936 -0.0431 -0.0786 -0.0561 -0.0652 -0.0799 -0.0203 -0.0768 -0.1089
S-360	@IntMethodAnnotation(value=-45)
T-360	@InputIntMethodAnnotation(value=-45)
H-360	-0.06864666938781738	@InputIntMethodAnnotation(value=-45)
D-360	-0.06864666938781738	@InputIntMethodAnnotation(value=-45)
P-360	-0.1042 -0.1195 -0.0858 -0.0558 -0.0207 -0.0994 -0.0661 -0.0177 -0.0165 -0.1008
S-531	mTestStream.getBytesFlushed()
T-531	mTestStream.getFlushedBytes()
H-531	-0.10384394973516464	mTestStream.getFlushedBytes()
D-531	-0.10384394973516464	mTestStream.getFlushedBytes()
P-531	-0.0376 -0.0380 -0.0170 -0.0945 -0.0262 -0.0020 -0.0316 -0.6045 -0.0830 -0.1040
S-362	case REPLACE_IS_SAME:
T-362	case REPLACE_IF_SAME:
H-362	-0.06487338989973068	case REPLACE_IF_SAME:
D-362	-0.06487338989973068	case REPLACE_IF_SAME:
P-362	-0.0264 -0.0290 -0.0714 -0.0509 -0.1454 -0.0625 -0.0129 -0.0813 -0.1041
S-759	final StringBuffer result=new StringBuffer(20);
T-759	final StringBuilder result=new StringBuilder(20);
H-759	-0.0626787319779396	final StringBuilder result=new StringBuilder(20);
D-759	-0.0626787319779396	final StringBuilder result=new StringBuilder(20);
P-759	-0.0320 -0.1009 -0.0792 -0.0422 -0.0644 -0.0583 -0.0146 -0.0654 -0.1071
S-613	getSslStoreProvider().getKeyStore()
T-613	getSslStoreProvider().getTrustStore()
H-613	-0.06246134638786316	getSslStoreProvider().getTrustStore()
D-613	-0.06246134638786316	getSslStoreProvider().getTrustStore()
P-613	-0.0281 -0.0281 -0.0321 -0.0355 -0.0614 -0.1351 -0.0015 -0.0926 -0.0993 -0.1110
S-627	assertEquals(2,conceptStopWords.size())
T-627	assertEquals(1,conceptStopWords.size())
H-627	-0.06332386285066605	assertEquals(1,conceptStopWords.size())
D-627	-0.06332386285066605	assertEquals(1,conceptStopWords.size())
P-627	-0.0479 -0.0563 -0.0284 -0.0355 -0.0421 -0.1080 -0.0521 -0.0954 -0.1042
S-393	instance2.getLifecycleService().terminate()
T-393	instance2.getLifecycleService().shutdown()
H-393	-0.04950409755110741	instance2.getLifecycleService().shutdown()
D-393	-0.04950409755110741	instance2.getLifecycleService().shutdown()
P-393	-0.0449 -0.0238 -0.0571 -0.0336 -0.0307 -0.0762 -0.0173 -0.0544 -0.1076
S-394	node.getLifecycleService().terminate()
T-394	node.getLifecycleService().shutdown()
H-394	-0.06302483379840851	node.getLifecycleService().shutdown()
D-394	-0.06302483379840851	node.getLifecycleService().shutdown()
P-394	-0.0610 -0.0921 -0.0594 -0.0246 -0.0277 -0.0855 -0.0349 -0.0732 -0.1088
S-275	S3DataSegmentKiller.class
T-275	S3DataSegmentMover.class
H-275	-0.04326517879962921	S3DataSegmentMover.class
D-275	-0.04326517879962921	S3DataSegmentMover.class
P-275	-0.0311 -0.0404 -0.0354 -0.0086 -0.0066 -0.0062 -0.0930 -0.0632 -0.1051
S-343	assertFalse(user.isGeoEnabled())
T-343	assertTrue(user.isGeoEnabled())
H-343	-0.18980219960212708	assertTrue(user.isGeoEnabled())
D-343	-0.18980219960212708	assertTrue(user.isGeoEnabled())
P-343	-0.0501 -0.0945 -0.0512 -0.0957 -0.0604 -1.0901 -0.0317 -0.1356 -0.0990
S-302	assertEquals(expectedPlan,actualPlan)
T-302	assertPlanEquals(expectedPlan,actualPlan)
H-302	-0.2786397933959961	assertPlanEquals(expectedPlan,actualPlan)
D-302	-0.2786397933959961	assertPlanEquals(expectedPlan,actualPlan)
P-302	-2.6171 -0.0049 -0.0194 -0.0866 -0.0203 -0.0216 -0.0729 -0.0217 -0.0125 -0.0886 -0.0995
S-576	attribute.getDefinition().getAttributeMarshaller()
T-576	attribute.getDefinition().getMarshaller()
H-576	-0.059986479580402374	attribute.getDefinition().getMarshaller()
D-576	-0.059986479580402374	attribute.getDefinition().getMarshaller()
P-576	-0.1197 -0.1032 -0.0585 -0.0221 -0.0487 -0.0367 -0.0003 -0.0548 -0.0959
S-522	connectPromise.setFailure(t)
T-522	connectPromise.tryFailure(t)
H-522	-0.05109734460711479	connectPromise.tryFailure(t)
D-522	-0.05109734460711479	connectPromise.tryFailure(t)
P-522	-0.0338 -0.0086 -0.0820 -0.0138 -0.0107 -0.0964 -0.0340 -0.0862 -0.0944
S-396	websocketComponent.setMaxThreads(11)
T-396	websocketComponent.setMaxThreads(20)
H-396	-0.05099033564329147	websocketComponent.setMaxThreads(20)
D-396	-0.05099033564329147	websocketComponent.setMaxThreads(20)
P-396	-0.0397 -0.0156 -0.0867 -0.0479 -0.0376 -0.0121 -0.0622 -0.0527 -0.1044
S-415	websocketComponent.setMaxThreads(11)
T-415	websocketComponent.setMaxThreads(20)
H-415	-0.05099033564329147	websocketComponent.setMaxThreads(20)
D-415	-0.05099033564329147	websocketComponent.setMaxThreads(20)
P-415	-0.0397 -0.0156 -0.0867 -0.0479 -0.0376 -0.0121 -0.0622 -0.0527 -0.1044
S-479	removeQuote(timestring.trim())
T-479	removeQuotes(timestring.trim())
H-479	-0.4437274932861328	removeQuote(timestring.trim())
D-479	-0.4437274932861328	removeQuote(timestring.trim())
P-479	-0.0850 -0.8826 -0.1377 -2.0527 -0.5282 -0.0968 -0.0155 -0.0864 -0.1087
S-591	LogUtils.initializeDefaultConsoleLogger()
T-591	LogUtils.initializeDefaultTestConsoleLogger()
H-591	-0.5373190641403198	LogUtils.initializeDefaultConsoleLogger(true)
D-591	-0.5373190641403198	LogUtils.initializeDefaultConsoleLogger(true)
P-591	-0.3654 -0.0185 -0.0984 -0.0443 -0.1297 -2.2514 -0.0953 -0.5227 -2.1573 -0.1171 -0.1104
S-247	ctx.sendDownstream(e)
T-247	ctx.sendUpstream(e)
H-247	-0.06827390193939209	ctx.sendUpstream(e)
D-247	-0.06827390193939209	ctx.sendUpstream(e)
P-247	-0.0195 -0.0986 -0.0353 -0.0471 -0.0318 -0.0938 -0.0799 -0.1038 -0.1047
S-555	ImmutableSet.of("testStringRepresentation")
T-555	ImmutableSet.of("testStringRepresentation","testDataTypeValidationOnProperties")
H-555	-0.5431408286094666	ImmutableSet.of("testStringRepresentation","null")
D-555	-0.5431408286094666	ImmutableSet.of("testStringRepresentation","null")
P-555	-0.0149 -0.0920 -0.0657 -0.0506 -0.1264 -0.0626 -0.4860 -0.2451 -4.3179 -0.4054 -0.1080
S-57	jarName.endsWith(".jar")
T-57	jarName.endsWith(".jar") || jarName.endsWith(".war")
H-57	-0.05621233955025673	jarName.endsWith(".jar") || jarName.endsWith(".war")
D-57	-0.05621233955025673	jarName.endsWith(".jar") || jarName.endsWith(".war")
P-57	-0.0273 -0.0712 -0.0830 -0.0131 -0.0172 -0.0216 -0.0580 -0.1237 -0.0793 -0.0259 -0.0573 -0.1088 -0.0181 -0.0312 -0.0326 -0.0093 -0.1374 -0.0969
S-459	ast.getNextSibling() != null
T-459	ast != null && ast.getNextSibling() != null
H-459	-0.05958770588040352	ast != null && ast.getNextSibling() != null
D-459	-0.05958770588040352	ast != null && ast.getNextSibling() != null
P-459	-0.0079 -0.0404 -0.0789 -0.0820 -0.0086 -0.0978 -0.0584 -0.0533 -0.0334 -0.0801 -0.0723 -0.0718 -0.0897
S-794	ModuleFactory.stopModule(mod)
T-794	ModuleFactory.stopModule(mod,true,true)
H-794	-0.1573765128850937	ModuleFactory.stopModule(mod,true)
D-794	-0.1573765128850937	ModuleFactory.stopModule(mod,true)
P-794	-0.0183 -0.0369 -0.0947 -0.0227 -0.0349 -0.1455 -0.0145 -0.3550 -0.0022 -0.8996 -0.1070
S-492	type == VertexDataType.VertexBufferObject
T-492	type == VertexDataType.VertexBufferObject || Mesh.forceVBO
H-492	-0.0426652766764164	type == VertexDataType.VertexBufferObject || Mesh.forceVBO
D-492	-0.0426652766764164	type == VertexDataType.VertexBufferObject || Mesh.forceVBO
P-492	-0.0634 -0.0330 -0.0205 -0.0107 -0.0952 -0.0405 -0.0562 -0.0508 -0.0544 -0.0003 -0.0714 -0.0002 -0.0348 -0.0005 -0.1083
S-546	hazelcastFactory.newHazelcastClient()
T-546	hazelcastFactory.newHazelcastClient(newClientConfig())
H-546	-0.10708431154489517	hazelcastFactory.newHazelcastClient(newClientConfig())
D-546	-0.10708431154489517	hazelcastFactory.newHazelcastClient(newClientConfig())
P-546	-0.0170 -0.0325 -0.1001 -0.0458 -0.0300 -0.0134 -0.0410 -0.1855 -0.0281 -0.6013 -0.0696 -0.1205
S-453	Preconditions.checkNotNull(blockIds)
T-453	Preconditions.checkNotNull(blockIds,"blockIds")
H-453	-0.05892859771847725	Preconditions.checkNotNull(blockIds,"blockIds")
D-453	-0.05892859771847725	Preconditions.checkNotNull(blockIds,"blockIds")
P-453	-0.0188 -0.0852 -0.0834 -0.1016 -0.0977 -0.0109 -0.0344 -0.0680 -0.0116 -0.0496 -0.0467 -0.0993
S-801	getTaskWriterCount(session) > 1
T-801	getTaskWriterCount(session) > 1 && !node.getPartitioningScheme().isPresent()
H-801	-0.05954936891794205	getTaskWriterCount(session) > 1 && !node.getPartitioningScheme().isPresent()
D-801	-0.05954936891794205	getTaskWriterCount(session) > 1 && !node.getPartitioningScheme().isPresent()
P-801	-0.0597 -0.0280 -0.0819 -0.1081 -0.0279 -0.0846 -0.0384 -0.0754 -0.0262 -0.0110 -0.0194 -0.1275 -0.0817 -0.0784 -0.0394 -0.0179 -0.0448 -0.0423 -0.0088 -0.1564 -0.0930
S-215	lexer.token == Token.HINT
T-215	lexer.token == Token.HINT && !lexer.isEnabled(SQLParserFeature.StrictForWall)
H-215	-0.060299694538116455	lexer.token == Token.HINT && !lexer.isEnabled(SQLParserFeature.StrictForWall)
D-215	-0.060299694538116455	lexer.token == Token.HINT && !lexer.isEnabled(SQLParserFeature.StrictForWall)
P-215	-0.0111 -0.1116 -0.0497 -0.0764 -0.0485 -0.1091 -0.0559 -0.0318 -0.1411 -0.0326 -0.0100 -0.1170 -0.0405 -0.0152 -0.0139 -0.0409 -0.0782 -0.0128 -0.0666 -0.1079 -0.0169 -0.0308 -0.1425 -0.0861
S-144	type == TokenTypes.CLASS_DEF
T-144	type == TokenTypes.CLASS_DEF || type == TokenTypes.ENUM_DEF || type == TokenTypes.INTERFACE_DEF
H-144	-0.08964551240205765	type == TokenTypes.CLASS_DEF || type == TokenTypes.ENUM_DEF || type == TokenTypes.INTERFACE_DEF
D-144	-0.08964551240205765	type == TokenTypes.CLASS_DEF || type == TokenTypes.ENUM_DEF || type == TokenTypes.INTERFACE_DEF
P-144	-0.0273 -0.0638 -0.0272 -0.0504 -0.1061 -0.0490 -0.0890 -0.0194 -0.0236 -0.0536 -0.0490 -0.0381 -0.0544 -0.0886 -0.0284 -0.0669 -0.0187 -0.6746 -0.0472 -0.0513 -0.0418 -0.0718 -0.1071 -0.2996 -0.0635 -0.0647 -0.1453
S-105	CHECK_TEXT.get("Properties")
T-105	CHECK_TEXT.computeIfAbsent("Properties",unused -> "")
H-105	-0.057514067739248276	CHECK_TEXT.computeIfAbsent("Properties",unused -> "")
D-105	-0.057514067739248276	CHECK_TEXT.computeIfAbsent("Properties",unused -> "")
P-105	-0.0310 -0.0826 -0.0501 -0.0692 -0.0718 -0.0024 -0.0540 -0.0371 -0.2052 -0.0041 -0.0062 -0.0289 -0.1051
S-618	Byte.valueOf(value.toString())
T-618	Byte.parseByte(value.toString())
H-618	-0.0708143413066864	Byte.parseByte(value.toString())
D-618	-0.0708143413066864	Byte.parseByte(value.toString())
P-618	-0.0477 -0.1109 -0.0033 -0.0064 -0.0964 -0.0661 -0.0953 -0.0624 -0.1160 -0.1037
S-142	Arrays.asList("ls","pwd")
T-142	Arrays.asList("cmd","ls","pwd")
H-142	-0.08678969740867615	Arrays.asList("cmd","ls","pwd")
D-142	-0.08678969740867615	Arrays.asList("cmd","ls","pwd")
P-142	-0.0479 -0.0881 -0.0201 -0.0488 -0.0781 -0.2704 -0.0456 -0.0468 -0.0332 -0.1804 -0.0953
S-210	assertEquals(expectedPlan,actualPlan)
T-210	assertPlanEquals(expectedPlan,actualPlan)
H-210	-0.2786397933959961	assertPlanEquals(expectedPlan,actualPlan)
D-210	-0.2786397933959961	assertPlanEquals(expectedPlan,actualPlan)
P-210	-2.6171 -0.0049 -0.0194 -0.0866 -0.0203 -0.0216 -0.0729 -0.0217 -0.0125 -0.0886 -0.0995
S-724	new ModelNode().set(17500)
T-724	new ModelNode().set(17500L)
H-724	-0.05916712060570717	new ModelNode().set(17500L)
D-724	-0.05916712060570717	new ModelNode().set(17500L)
P-724	-0.0809 -0.0142 -0.0465 -0.0376 -0.1056 -0.0394 -0.0267 -0.0620 -0.0699 -0.1087
S-29	IOConverter.toInputStream(s)
T-29	IOConverter.toInputStream(s,null)
H-29	-0.07021457701921463	IOConverter.toInputStream(s,null)
D-29	-0.07021457701921463	IOConverter.toInputStream(s,null)
P-29	-0.0309 -0.0359 -0.1197 -0.0797 -0.0569 -0.0662 -0.0131 -0.1312 -0.0199 -0.1136 -0.1053
S-106	new StormClientHandler(client)
T-106	new StormClientErrorHandler(client.name())
H-106	-0.06366072595119476	new StormClientErrorHandler(client.name())
D-106	-0.06366072595119476	new StormClientErrorHandler(client.name())
P-106	-0.0652 -0.0140 -0.0055 -0.0533 -0.0650 -0.0922 -0.0338 -0.2020 -0.0393 -0.0218 -0.1080
S-621	stat.st_size.get()
T-621	stat.st_size.longValue()
H-621	-0.07658813893795013	stat.st_size.longValue()
D-621	-0.07658813893795013	stat.st_size.longValue()
P-621	-0.0462 -0.0905 -0.0535 -0.0792 -0.0496 -0.0833 -0.0883 -0.1070 -0.0698 -0.0984
S-465	assertEquals(expectedPlan,actualPlan)
T-465	assertPlanEquals(expectedPlan,actualPlan)
H-465	-0.2786397933959961	assertPlanEquals(expectedPlan,actualPlan)
D-465	-0.2786397933959961	assertPlanEquals(expectedPlan,actualPlan)
P-465	-2.6171 -0.0049 -0.0194 -0.0866 -0.0203 -0.0216 -0.0729 -0.0217 -0.0125 -0.0886 -0.0995
S-244	assertEquals(expectedPlan,actualPlan)
T-244	assertPlanEquals(expectedPlan,actualPlan)
H-244	-0.2786397933959961	assertPlanEquals(expectedPlan,actualPlan)
D-244	-0.2786397933959961	assertPlanEquals(expectedPlan,actualPlan)
P-244	-2.6171 -0.0049 -0.0194 -0.0866 -0.0203 -0.0216 -0.0729 -0.0217 -0.0125 -0.0886 -0.0995
S-319	oldOverride.removeParameter("enabled")
T-319	oldOverride.addParameter("enabled","enabled")
H-319	-0.054775163531303406	oldOverride.addParameter("enabled","enabled")
D-319	-0.054775163531303406	oldOverride.addParameter("enabled","enabled")
P-319	-0.0553 -0.0436 -0.0857 -0.0431 -0.0155 -0.0637 -0.0266 -0.0657 -0.0122 -0.0811 -0.1102
S-445	assertEquals(expectedPlan,actualPlan)
T-445	assertPlanEquals(expectedPlan,actualPlan)
H-445	-0.2786397933959961	assertPlanEquals(expectedPlan,actualPlan)
D-445	-0.2786397933959961	assertPlanEquals(expectedPlan,actualPlan)
P-445	-2.6171 -0.0049 -0.0194 -0.0866 -0.0203 -0.0216 -0.0729 -0.0217 -0.0125 -0.0886 -0.0995
S-201	mesh.getNumVertices() / 2
T-201	mesh.getNumVertices() / 4
H-201	-0.06258410215377808	mesh.getNumVertices() / 4
D-201	-0.06258410215377808	mesh.getNumVertices() / 4
P-201	-0.0433 -0.0827 -0.0516 -0.0534 -0.0271 -0.0872 -0.0803 -0.0405 -0.0972
S-363	GatherGettersAndSetterProperties.gather(compiler,mainRoot)
T-363	GatherGetterAndSetterProperties.gather(compiler,mainRoot)
H-363	-0.05021701008081436	GatherGetterAndSetterProperties.gather(compiler,mainRoot)
D-363	-0.05021701008081436	GatherGetterAndSetterProperties.gather(compiler,mainRoot)
P-363	-0.0219 -0.0117 -0.0524 -0.0166 -0.0324 -0.0209 -0.1046 -0.0120 -0.0977 -0.0127 -0.0951 -0.0250 -0.0474 -0.0940 -0.1087
S-26	LOG.info("Storage directory " + rootPath + " does not exist")
T-26	LOG.warn("Storage directory " + rootPath + " does not exist")
H-26	-0.07822682708501816	LOG.warn("Storage directory " + rootPath + " does not exist")
D-26	-0.07822682708501816	LOG.warn("Storage directory " + rootPath + " does not exist")
P-26	-0.0389 -0.0914 -0.1505 -0.0532 -0.0156 -0.0249 -0.1091 -0.1042 -0.0066 -0.1022 -0.0910 -0.1013 -0.0549 -0.0681 -0.1381 -0.1017
S-338	LOGGER.error("no property for " + type + ", "+ format)
T-338	LOGGER.debug("no property for " + type + ", "+ format)
H-338	-0.06253598630428314	LOGGER.debug("no property for " + type + ", "+ format)
D-338	-0.06253598630428314	LOGGER.debug("no property for " + type + ", "+ format)
P-338	-0.0171 -0.0991 -0.0189 -0.0596 -0.0476 -0.0462 -0.0782 -0.0969 -0.0964 -0.0368 -0.1225 -0.0325 -0.0267 -0.0311 -0.0874 -0.1037
S-152	statistics.addGetTimeNano(System.nanoTime() - start)
T-152	statistics.addGetTimeNanos(System.nanoTime() - start)
H-152	-0.0651286244392395	statistics.addGetTimeNanos(System.nanoTime() - start)
D-152	-0.0651286244392395	statistics.addGetTimeNanos(System.nanoTime() - start)
P-152	-0.0388 -0.0882 -0.0464 -0.0775 -0.0516 -0.0113 -0.0763 -0.0270 -0.0968 -0.0353 -0.0310 -0.1078 -0.1013 -0.0699 -0.0787 -0.1042
S-129	Assert.assertEquals(1145,details.get(1).getAbsolutePosition())
T-129	Assert.assertEquals(1144,details.get(1).getAbsolutePosition())
H-129	-0.13602176308631897	Assert.assertEquals(1145,details.get(1).getAbsolutePosition())
D-129	-0.13602176308631897	Assert.assertEquals(1145,details.get(1).getAbsolutePosition())
P-129	-0.0419 -0.0957 -0.0413 -0.0422 -0.0569 -0.0736 -1.2629 -0.0223 -0.0976 -0.0530 -0.0172 -0.0742 -0.0198 -0.0701 -0.0946 -0.1131
S-79	LOG.error("OpenTracing: Failed to capture tracing data",t)
T-79	LOG.warn("OpenTracing: Failed to capture tracing data",t)
H-79	-0.05378163978457451	LOG.warn("OpenTracing: Failed to capture tracing data",t)
D-79	-0.05378163978457451	LOG.warn("OpenTracing: Failed to capture tracing data",t)
P-79	-0.0455 -0.1009 -0.0230 -0.0601 -0.0369 -0.0169 -0.0890 -0.0266 -0.0638 -0.0174 -0.0182 -0.0794 -0.0459 -0.0407 -0.0892 -0.1072
S-422	Foundation.NSLog("[info] " + tag + ": "+ message)
T-422	Foundation.log("[info] " + tag + ": "+ message)
H-422	-0.06982073932886124	Foundation.log("[info] " + tag + ": "+ message)
D-422	-0.06982073932886124	Foundation.log("[info] " + tag + ": "+ message)
P-422	-0.0084 -0.0891 -0.1705 -0.0097 -0.0234 -0.1091 -0.0901 -0.0965 -0.0507 -0.1087 -0.0115 -0.0212 -0.0651 -0.0898 -0.1036
S-516	Foundation.NSLog("[debug] " + tag + ": "+ message)
T-516	Foundation.log("[debug] " + tag + ": "+ message)
H-516	-0.07254347950220108	Foundation.log("[debug] " + tag + ": "+ message)
D-516	-0.07254347950220108	Foundation.log("[debug] " + tag + ": "+ message)
P-516	-0.0089 -0.0883 -0.2369 -0.0093 -0.0192 -0.1219 -0.0706 -0.0888 -0.0497 -0.1007 -0.0111 -0.0203 -0.0667 -0.0923 -0.1034
S-500	Foundation.NSLog("[error] " + tag + ": "+ message)
T-500	Foundation.log("[error] " + tag + ": "+ message)
H-500	-0.07193424552679062	Foundation.log("[error] " + tag + ": "+ message)
D-500	-0.07193424552679062	Foundation.log("[error] " + tag + ": "+ message)
P-500	-0.0083 -0.0878 -0.1814 -0.0118 -0.0400 -0.1202 -0.0830 -0.0922 -0.0501 -0.1035 -0.0106 -0.0204 -0.0617 -0.1025 -0.1053
S-469	logger.debug("AtmosphereResource {} is resuming",uuid())
T-469	logger.trace("AtmosphereResource {} is resuming",uuid())
H-469	-0.052829716354608536	logger.trace("AtmosphereResource {} is resuming",uuid())
D-469	-0.052829716354608536	logger.trace("AtmosphereResource {} is resuming",uuid())
P-469	-0.0405 -0.0954 -0.0313 -0.0655 -0.0298 -0.0148 -0.0138 -0.0364 -0.0365 -0.0998 -0.0657 -0.0077 -0.0370 -0.0231 -0.1403 -0.1076
S-250	hashFunction.newHasher().putBytes(littleEndian)
T-250	hashFunction.newHasher().putBytes(bigEndian)
H-250	-0.06434225291013718	hashFunction.newHasher().putBytes(bigEndian)
D-250	-0.06434225291013718	hashFunction.newHasher().putBytes(bigEndian)
P-250	-0.0497 -0.0449 -0.0925 -0.0672 -0.0351 -0.0295 -0.0525 -0.1229 -0.0495 -0.0712 -0.0477 -0.0260 -0.1080 -0.1041
S-628	Assert.notNull(jarScanner,"Patterns must not be null")
T-628	Assert.notNull(patterns,"Patterns must not be null")
H-628	-0.09307682514190674	Assert.notNull(jarScanner,"Patterns must not be null")
D-628	-0.09307682514190674	Assert.notNull(jarScanner,"Patterns must not be null")
P-628	-0.0406 -0.0991 -0.4299 -0.0893 -0.1101 -0.0838 -0.0260 -0.0191 -0.0051 -0.0814 -0.1062 -0.0687 -0.0496 -0.0463 -0.1409
S-563	doMethod("GET","/books/" + bookId,null)
T-563	getResponse("GET","/books/" + bookId,null)
H-563	-0.06759320944547653	getResponse("GET","/books/" + bookId,null)
D-563	-0.06759320944547653	getResponse("GET","/books/" + bookId,null)
P-563	-0.0613 -0.0680 -0.0357 -0.0616 -0.0471 -0.0273 -0.0617 -0.0929 -0.0557 -0.0560 -0.1234 -0.0410 -0.1038 -0.1108
S-263	this.registry.getValue().addXAResourceRecovery(recovery)
T-263	this.registry.getValue().removeXAResourceRecovery(recovery)
H-263	-0.05567459389567375	this.registry.getValue().removeXAResourceRecovery(recovery)
D-263	-0.05567459389567375	this.registry.getValue().removeXAResourceRecovery(recovery)
P-263	-0.0642 -0.0959 -0.0299 -0.0929 -0.0238 -0.0815 -0.0260 -0.0146 -0.0334 -0.0132 -0.1116 -0.0104 -0.0452 -0.0903 -0.1021
S-733	testClass.getMethod(SUITE_METHODNAME,new Class[0])
T-733	testClass.getMethod(SUITE_METHODNAME)
H-733	-0.060199204832315445	testClass.getMethod(SUITE_METHODNAME)
D-733	-0.060199204832315445	testClass.getMethod(SUITE_METHODNAME)
P-733	-0.0072 -0.0986 -0.0588 -0.0703 -0.0850 -0.0106 -0.0255 -0.0647 -0.0547 -0.0893 -0.0560 -0.1015
S-181	getOrCreateContainer().unlock(dataKey,caller,threadId)
T-181	getOrCreateContainer().forceUnlock(dataKey)
H-181	-0.08078974485397339	getOrCreateContainer().unlock(dataKey,caller,threadId)
D-181	-0.08078974485397339	getOrCreateContainer().unlock(dataKey,caller,threadId)
P-181	-0.0068 -0.0081 -0.0610 -0.0876 -0.0098 -0.1253 -0.1050 -0.0753 -0.1131 -0.0790 -0.1682 -0.0855 -0.0810 -0.1041 -0.1022
S-162	getOrCreateContainer().unlock(dataKey,caller,threadId)
T-162	getOrCreateContainer().forceUnlock(dataKey)
H-162	-0.08078974485397339	getOrCreateContainer().unlock(dataKey,caller,threadId)
D-162	-0.08078974485397339	getOrCreateContainer().unlock(dataKey,caller,threadId)
P-162	-0.0068 -0.0081 -0.0610 -0.0876 -0.0098 -0.1253 -0.1050 -0.0753 -0.1131 -0.0790 -0.1682 -0.0855 -0.0810 -0.1041 -0.1022
S-695	waitForJobExecutorToProcessAllJobsAndExecutableTimerJobs(10000,200)
T-695	executeJobExecutorForTime(10000,200)
H-695	-0.04283973202109337	waitForJobExecutorToProcessAllJobsAndExecutableTimerJobs(20000,200)
D-695	-0.04283973202109337	waitForJobExecutorToProcessAllJobsAndExecutableTimerJobs(20000,200)
P-695	-0.1332 -0.0377 -0.0144 -0.0796 -0.0251 -0.0797 -0.0210 -0.0312 -0.0122 -0.0322 -0.0153 -0.0052 -0.0149 -0.0334 -0.1075
S-27	waitForJobExecutorToProcessAllJobsAndExecutableTimerJobs(10000,200)
T-27	executeJobExecutorForTime(10000,200)
H-27	-0.04283973202109337	waitForJobExecutorToProcessAllJobsAndExecutableTimerJobs(20000,200)
D-27	-0.04283973202109337	waitForJobExecutorToProcessAllJobsAndExecutableTimerJobs(20000,200)
P-27	-0.1332 -0.0377 -0.0144 -0.0796 -0.0251 -0.0797 -0.0210 -0.0312 -0.0122 -0.0322 -0.0153 -0.0052 -0.0149 -0.0334 -0.1075
S-238	client.getVertx().setTimer(1,id -> checkExpired())
T-238	client.getVertx().setTimer(1000,id -> checkExpired())
H-238	-0.07321035116910934	client.getVertx().setTimer(1000,id -> checkExpired())
D-238	-0.07321035116910934	client.getVertx().setTimer(1000,id -> checkExpired())
P-238	-0.0602 -0.1070 -0.0546 -0.0483 -0.0445 -0.0571 -0.0476 -0.0532 -0.0275 -0.2490 -0.0904 -0.0616 -0.0531 -0.0101 -0.1025 -0.1047
S-401	public Integer getRequestRequiredAcks(){ return requestRequiredAcks; }
T-401	public String getRequestRequiredAcks(){ return requestRequiredAcks; }
H-401	-0.056916169822216034	public String getRequestRequiredAcks(){ return requestRequiredAcks; }
D-401	-0.056916169822216034	public String getRequestRequiredAcks(){ return requestRequiredAcks; }
P-401	-0.0560 -0.0529 -0.0473 -0.0427 -0.0280 -0.0610 -0.0303 -0.0905 -0.0565 -0.0535 -0.0212 -0.0531 -0.0621 -0.0962 -0.1024
S-731	LOG.trace("Terminating channel to the remote gRPC server")
T-731	LOG.debug("Terminating channel to the remote gRPC server")
H-731	-0.19067679345607758	LOG.trace("Terminating channel to the remote gRPC server",e)
D-731	-0.19067679345607758	LOG.trace("Terminating channel to the remote gRPC server",e)
P-731	-0.0597 -0.0939 -0.1744 -0.0557 -0.7605 -0.0118 -0.0184 -0.0618 -0.1290 -0.2604 -0.0419 -0.0141 -0.0441 -0.4401 -0.9053 -0.0645 -0.1059
S-16	LOG.info("Finding components in url: {}",url)
T-16	LOG.trace("Finding components in url: {}",url)
H-16	-0.06172820180654526	LOG.trace("Finding components in url: {}",url)
D-16	-0.06172820180654526	LOG.trace("Finding components in url: {}",url)
P-16	-0.0872 -0.0931 -0.0441 -0.0663 -0.0263 -0.0324 -0.0139 -0.0791 -0.0222 -0.0991 -0.0534 -0.0702 -0.0347 -0.0968 -0.1071
S-814	details.put(CONFIG_HASH_KEY,currentConfigHash)
T-814	details.setProperty(CONFIG_HASH_KEY,currentConfigHash)
H-814	-0.17368221282958984	details.put(CONFIG_HASH_KEY,currentConfigHash)
D-814	-0.17368221282958984	details.put(CONFIG_HASH_KEY,currentConfigHash)
P-814	-0.0493 -0.0969 -0.0671 -0.1807 -0.0420 -0.0936 -1.2369 -0.1149 -0.0525 -0.1421 -0.1974 -0.0576 -0.0433 -0.1164 -0.1146
S-809	logger.debug("Invalid Atmosphere Version {}",javascriptVersion)
T-809	logger.error("Invalid Atmosphere Version {}",javascriptVersion)
H-809	-0.05519680306315422	logger.error("Invalid Atmosphere Version {}",javascriptVersion)
D-809	-0.05519680306315422	logger.error("Invalid Atmosphere Version {}",javascriptVersion)
P-809	-0.0320 -0.0990 -0.1138 -0.0665 -0.0358 -0.0378 -0.0149 -0.0151 -0.0368 -0.0482 -0.0542 -0.0208 -0.0532 -0.0913 -0.1085
S-32	ssl.has(CommonAttributes.CA_CERTIFICATE_FILE)
T-32	ssl.hasDefined(CommonAttributes.CA_CERTIFICATE_FILE)
H-32	-0.05902436003088951	ssl.hasDefined(CommonAttributes.CA_CERTIFICATE_FILE)
D-32	-0.05902436003088951	ssl.hasDefined(CommonAttributes.CA_CERTIFICATE_FILE)
P-32	-0.0414 -0.0891 -0.0340 -0.0039 -0.0901 -0.0265 -0.0342 -0.1060 -0.0331 -0.0951 -0.0271 -0.0489 -0.0773 -0.0306 -0.1064 -0.1006
S-484	mapContainer.getMapConfig().getTimeToLiveSeconds() * 1000
T-484	mapContainer.getMapConfig().getTimeToLiveSeconds() * 1000L
H-484	-0.05353793874382973	mapContainer.getMapConfig().getTimeToLiveSeconds() * 1000L
D-484	-0.05353793874382973	mapContainer.getMapConfig().getTimeToLiveSeconds() * 1000L
P-484	-0.0632 -0.0239 -0.0866 -0.0528 -0.0801 -0.0493 -0.0650 -0.0279 -0.0456 -0.0359 -0.0279 -0.0583 -0.0857 -0.0182 -0.0553 -0.0810
S-60	endFunction("write_column_statistics: ",ret != false)
T-60	endFunction("write_column_statistics: ",ret != false,null)
H-60	-0.06178563833236694	endFunction("write_column_statistics: ",ret != false,null)
D-60	-0.06178563833236694	endFunction("write_column_statistics: ",ret != false,null)
P-60	-0.0290 -0.0382 -0.0615 -0.0497 -0.1036 -0.0570 -0.0829 -0.0121 -0.0978 -0.0456 -0.0219 -0.0683 -0.0283 -0.1237 -0.0141 -0.0994 -0.1172
S-241	new DefaultMemoryManager(totalMemory,numSlots,pageSize)
T-241	new DefaultMemoryManager(totalMemory,numSlots,pageSize,true)
H-241	-0.12478519976139069	new DefaultMemoryManager(totalMemory,numSlots,pageSize)
D-241	-0.12478519976139069	new DefaultMemoryManager(totalMemory,numSlots,pageSize)
P-241	-0.0678 -0.0228 -0.0156 -0.0308 -0.1369 -0.3873 -0.0292 -0.0815 -0.0833 -0.6355 -0.1002 -0.0447 -0.0310 -0.1052 -0.1000
S-276	m_data.getFixString((int)m_length)
T-276	m_data.getFixString((int)m_length,charsetName)
H-276	-0.07395666837692261	m_data.getFixString((int)m_length,charsetName)
D-276	-0.07395666837692261	m_data.getFixString((int)m_length,charsetName)
P-276	-0.0477 -0.0837 -0.0632 -0.0997 -0.0600 -0.0218 -0.0404 -0.0366 -0.0582 -0.0736 -0.0480 -0.0895 -0.0686 -0.2152 -0.0322 -0.0943 -0.0985 -0.1000
S-412	waitForJobExecutorToProcessAllJobsAndExecutableTimerJobs(10000,200)
T-412	executeJobExecutorForTime(10000,200)
H-412	-0.04283973202109337	waitForJobExecutorToProcessAllJobsAndExecutableTimerJobs(20000,200)
D-412	-0.04283973202109337	waitForJobExecutorToProcessAllJobsAndExecutableTimerJobs(20000,200)
P-412	-0.1332 -0.0377 -0.0144 -0.0796 -0.0251 -0.0797 -0.0210 -0.0312 -0.0122 -0.0322 -0.0153 -0.0052 -0.0149 -0.0334 -0.1075
S-820	assertFalse("reuse-address",networkConfig.isReuseAddress())
T-820	assertTrue("reuse-address",networkConfig.isReuseAddress())
H-820	-0.05130183696746826	assertTrue("reuse-address",networkConfig.isReuseAddress())
D-820	-0.05130183696746826	assertTrue("reuse-address",networkConfig.isReuseAddress())
P-820	-0.0380 -0.0537 -0.0183 -0.0480 -0.0330 -0.0495 -0.0396 -0.0462 -0.0928 -0.0486 -0.0099 -0.0293 -0.1100 -0.1012
S-807	terms.facetFilter(standardFilters(range,filter))
T-807	stats.facetFilter(standardFilters(range,filter))
H-807	-0.29026222229003906	terms.facetFilter(standardFilters(range,filter))
D-807	-0.29026222229003906	terms.facetFilter(standardFilters(range,filter))
P-807	-0.3009 -0.1056 -1.1985 -0.0123 -0.0392 -0.1022 -1.7732 -0.0454 -0.1037 -0.0387 -0.1133 -0.0416 -0.0868 -0.1023
S-692	registry.put("kinesisClient",amazonKinesisClient)
T-692	registry.bind("kinesisClient",amazonKinesisClient)
H-692	-0.054569900035858154	registry.bind("kinesisClient",amazonKinesisClient)
D-692	-0.054569900035858154	registry.bind("kinesisClient",amazonKinesisClient)
P-692	-0.0242 -0.0909 -0.0078 -0.0592 -0.0661 -0.0243 -0.0670 -0.0596 -0.0262 -0.0291 -0.0210 -0.0651 -0.1089 -0.1147
S-66	JavaConversions.asIterable(logManager.allLogs())
T-66	JavaConversions.asJavaIterable(logManager.allLogs())
H-66	-0.06242713704705238	JavaConversions.asJavaIterable(logManager.allLogs())
D-66	-0.06242713704705238	JavaConversions.asJavaIterable(logManager.allLogs())
P-66	-0.0195 -0.0173 -0.0250 -0.0898 -0.1101 -0.0290 -0.0637 -0.1112 -0.0240 -0.0219 -0.0937 -0.0840 -0.0287 -0.1152 -0.1032
S-70	http2.setInitialStreamSendWindow(initialStreamSendWindow)
T-70	http2.setInitialStreamRecvWindow(initialStreamSendWindow)
H-70	-0.07857608050107956	http2.setInitialStreamRecvWindow(initialStreamSendWindow)
D-70	-0.07857608050107956	http2.setInitialStreamRecvWindow(initialStreamSendWindow)
P-70	-0.0546 -0.0293 -0.0678 -0.0332 -0.0259 -0.3688 -0.0024 -0.1459 -0.0825 -0.0089 -0.0190 -0.0437 -0.1280 -0.0703 -0.0983
S-729	Assert.notNull(groupId,"ArtifactId must not be null")
T-729	Assert.notNull(artifactId,"ArtifactId must not be null")
H-729	-0.1311766803264618	Assert.notNull(groupId,"ArtifactId must not be null")
D-729	-0.1311766803264618	Assert.notNull(groupId,"ArtifactId must not be null")
P-729	-0.0469 -0.0944 -0.4483 -0.1201 -0.1048 -0.0669 -0.0245 -0.3639 -0.0630 -0.1179 -0.0728 -0.0489 -0.0403 -0.2238
S-388	QuotaCache.this.tableQuotaCache.contains(table)
T-388	QuotaCache.this.tableQuotaCache.containsKey(table)
H-388	-0.06769751012325287	QuotaCache.this.tableQuotaCache.containsKey(table)
D-388	-0.06769751012325287	QuotaCache.this.tableQuotaCache.containsKey(table)
P-388	-0.0122 -0.0362 -0.0839 -0.0345 -0.0874 -0.0335 -0.0182 -0.0292 -0.1070 -0.1633 -0.0765 -0.0942 -0.0336 -0.1021 -0.1038
S-679	WebAppUtils.getResolvedRMWebAppURLWithoutScheme(conf)
T-679	WebAppUtils.getResolvedRMWebAppURLWithScheme(conf)
H-679	-0.04565854370594025	WebAppUtils.getResolvedRMWebAppURLWithScheme(conf)
D-679	-0.04565854370594025	WebAppUtils.getResolvedRMWebAppURLWithScheme(conf)
P-679	-0.0197 -0.0331 -0.0885 -0.0471 -0.0274 -0.0132 -0.0145 -0.0263 -0.0351 -0.0352 -0.1062 -0.0241 -0.0777 -0.0909
S-652	endpoint.getBus().getInInterceptors().size() == 1
T-652	endpoint.getBus().getInInterceptors().size() >= 1
H-652	-0.1419447511434555	endpoint.getBus().getInInterceptors().size() >= 1
D-652	-0.1419447511434555	endpoint.getBus().getInInterceptors().size() >= 1
P-652	-0.0442 -0.0932 -0.0521 -0.0140 -0.0557 -0.0542 -0.0463 -0.0328 -0.0437 -0.0483 -0.0694 -1.1889 -0.1440 -0.1004
S-566	LOG.info(rootPath + "is not a directory")
T-566	LOG.warn(rootPath + "is not a directory")
H-566	-0.12508396804332733	LOG.warn(rootPath + "is not a directory")
D-566	-0.12508396804332733	LOG.warn(rootPath + "is not a directory")
P-566	-0.0332 -0.0909 -0.8257 -0.1003 -0.1003 -0.0370 -0.0754 -0.0842 -0.0487 -0.0876 -0.0634 -0.0263 -0.0815 -0.0968
S-549	@UriPath(label="producer",defaultValue="true")
T-549	@UriParam(label="producer",defaultValue="true")
H-549	-0.06820350885391235	@UriParam(label="producer",defaultValue="true")
D-549	-0.06820350885391235	@UriParam(label="producer",defaultValue="true")
P-549	-0.1051 -0.0361 -0.0019 -0.1074 -0.0252 -0.0931 -0.0169 -0.0716 -0.0484 -0.0669 -0.0638 -0.0558 -0.1579 -0.1047
S-443	entry.getName().startsWith(BOOT_INF_CLASSES)
T-443	entry.getName().equals(BOOT_INF_CLASSES)
H-443	-0.06796135753393173	entry.getName().equals(BOOT_INF_CLASSES)
D-443	-0.06796135753393173	entry.getName().equals(BOOT_INF_CLASSES)
P-443	-0.2449 -0.0797 -0.0461 -0.0802 -0.0286 -0.0686 -0.0118 -0.0146 -0.0662 -0.0154 -0.0747 -0.0122 -0.1136 -0.0947
S-326	logger.trace("{} is already cancelled",impl.uuid())
T-326	logger.error("{} is already cancelled",impl.uuid())
H-326	-0.059290479868650436	logger.error("{} is already cancelled",impl.uuid())
D-326	-0.059290479868650436	logger.error("{} is already cancelled",impl.uuid())
P-326	-0.0460 -0.0947 -0.0406 -0.0565 -0.0146 -0.0840 -0.0477 -0.0191 -0.0500 -0.0229 -0.0985 -0.0448 -0.1101 -0.1007
S-228	uri.toString().equalsIgnoreCase(future.getURI().toString())
T-228	uri.toString().equals(future.getURI().toString())
H-228	-0.07703427225351334	uri.toString().equals(future.getURI().toString())
D-228	-0.07703427225351334	uri.toString().equals(future.getURI().toString())
P-228	-0.0617 -0.1001 -0.0260 -0.0503 -0.2058 -0.0785 -0.0256 -0.0838 -0.0485 -0.0310 -0.0656 -0.0465 -0.1524 -0.1029
S-120	connection.setFollowRedirects(httpRequest.getFollowRedirects())
T-120	HttpURLConnection.setFollowRedirects(httpRequest.getFollowRedirects())
H-120	-0.08382140100002289	connection.setFollowRedirects(httpRequest.getFollowRedirects())
D-120	-0.08382140100002289	connection.setFollowRedirects(httpRequest.getFollowRedirects())
P-120	-0.0297 -0.0982 -0.1442 -0.0686 -0.0113 -0.2083 -0.0564 -0.1617 -0.1075 -0.0567 -0.0390 -0.0114 -0.0786 -0.1021
S-63	EnterpriseMapPublisherCreateWithValueCodec.decodeResponse(response).entries
T-63	EnterpriseMapPublisherCreateWithValueCodec.decodeResponse(response).response
H-63	-0.045559290796518326	EnterpriseMapPublisherCreateWithValueCodec.decodeResponse(response).response
D-63	-0.045559290796518326	EnterpriseMapPublisherCreateWithValueCodec.decodeResponse(response).response
P-63	-0.0115 -0.0290 -0.0088 -0.0886 -0.0052 -0.0141 -0.0978 -0.0168 -0.0328 -0.0948 -0.0372 -0.0622 -0.0527 -0.0863
S-249	new CacheCreateConfigOperation(cacheConfig,create,false)
T-249	new CacheCreateConfigOperation(cacheConfig,createAlsoOnOthers,false)
H-249	-0.11659283936023712	new CacheCreateConfigOperation(cacheConfig,create,true)
D-249	-0.11659283936023712	new CacheCreateConfigOperation(cacheConfig,create,true)
P-249	-0.0711 -0.0286 -0.0653 -0.0451 -0.0554 -0.1073 -0.0924 -0.0529 -0.0992 -0.0670 -0.6855 -0.0497 -0.1045 -0.1084
S-224	logger.error("NODE {}: DeleteReturnRoute command failed.")
T-224	logger.error("NODE {}: DeleteReturnRoute command failed.",nodeId)
H-224	-0.08706773072481155	logger.error("NODE {}: DeleteReturnRoute command failed.",nodeId)
D-224	-0.08706773072481155	logger.error("NODE {}: DeleteReturnRoute command failed.",nodeId)
P-224	-0.0335 -0.0853 -0.1512 -0.0492 -0.0291 -0.0271 -0.1042 -0.0293 -0.0293 -0.0210 -0.0724 -0.0281 -0.1551 -0.1777 -0.2859 -0.1013 -0.1005
S-93	assertTrue(exitStatuses.contains(status.getExitStatus()))
T-93	assertTrue("Exit Statuses are supposed to be in: " + exitStatuses + ", but the actual exit status code is: "+ status.getExitStatus(),exitStatuses.contains(status.getExitStatus()))
H-93	-0.14134153723716736	assertFalse(exitStatuses.contains(status.getExitStatus()))
D-93	-0.14134153723716736	assertFalse(exitStatuses.contains(status.getExitStatus()))
P-93	-0.0156 -0.0757 -0.9339 -0.2553 -0.0865 -0.0808 -0.0660 -0.0769 -0.0982 -0.0474 -0.0319 -0.0541 -0.0577 -0.0988
S-594	conn.getResponseCode() == HttpURLConnection.HTTP_OK
T-594	conn.getResponseCode() == HttpURLConnection.HTTP_OK || conn.getResponseCode() == HttpURLConnection.HTTP_BAD_REQUEST
H-594	-0.05886617675423622	conn.getResponseCode() == HttpURLConnection.HTTP_OK || conn.getResponseCode() == HttpURLConnection.HTTP_BAD_REQUEST
D-594	-0.05886617675423622	conn.getResponseCode() == HttpURLConnection.HTTP_OK || conn.getResponseCode() == HttpURLConnection.HTTP_BAD_REQUEST
P-594	-0.0325 -0.0882 -0.0566 -0.0186 -0.0244 -0.0739 -0.0504 -0.0447 -0.0174 -0.0989 -0.0267 -0.0838 -0.0872 -0.0718 -0.0845 -0.0961 -0.0578 -0.0116 -0.0307 -0.1250 -0.0527 -0.0506 -0.0146 -0.1000 -0.0125 -0.0773 -0.0725 -0.0669 -0.0425 -0.0954
S-9	new S3DataSegmentMover(mockS3Client)
T-9	new S3DataSegmentMover(mockS3Client,new S3DataSegmentPusherConfig())
H-9	-0.05544110760092735	new S3DataSegmentMover(mockS3Client,new S3DataSegmentPusherConfig())
D-9	-0.05544110760092735	new S3DataSegmentMover(mockS3Client,new S3DataSegmentPusherConfig())
P-9	-0.0762 -0.0337 -0.0526 -0.0368 -0.0185 -0.0303 -0.0458 -0.1175 -0.0617 -0.0602 -0.0561 -0.0546 -0.1119 -0.0271 -0.0198 -0.0676 -0.0433 -0.0305 -0.0589 -0.0212 -0.0813 -0.0550 -0.1146
S-761	twitter1.getRetweets(18594701629l)
T-761	twitter1.getRetweets(1021608606934822912L)
H-761	-0.07138747721910477	twitter1.getRetweets(1021608606934822912L)
D-761	-0.07138747721910477	twitter1.getRetweets(1021608606934822912L)
P-761	-0.0233 -0.0153 -0.0614 -0.0462 -0.0212 -0.0543 -0.0211 -0.0121 -0.0456 -0.4746 -0.2088 -0.0200 -0.0007 -0.0637 -0.0108 -0.0205 -0.0741 -0.1115
S-666	getPath("InputPackageDeclarationDiffDirectoryAtSubpackage.java")
T-666	getNonCompilablePath("InputPackageDeclarationDiffDirectoryAtSubpackage.java")
H-666	-0.04113335907459259	getNonCompilablePath("InputPackageDeclarationDiffDirectoryAtSubpackage.java")
D-666	-0.04113335907459259	getNonCompilablePath("InputPackageDeclarationDiffDirectoryAtSubpackage.java")
P-666	-0.0222 -0.0131 -0.0241 -0.0427 -0.0045 -0.0763 -0.0356 -0.0290 -0.0224 -0.0069 -0.0187 -0.0215 -0.0676 -0.0341 -0.1050 -0.0252 -0.0915 -0.1002
S-417	QuotaCache.this.tableQuotaCache.contains(table)
T-417	QuotaCache.this.tableQuotaCache.containsKey(table)
H-417	-0.06769751012325287	QuotaCache.this.tableQuotaCache.containsKey(table)
D-417	-0.06769751012325287	QuotaCache.this.tableQuotaCache.containsKey(table)
P-417	-0.0122 -0.0362 -0.0839 -0.0345 -0.0874 -0.0335 -0.0182 -0.0292 -0.1070 -0.1633 -0.0765 -0.0942 -0.0336 -0.1021 -0.1038
S-539	Preconditions.checkNotNull("Streaming Job name should not be null.")
T-539	Preconditions.checkNotNull(jobName,"Streaming Job name should not be null.")
H-539	-0.0738992840051651	Preconditions.checkNotNull(jobName,"Streaming Job name should not be null.")
D-539	-0.0738992840051651	Preconditions.checkNotNull(jobName,"Streaming Job name should not be null.")
P-539	-0.0252 -0.0897 -0.0631 -0.0719 -0.1397 -0.0389 -0.1656 -0.0890 -0.0178 -0.0189 -0.0537 -0.0612 -0.1114 -0.0848 -0.0541 -0.0718 -0.0994
S-506	connection.zrangeByLex(key,max,min)
T-506	connection.zrevrangeByLex(key,max,min)
H-506	-0.052498094737529755	connection.zrevrangeByLex(key,max,min)
D-506	-0.052498094737529755	connection.zrevrangeByLex(key,max,min)
P-506	-0.0194 -0.0895 -0.0406 -0.0268 -0.0017 -0.0307 -0.0158 -0.0779 -0.0443 -0.0820 -0.0456 -0.1001 -0.0260 -0.0842 -0.1028
S-143	mTfs.delete(mTfs.open(path))
T-143	mTfs.delete(mTfs.open(path),true)
H-143	-0.07563375681638718	mTfs.delete(mTfs.open(path),true)
D-143	-0.07563375681638718	mTfs.delete(mTfs.open(path),true)
P-143	-0.0181 -0.0298 -0.0855 -0.0461 -0.0870 -0.0614 -0.0448 -0.0340 -0.0878 -0.0614 -0.0927 -0.0488 -0.2821 -0.0299 -0.0856 -0.1153
S-101	c.write("[you] " + msg + '\n')
T-101	c.writeAndFlush("[you] " + msg + '\n')
H-101	-0.21822574734687805	c.write("[you] " + msg + '\n')
D-101	-0.21822574734687805	c.write("[you] " + msg + '\n')
P-101	-0.0284 -0.0937 -0.0475 -0.4743 -1.5707 -0.0913 -0.0748 -0.0845 -0.0435 -0.1288 -0.0226 -0.0537 -0.2450 -0.0964
S-720	xtw.writeCharacters(customProperty.getSimpleValue())
T-720	xtw.writeCData(customProperty.getSimpleValue())
H-720	-0.05603598430752754	xtw.writeCData(customProperty.getSimpleValue())
D-720	-0.05603598430752754	xtw.writeCData(customProperty.getSimpleValue())
P-720	-0.0361 -0.0093 -0.1018 -0.0836 -0.0072 -0.0155 -0.0758 -0.0303 -0.0248 -0.1052 -0.0588 -0.0210 -0.0651 -0.0985 -0.1075
S-670	this.thrown.equals("File must not be null")
T-670	this.thrown.expectMessage("File must not be null")
H-670	-0.058361560106277466	this.thrown.expectMessage("File must not be null")
D-670	-0.058361560106277466	this.thrown.expectMessage("File must not be null")
P-670	-0.1007 -0.0882 -0.0168 -0.0119 -0.0803 -0.0243 -0.0245 -0.0484 -0.0509 -0.0359 -0.0818 -0.0755 -0.0628 -0.0789 -0.0946
S-665	connection.zrangeByLex(key,max,min)
T-665	connection.zrevrangeByLex(key,max,min)
H-665	-0.052498094737529755	connection.zrevrangeByLex(key,max,min)
D-665	-0.052498094737529755	connection.zrevrangeByLex(key,max,min)
P-665	-0.0194 -0.0895 -0.0406 -0.0268 -0.0017 -0.0307 -0.0158 -0.0779 -0.0443 -0.0820 -0.0456 -0.1001 -0.0260 -0.0842 -0.1028
S-121	Integer.valueOf(p.getProperty("numberid.id"))
T-121	Long.valueOf(p.getProperty("numberid.id"))
H-121	-0.09908579289913177	Integer.parseInt(p.getProperty("numberid.id"))
D-121	-0.09908579289913177	Integer.parseInt(p.getProperty("numberid.id"))
P-121	-0.3222 -0.1113 -0.0647 -0.1144 -0.0404 -0.1080 -0.0370 -0.0735 -0.1229 -0.0986 -0.1031 -0.0794 -0.0201 -0.0917
S-643	CamelContextHelper.parseInteger(getCamelContext(),keepAliveTime)
T-643	CamelContextHelper.parseInteger(getCamelContext(),maxQueueSize)
H-643	-0.07435217499732971	CamelContextHelper.parseInteger(getCamelContext(),maxQueueSize)
D-643	-0.07435217499732971	CamelContextHelper.parseInteger(getCamelContext(),maxQueueSize)
P-643	-0.0408 -0.0588 -0.0934 -0.0544 -0.0886 -0.1516 -0.0456 -0.0382 -0.0829 -0.0950 -0.0246 -0.0820 -0.1105
S-753	getMockEndpoint("mock:test.after.1").expectedMinimumMessageCount(10)
T-753	getMockEndpoint("mock:test.after.1").expectedMessageCount(10)
H-753	-0.05903799459338188	getMockEndpoint("mock:test.after.1").expectedMessageCount(10)
D-753	-0.05903799459338188	getMockEndpoint("mock:test.after.1").expectedMessageCount(10)
P-753	-0.0397 -0.0753 -0.0301 -0.0919 -0.0665 -0.0940 -0.0334 -0.0316 -0.0829 -0.0212 -0.0565 -0.0291 -0.1153
S-220	camelContext.getExecutorServiceManager().shutdownNow(timeoutCheckerExecutorService)
T-220	camelContext.getExecutorServiceManager().shutdown(timeoutCheckerExecutorService)
H-220	-0.04737153649330139	camelContext.getExecutorServiceManager().shutdown(timeoutCheckerExecutorService)
D-220	-0.04737153649330139	camelContext.getExecutorServiceManager().shutdown(timeoutCheckerExecutorService)
P-220	-0.0108 -0.0922 -0.0574 -0.0101 -0.0355 -0.0738 -0.0102 -0.0805 -0.0394 -0.0224 -0.0082 -0.0668 -0.1086
S-206	mPersistedFiles.removeAll(mPersistedFiles)
T-206	mPersistedFiles.removeAll(persistedFiles)
H-206	-0.057177722454071045	mPersistedFiles.removeAll(persistedFiles)
D-206	-0.057177722454071045	mPersistedFiles.removeAll(persistedFiles)
P-206	-0.0365 -0.0122 -0.0587 -0.0369 -0.1050 -0.0557 -0.0238 -0.0588 -0.0381 -0.0438 -0.0396 -0.1141 -0.1201
S-606	getSrcPath("checks/javadoc/Input_01.java")
T-606	getPath("checks/javadoc/Input_01.java")
H-606	-0.11527883261442184	getPath("checks/javadoc/Input_01.java")
D-606	-0.11527883261442184	getPath("checks/javadoc/Input_01.java")
P-606	-0.0303 -0.0538 -0.0200 -0.0581 -0.0123 -0.0609 -0.0275 -0.7614 -0.1217 -0.0170 -0.1217 -0.0986
S-48	suiteMethod.invoke(null,(Object[])new Class[0])
T-48	suiteMethod.invoke(null)
H-48	-0.06417721509933472	suiteMethod.invoke(null)
D-48	-0.06417721509933472	suiteMethod.invoke(null)
P-48	-0.0162 -0.0398 -0.1076 -0.0213 -0.1224 -0.0429 -0.0547 -0.1085
S-369	Gdx.files.internal(fileName).nameWithoutExtension()
T-369	Gdx.files.internal(fileName).pathWithoutExtension()
H-369	-0.055379897356033325	Gdx.files.internal(fileName).pathWithoutExtension()
D-369	-0.055379897356033325	Gdx.files.internal(fileName).pathWithoutExtension()
P-369	-0.0187 -0.0947 -0.0447 -0.1046 -0.0157 -0.0770 -0.0326 -0.0535 -0.0108 -0.0239 -0.0431 -0.1036 -0.0972
S-115	mLineageStore.requestFilePersistence(fileId)
T-115	mLineageStore.reportLostFile(fileId)
H-115	-0.05505530163645744	mLineageStore.reportLostFile(fileId)
D-115	-0.05505530163645744	mLineageStore.reportLostFile(fileId)
P-115	-0.0400 -0.0216 -0.0227 -0.0263 -0.0938 -0.0502 -0.0019 -0.0718 -0.0754 -0.0590 -0.0628 -0.0855 -0.1046
S-140	interceptors.addFirst(newAInterceptor(a))
T-140	interceptors.addLast(newAInterceptor(a))
H-140	-0.06511580944061279	interceptors.addLast(newAInterceptor(a))
D-140	-0.06511580944061279	interceptors.addLast(newAInterceptor(a))
P-140	-0.1003 -0.0287 -0.0934 -0.0265 -0.0587 -0.0977 -0.0330 -0.0421 -0.0162 -0.1059 -0.1164 -0.0207 -0.1069
S-13	op.get("address").set("host",host)
T-13	op.get("address").add("host",host)
H-13	-0.06155920773744583	op.get("address").add("host",host)
D-13	-0.06155920773744583	op.get("address").add("host",host)
P-13	-0.0658 -0.0844 -0.0664 -0.0675 -0.0316 -0.0567 -0.0269 -0.0546 -0.0616 -0.0543 -0.0328 -0.0887 -0.1089
S-389	LOG.info("Getting synchronous method stub from channel")
T-389	LOG.debug("Getting synchronous method stub from channel")
H-389	-0.05782416835427284	LOG.debug("Getting synchronous method stub from channel")
D-389	-0.05782416835427284	LOG.debug("Getting synchronous method stub from channel")
P-389	-0.0621 -0.0848 -0.0263 -0.0527 -0.0492 -0.0438 -0.0153 -0.0674 -0.0297 -0.0698 -0.0553 -0.0924 -0.1029
S-431	flushAfterDuration(entry.getKey(),entry.getValue())
T-431	abandonSegment(entry.getKey(),entry.getValue())
H-431	-0.07554452121257782	abandonSegment(entry.getKey(),entry.getValue())
D-431	-0.07554452121257782	abandonSegment(entry.getKey(),entry.getValue())
P-431	-0.0388 -0.0057 -0.0023 -0.0972 -0.1013 -0.0963 -0.0195 -0.1564 -0.1073 -0.0976 -0.0590 -0.0928 -0.1078
S-509	annotatorImplementation.custom(inputProps,customName)
T-509	annotatorImplementation.custom(inputProps,property)
H-509	-0.07591497898101807	annotatorImplementation.custom(inputProps,property)
D-509	-0.07591497898101807	annotatorImplementation.custom(inputProps,property)
P-509	-0.0331 -0.0239 -0.0098 -0.0961 -0.0358 -0.0792 -0.0432 -0.0312 -0.1010 -0.2986 -0.0592 -0.0996
S-45	assertSame(conf,(Configuration)serializeDeserialize(conf))
T-45	assertEquals(conf,(Configuration)serializeDeserialize(conf))
H-45	-0.060236793011426926	assertEquals(conf,(Configuration)serializeDeserialize(conf))
D-45	-0.060236793011426926	assertEquals(conf,(Configuration)serializeDeserialize(conf))
P-45	-0.0333 -0.0974 -0.0165 -0.0797 -0.0802 -0.0257 -0.0672 -0.0607 -0.0336 -0.0947 -0.0249 -0.0616 -0.1077
S-579	completionLatch.await(1200,TimeUnit.MILLISECONDS)
T-579	completionLatch.await(2500,TimeUnit.MILLISECONDS)
H-579	-0.05278555303812027	completionLatch.await(2500,TimeUnit.MILLISECONDS)
D-579	-0.05278555303812027	completionLatch.await(2500,TimeUnit.MILLISECONDS)
P-579	-0.0526 -0.0140 -0.0945 -0.0157 -0.0264 -0.0504 -0.0503 -0.0271 -0.1095 -0.0285 -0.0190 -0.0957 -0.1025
S-586	mLockMode == InodeTree.LockMode.READ
T-586	lockMode == InodeTree.LockMode.READ
H-586	-0.05585480481386185	lockMode == InodeTree.LockMode.READ
D-586	-0.05585480481386185	lockMode == InodeTree.LockMode.READ
P-586	-0.0331 -0.0305 -0.0305 -0.0865 -0.0177 -0.0300 -0.0873 -0.0462 -0.0427 -0.0941 -0.0489 -0.1227
S-523	new RuntimeException("should execute connector.connect() first")
T-523	new IOException("should execute connector.connect() first")
H-523	-0.058912429958581924	new IOException("should execute connector.connect() first")
D-523	-0.058912429958581924	new IOException("should execute connector.connect() first")
P-523	-0.0611 -0.0241 -0.0625 -0.0472 -0.0370 -0.0133 -0.0833 -0.0277 -0.0688 -0.0504 -0.1326 -0.0989
S-754	Color.rgb888ToColor(color,colorInt)
T-754	Color.rgba8888ToColor(color,colorInt)
H-754	-0.07015421241521835	Color.rgba8888ToColor(color,colorInt)
D-754	-0.07015421241521835	Color.rgba8888ToColor(color,colorInt)
P-754	-0.0479 -0.1103 -0.0393 -0.0139 -0.0399 -0.0737 -0.0940 -0.0587 -0.0724 -0.0780 -0.0854 -0.0959 -0.1027
S-330	assertOpenEventually("responseLatch",responseLatch,5)
T-330	assertOpenEventually("responseLatch",responseLatch)
H-330	-0.048170506954193115	assertOpenEventually("responseLatch",responseLatch)
D-330	-0.048170506954193115	assertOpenEventually("responseLatch",responseLatch)
P-330	-0.0607 -0.0672 -0.0341 -0.0265 -0.0538 -0.0536 -0.0202 -0.0547 -0.0265 -0.0168 -0.0619 -0.1020
S-291	deploymentInfo.setDefaultEncoding(servletContainer.getDefaultEncoding())
T-291	d.setDefaultEncoding(servletContainer.getDefaultEncoding())
H-291	-0.12198247760534286	deploymentInfo.setDefaultEncoding(servletContainer.getDefaultEncoding())
D-291	-0.12198247760534286	deploymentInfo.setDefaultEncoding(servletContainer.getDefaultEncoding())
P-291	-0.3861 -0.0283 -0.0890 -0.0426 -0.0175 -0.5365 -0.0275 -0.0451 -0.0976 -0.0273 -0.0174 -0.1479 -0.1231
S-154	Bytes.toBytesBinary(tableNameOrRegionName)
T-154	Bytes.toBytes(tableNameOrRegionName)
H-154	-0.06392927467823029	Bytes.toBytes(tableNameOrRegionName)
D-154	-0.06392927467823029	Bytes.toBytes(tableNameOrRegionName)
P-154	-0.0217 -0.0902 -0.0391 -0.0372 -0.1101 -0.0512 -0.0870 -0.0504 -0.0253 -0.0723 -0.0818 -0.1009
S-50	view.getClusteredLayerInDegree(absNode)
T-50	view.getClusteredLayerDegree(absNode)
H-50	-0.14919553697109222	view.getClusteredLayerInDegree(absNode)
D-50	-0.14919553697109222	view.getClusteredLayerInDegree(absNode)
P-50	-0.1585 -0.1033 -0.0687 -0.0221 -0.0433 -0.9286 -0.1991 -0.0246 -0.1063 -0.0184 -0.0260 -0.1202 -0.1204
S-411	node1.checkTreeTypeAwareEqualsSilent(node2)
T-411	node1.isEquivalentToTyped(node2)
H-411	-0.11793524026870728	node1.isEquivalentToTyped(node2)
D-411	-0.11793524026870728	node1.isEquivalentToTyped(node2)
P-411	-0.0513 -0.0225 -0.0277 -0.2743 -0.0765 -0.3742 -0.1456 -0.0518 -0.0510 -0.1044
S-574	logger.info("Installing Filter {}",servletClassName)
T-574	logger.info("Installing Filter {}",filterName)
H-574	-0.1634661853313446	logger.info("Installing Filter {}",filter)
D-574	-0.1634661853313446	logger.info("Installing Filter {}",filter)
P-574	-0.0397 -0.0895 -0.4869 -0.0655 -0.0201 -0.0637 -0.0358 -0.0502 -0.0761 -0.0590 -0.8693 -0.1058
S-768	member.getType(beanDesc.bindingsForBeanType())
T-768	member.getType()
H-768	-0.0800354927778244	member.getType()
D-768	-0.0800354927778244	member.getType()
P-768	-0.0899 -0.1011 -0.0070 -0.0824 -0.1198
S-660	mock.expectedBodiesReceived("c","b","a")
T-660	mock.expectedBodiesReceivedInAnyOrder("c","b","a")
H-660	-0.05598516762256622	mock.expectedBodiesReceivedInAnyOrder("c","b","a")
D-660	-0.05598516762256622	mock.expectedBodiesReceivedInAnyOrder("c","b","a")
P-660	-0.0704 -0.0838 -0.0247 -0.0130 -0.0236 -0.0031 -0.0609 -0.0451 -0.0585 -0.0610 -0.0443 -0.0610 -0.1370 -0.0974
S-641	VARCHAR.createBlockBuilder(new BlockBuilderStatus(),1)
T-641	VARBINARY.createBlockBuilder(new BlockBuilderStatus(),1)
H-641	-0.06144547089934349	VARBINARY.createBlockBuilder(new BlockBuilderStatus(),1)
D-641	-0.06144547089934349	VARBINARY.createBlockBuilder(new BlockBuilderStatus(),1)
P-641	-0.0590 -0.0413 -0.0863 -0.0758 -0.0497 -0.0412 -0.0906 -0.0417 -0.0622 -0.0431 -0.0341 -0.0379 -0.0914 -0.1057
S-377	container.getTimeFormat().equals(TimeFormat.DATE)
T-377	container.getTimeFormat().equals(TimeFormat.DATE) || container.getTimeFormat().equals(TimeFormat.DATETIME)
H-377	-0.05517991632223129	container.getTimeFormat().equals(TimeFormat.DATE) || container.getTimeFormat().equals(TimeFormat.DATETIME)
D-377	-0.05517991632223129	container.getTimeFormat().equals(TimeFormat.DATE) || container.getTimeFormat().equals(TimeFormat.DATETIME)
P-377	-0.0640 -0.0858 -0.0192 -0.0409 -0.0499 -0.0461 -0.0788 -0.0275 -0.0498 -0.0828 -0.0221 -0.0978 -0.0837 -0.0554 -0.0864 -0.0167 -0.0276 -0.0402 -0.0267 -0.0705 -0.0349 -0.0443 -0.0887 -0.0118 -0.0812 -0.1021
S-213	streamTokenizer.ttype == StreamTokenizer.TT_WORD
T-213	streamTokenizer.ttype == StreamTokenizer.TT_WORD || streamTokenizer.ttype == '"'
H-213	-0.043698228895664215	streamTokenizer.ttype == StreamTokenizer.TT_WORD || streamTokenizer.ttype == '"'
D-213	-0.043698228895664215	streamTokenizer.ttype == StreamTokenizer.TT_WORD || streamTokenizer.ttype == '"'
P-213	-0.0223 -0.0150 -0.1168 -0.0585 -0.0245 -0.0369 -0.0521 -0.0125 -0.0972 -0.0173 -0.0899 -0.0267 -0.0286 -0.0190 -0.0205 -0.1140 -0.0334 -0.0175 -0.0583 -0.0287 -0.0053 -0.0665
S-460	Preconditions.checkNotNull(mBlockIdsOnTiers)
T-460	Preconditions.checkNotNull(mBlockIdsOnTiers,"mBlockIdsOnTiers")
H-460	-0.04968936741352081	Preconditions.checkNotNull(mBlockIdsOnTiers,"mBlockIdsOnTiers")
D-460	-0.04968936741352081	Preconditions.checkNotNull(mBlockIdsOnTiers,"mBlockIdsOnTiers")
P-460	-0.0223 -0.0945 -0.0957 -0.0905 -0.0999 -0.0363 -0.0372 -0.0226 -0.0336 -0.0378 -0.0054 -0.0456 -0.0670 -0.0487 -0.0345 -0.0352 -0.0311 -0.0069 -0.0555 -0.0934
S-735	String id=reader.getAttributeValue(null,"id");
T-735	Integer id=Integer.parseInt(reader.getAttributeValue(null,"id"));
H-735	-0.09016795456409454	Integer id=Integer.parseInt(reader.getAttributeValue(null,"id"));
D-735	-0.09016795456409454	Integer id=Integer.parseInt(reader.getAttributeValue(null,"id"));
P-735	-0.1471 -0.0923 -0.0808 -0.0248 -0.1347 -0.0574 -0.1053 -0.0660 -0.1061 -0.0334 -0.0926 -0.1735 -0.0380 -0.0305 -0.0601 -0.1980 -0.0922
S-732	getPath("InputPackageDeclarationDiffDirectoryAtParent.java")
T-732	getNonCompilablePath("InputPackageDeclarationDiffDirectoryAtParent.java")
H-732	-0.03989633172750473	getNonCompilablePath("InputPackageDeclarationDiffDirectoryAtParent.java")
D-732	-0.03989633172750473	getNonCompilablePath("InputPackageDeclarationDiffDirectoryAtParent.java")
P-732	-0.0212 -0.0151 -0.0250 -0.0491 -0.0058 -0.0753 -0.0291 -0.0245 -0.0222 -0.0078 -0.0218 -0.0210 -0.0514 -0.0971 -0.0234 -0.0873 -0.1012
S-265	target.directory("zk" + id + "data")
T-265	target.directory("zk" + id + "data",true)
H-265	-0.08138769865036011	target.directory("zk" + id + "data",true)
D-265	-0.08138769865036011	target.directory("zk" + id + "data",true)
P-265	-0.0582 -0.1009 -0.0323 -0.0559 -0.0253 -0.1031 -0.0923 -0.0849 -0.0893 -0.0559 -0.0664 -0.2447 -0.0055 -0.1008 -0.1053
S-92	GL20.glUniformMatrix3(location,transpose,value)
T-92	GL20.glUniformMatrix3fv(location,transpose,value)
H-92	-0.060057077556848526	GL20.glUniformMatrix3fv(location,transpose,value)
D-92	-0.060057077556848526	GL20.glUniformMatrix3fv(location,transpose,value)
P-92	-0.0350 -0.0102 -0.0174 -0.0269 -0.0350 -0.1668 -0.0080 -0.1450 -0.0186 -0.0894 -0.0152 -0.0813 -0.0609 -0.0864 -0.1048
S-437	routes.ExtractorsResource().list(input.getId())
T-437	routes.ExtractorsResource().create(input.getId())
H-437	-0.31379425525665283	routes.ExtractorsResource().list(input.getId())
D-437	-0.31379425525665283	routes.ExtractorsResource().list(input.getId())
P-437	-0.0229 -0.0939 -0.3769 -0.0251 -0.0532 -0.0758 -0.4290 -1.4476 -0.0292 -0.1164 -0.0398 -1.2569 -0.1126
S-687	sname.getParent().getSimpleName().substring(9)
T-687	sname.getParent().getSimpleName().substring(8)
H-687	-0.061311449855566025	sname.getParent().getSimpleName().substring(8)
D-687	-0.061311449855566025	sname.getParent().getSimpleName().substring(8)
P-687	-0.0320 -0.0895 -0.0626 -0.0487 -0.0600 -0.0588 -0.0280 -0.0623 -0.0670 -0.0429 -0.1287 -0.0159 -0.1006
S-286	GL20.glGetUniform(program,location,params)
T-286	GL20.glGetUniformiv(program,location,params)
H-286	-0.058644216507673264	GL20.glGetUniformfv(program,location,params)
D-286	-0.058644216507673264	GL20.glGetUniformfv(program,location,params)
P-286	-0.0308 -0.0094 -0.0160 -0.0446 -0.0596 -0.0852 -0.1237 -0.0252 -0.1152 -0.0189 -0.0783 -0.0207 -0.0916 -0.1018
S-64	GL20.glGetUniform(program,location,params)
T-64	GL20.glGetUniformiv(program,location,params)
H-64	-0.058644216507673264	GL20.glGetUniformfv(program,location,params)
D-64	-0.058644216507673264	GL20.glGetUniformfv(program,location,params)
P-64	-0.0308 -0.0094 -0.0160 -0.0446 -0.0596 -0.0852 -0.1237 -0.0252 -0.1152 -0.0189 -0.0783 -0.0207 -0.0916 -0.1018
S-55	AbstractRanking.refreshMinMax(this,graph)
T-55	DynamicAttributeRanking.refreshMinMax(this,graph)
H-55	-0.05853758752346039	DynamicAttributeRanking.refreshMinMax(this,graph)
D-55	-0.05853758752346039	DynamicAttributeRanking.refreshMinMax(this,graph)
P-55	-0.0326 -0.0882 -0.0075 -0.0358 -0.1138 -0.0111 -0.0401 -0.0297 -0.1088 -0.0389 -0.0847 -0.0432 -0.0806 -0.1046
S-791	routes.ExtractorsResource().list(input.getId())
T-791	routes.ExtractorsResource().create(input.getId())
H-791	-0.31379425525665283	routes.ExtractorsResource().list(input.getId())
D-791	-0.31379425525665283	routes.ExtractorsResource().list(input.getId())
P-791	-0.0229 -0.0939 -0.3769 -0.0251 -0.0532 -0.0758 -0.4290 -1.4476 -0.0292 -0.1164 -0.0398 -1.2569 -0.1126
S-780	log.debug("Error while closing command context",exception)
T-780	log.error("Error while closing command context",exception)
H-780	-0.0789032131433487	log.error("Error while closing command context",exception)
D-780	-0.0789032131433487	log.error("Error while closing command context",exception)
P-780	-0.0522 -0.1007 -0.1800 -0.0565 -0.0688 -0.0576 -0.0269 -0.0852 -0.0899 -0.0458 -0.0750 -0.0838 -0.1033
S-770	DefaultChannelFuture.setUseDeadLockChecker(false)
T-770	DefaultChannelFuture.setUseDeadLockChecker(true)
H-770	-0.09587572515010834	DefaultChannelFuture.setUseDeadLockChecker(true)
D-770	-0.09587572515010834	DefaultChannelFuture.setUseDeadLockChecker(true)
P-770	-0.0504 -0.0231 -0.0114 -0.0901 -0.0365 -0.0368 -0.5602 -0.0726 -0.0388 -0.1104 -0.0320 -0.0806 -0.1035
S-684	log.error("Error while closing command context",exception)
T-684	log.debug("Error while closing command context",exception)
H-684	-0.14455020427703857	log.error("Error while closing command context",exception)
D-684	-0.14455020427703857	log.error("Error while closing command context",exception)
P-684	-0.0581 -0.0983 -0.9677 -0.0617 -0.0714 -0.0598 -0.0275 -0.1017 -0.0915 -0.0955 -0.0540 -0.0844 -0.1074
S-75	this.thrown.equals("File must exist")
T-75	this.thrown.expectMessage("File must exist")
H-75	-0.05480774864554405	this.thrown.expectMessage("File must exist")
D-75	-0.05480774864554405	this.thrown.expectMessage("File must exist")
P-75	-0.1149 -0.0912 -0.0141 -0.0146 -0.0812 -0.0329 -0.0291 -0.0469 -0.0451 -0.0345 -0.0416 -0.0733 -0.0931
S-813	ConfigUtils.absoluteHealthCheckDir(stormConf)
T-813	ConfigUtils.absoluteStormLocalDir(stormConf)
H-813	-0.05407581478357315	ConfigUtils.absoluteStormLocalDir(stormConf)
D-813	-0.05407581478357315	ConfigUtils.absoluteStormLocalDir(stormConf)
P-813	-0.0347 -0.0315 -0.0919 -0.0202 -0.0226 -0.0127 -0.0494 -0.1398 -0.0279 -0.0290 -0.0899 -0.0994
S-191	HashMap<String,HashMap<String,ASTNode>>
T-191	LinkedHashMap<String,LinkedHashMap<String,ASTNode>>
H-191	-0.050015535205602646	LinkedHashMap<String,HashMap<String,ASTNode>>
D-191	-0.050015535205602646	LinkedHashMap<String,HashMap<String,ASTNode>>
P-191	-0.0238 -0.0278 -0.0338 -0.0693 -0.0848 -0.0461 -0.0390 -0.0651 -0.0208 -0.0457 -0.0427 -0.1013
S-817	Color.fromRGB(0x6689D3)
T-817	Color.fromRGB(0x51301A)
H-817	-0.13957767188549042	Color.fromRGB(0x6689D3)
D-817	-0.13957767188549042	Color.fromRGB(0x6689D3)
P-817	-0.0316 -0.1002 -0.0737 -0.0117 -0.0371 -0.3623 -0.6084 -0.0143 -0.0522 -0.0188 -0.2068 -0.1578
S-328	configureWebDotXmlAtmosphereHandler(sc)
T-328	configureWebDotXmlAtmosphereHandler(scFacade)
H-328	-0.06751837581396103	configureWebDotXmlAtmosphereHandler(scFacade)
D-328	-0.06751837581396103	configureWebDotXmlAtmosphereHandler(scFacade)
P-328	-0.0340 -0.0396 -0.0242 -0.3323 -0.0150 -0.0195 -0.0138 -0.0472 -0.1385 -0.0197 -0.0177 -0.0780 -0.0982
S-746	minZ != 0f && maxZ != 0f
T-746	minZ != 0f || maxZ != 0f
H-746	-0.06032681465148926	minZ != 0f || maxZ != 0f
D-746	-0.06032681465148926	minZ != 0f || maxZ != 0f
P-746	-0.0369 -0.0371 -0.0755 -0.0942 -0.0520 -0.0541 -0.0607 -0.0271 -0.0663 -0.0675 -0.0474 -0.1052
S-552	isFieldKept(uniqueField,input)
T-552	isFieldKept(input,uniqueField)
H-552	-0.05116598680615425	isFieldKept(input,uniqueField)
D-552	-0.05116598680615425	isFieldKept(input,uniqueField)
P-552	-0.0839 -0.0347 -0.0246 -0.0476 -0.0057 -0.1040 -0.0035 -0.0818 -0.0197 -0.0339 -0.0728 -0.1018
S-529	IRON_SWORD(267,1,59)
T-529	IRON_SWORD(267,1,250)
H-529	-0.08250673115253448	IRON_SWORD(267,1,250)
D-529	-0.08250673115253448	IRON_SWORD(267,1,250)
P-529	-0.0180 -0.0657 -0.1138 -0.0975 -0.0251 -0.0815 -0.0560 -0.0992 -0.1128 -0.1921 -0.0232 -0.1051
S-508	logger.debug("Removing: {}",r)
T-508	logger.trace("Removing: {}",r)
H-508	-0.06001758947968483	logger.trace("Removing: {}",r)
D-508	-0.06001758947968483	logger.trace("Removing: {}",r)
P-508	-0.0413 -0.0910 -0.0338 -0.0603 -0.0144 -0.0197 -0.0908 -0.0459 -0.0547 -0.0682 -0.0930 -0.1072
S-325	context.add("exceptionalMethod",123f)
T-325	context.add("exceptionalMethod",123.0f)
H-325	-0.054880883544683456	context.add("exceptionalMethod",123.0f)
D-325	-0.054880883544683456	context.add("exceptionalMethod",123.0f)
P-325	-0.0545 -0.0923 -0.0485 -0.0424 -0.0667 -0.0232 -0.0615 -0.0545 -0.0047 -0.0167 -0.0479 -0.0943 -0.1063
S-446	assertEquals(8,config.getMapConfigs().size())
T-446	assertEquals(6,config.getMapConfigs().size())
H-446	-0.0963655561208725	assertEquals(6,config.getMapConfigs().size())
D-446	-0.0963655561208725	assertEquals(6,config.getMapConfigs().size())
P-446	-0.0331 -0.0748 -0.4465 -0.0345 -0.0974 -0.0474 -0.0769 -0.0304 -0.0565 -0.0659 -0.0916 -0.1013
S-78	RexUtil.simplify(rexBuilder,node)
T-78	HiveRexUtil.simplify(rexBuilder,node)
H-78	-0.045851949602365494	HiveRexUtil.simplify(rexBuilder,node)
D-78	-0.045851949602365494	HiveRexUtil.simplify(rexBuilder,node)
P-78	-0.0095 -0.0159 -0.0033 -0.0199 -0.1028 -0.0199 -0.0110 -0.0894 -0.0102 -0.0378 -0.0994 -0.0371 -0.0801 -0.1057
S-65	p.getFileSystem(conf).delete(p)
T-65	p.getFileSystem(conf).delete(p,true)
H-65	-0.06271667033433914	p.getFileSystem(conf).delete(p,true)
D-65	-0.06271667033433914	p.getFileSystem(conf).delete(p,true)
P-65	-0.0993 -0.0996 -0.0596 -0.0359 -0.1092 -0.0258 -0.0601 -0.0422 -0.0660 -0.0172 -0.0570 -0.0066 -0.0918 -0.1078
S-668	@SuppressWarnings("unused") private final Object strongReference;
T-668	@SuppressWarnings("unused") private final WeakSafeReadWriteLock strongReference;
H-668	-0.05349953845143318	@SuppressWarnings("unused") private final WeakSafeReadWriteLock strongReference;
D-668	-0.05349953845143318	@SuppressWarnings("unused") private final WeakSafeReadWriteLock strongReference;
P-668	-0.0893 -0.0292 -0.0656 -0.0106 -0.1107 -0.0340 -0.0417 -0.0354 -0.1535 -0.0349 -0.0021 -0.0132 -0.0276 -0.0527 -0.1022
S-696	connection.subscribe(jedisPubSub,patterns)
T-696	connection.psubscribe(jedisPubSub,patterns)
H-696	-0.13660001754760742	connection.psubscribe(jedisPubSub,patterns)
D-696	-0.13660001754760742	connection.psubscribe(jedisPubSub,patterns)
P-696	-0.0189 -0.1053 -0.0002 -0.0799 -0.1003 -0.1307 -0.0287 -0.0155 -0.0246 -1.1307 -0.0736 -0.0219 -0.0737 -0.1082
S-209	new ScheduledJob(job,jobName,period)
T-209	new ScheduledJob(job,jobName,delay,period)
H-209	-0.10470903664827347	new ScheduledJob(job,jobName,delay,period)
D-209	-0.10470903664827347	new ScheduledJob(job,jobName,delay,period)
P-209	-0.0679 -0.0313 -0.0421 -0.0852 -0.0162 -0.1171 -0.0254 -0.0725 -0.1069 -0.5416 -0.1719 -0.0121 -0.0762 -0.0995
S-430	new S_Command("00FE30",20.0)
T-430	new S_Command("00FE30",1,20.0)
H-430	-0.054531197994947433	new S_Command("00FE30",1,20.0)
D-430	-0.054531197994947433	new S_Command("00FE30",1,20.0)
P-430	-0.0802 -0.0383 -0.1065 -0.0617 -0.0498 -0.0438 -0.0157 -0.0591 -0.0437 -0.0408 -0.0265 -0.0399 -0.1030
S-489	GL11.glGetFloat(pname,params)
T-489	GL11.glGetFloatv(pname,params)
H-489	-0.05731784924864769	GL11.glGetFloatv(pname,params)
D-489	-0.05731784924864769	GL11.glGetFloatv(pname,params)
P-489	-0.0376 -0.0115 -0.0230 -0.0510 -0.0735 -0.0540 -0.1118 -0.0414 -0.0360 -0.0857 -0.0212 -0.0971 -0.1015
S-49	new FlinkRuntimeException("Unexpected list element deserialization failure")
T-49	new FlinkRuntimeException("Unexpected list element deserialization failure",e)
H-49	-0.10383821278810501	new FlinkRuntimeException("Unexpected list element deserialization failure",e)
D-49	-0.10383821278810501	new FlinkRuntimeException("Unexpected list element deserialization failure",e)
P-49	-0.0940 -0.2650 -0.0230 -0.0296 -0.0487 -0.0167 -0.0966 -0.1021 -0.3941 -0.0086 -0.1693 -0.0267 -0.0710 -0.1082
S-719	this.fs.delete(filePath,false)
T-719	!this.fs.delete(filePath,false)
H-719	-0.07216645777225494	!this.fs.delete(filePath,false)
D-719	-0.07216645777225494	!this.fs.delete(filePath,false)
P-719	-0.0820 -0.0288 -0.0839 -0.0240 -0.1005 -0.0304 -0.0950 -0.0814 -0.0420 -0.0946 -0.0561 -0.1191 -0.1004
S-525	IDAUTHORITY_RETRY_COUNT_DEFAULT=3
T-525	IDAUTHORITY_RETRY_COUNT_DEFAULT=20
H-525	-0.04729258269071579	IDAUTHORITY_RETRY_COUNT_DEFAULT=20
D-525	-0.04729258269071579	IDAUTHORITY_RETRY_COUNT_DEFAULT=20
P-525	-0.0179 -0.0150 -0.0057 -0.1070 -0.0398 -0.0078 -0.0797 -0.0309 -0.0973 -0.0167 -0.0828 -0.0159 -0.0983
S-428	logger.debug("Removing: {}",r)
T-428	logger.trace("Removing: {}",r)
H-428	-0.06001758947968483	logger.trace("Removing: {}",r)
D-428	-0.06001758947968483	logger.trace("Removing: {}",r)
P-428	-0.0413 -0.0910 -0.0338 -0.0603 -0.0144 -0.0197 -0.0908 -0.0459 -0.0547 -0.0682 -0.0930 -0.1072
S-122	OpenmrsProfileWithoutTest1Module bean=applicationContext.getBean(OpenmrsProfileWithoutTest1Module.class);
T-122	OpenmrsProfileWithoutMissingModule bean=applicationContext.getBean(OpenmrsProfileWithoutMissingModule.class);
H-122	-0.053173862397670746	OpenmrsProfileWithoutMissingModule bean=applicationContext.getBean(OpenmrsProfileWithoutMissingModule.class);
D-122	-0.053173862397670746	OpenmrsProfileWithoutMissingModule bean=applicationContext.getBean(OpenmrsProfileWithoutMissingModule.class);
P-122	-0.0451 -0.0479 -0.0193 -0.0204 -0.0243 -0.1366 -0.0178 -0.0185 -0.0551 -0.0121 -0.0781 -0.0927 -0.0657 -0.0424 -0.0812 -0.0361 -0.0585 -0.0211 -0.0232 -0.0193 -0.1111 -0.0226 -0.0875 -0.0547 -0.0841 -0.1073
S-585	ImmutableSortedSet.of("p","br","li","dt","dd","td","hr","img","tr","th","td")
T-585	ImmutableSortedSet.of("br","li","dt","dd","hr","img","p","td","tr","th")
H-585	-0.1000375971198082	ImmutableSortedSet.of("br","li","dt","dd","hr","img","p","td","tr","th")
D-585	-0.1000375971198082	ImmutableSortedSet.of("br","li","dt","dd","hr","img","p","td","tr","th")
P-585	-0.0070 -0.0645 -0.0832 -0.0399 -0.0704 -0.0187 -0.0687 -0.0145 -0.0454 -0.0107 -0.0685 -0.0274 -0.0599 -0.0488 -0.0582 -0.0276 -0.0618 -0.0734 -0.0215 -0.0190 -0.8075 -0.4844 -0.0944 -0.0958 -0.1282 -0.1015
S-414	public final TFAgentStatMappter tFAgentStatMappter=new TFAgentStatMappter();
T-414	public final TFAgentStatMapper tFAgentStatMapper=new TFAgentStatMapper();
H-414	-0.04926847666501999	public final TFAgentStatMapper tFAgentStatMapper=new TFAgentStatMapper();
D-414	-0.04926847666501999	public final TFAgentStatMapper tFAgentStatMapper=new TFAgentStatMapper();
P-414	-0.0593 -0.0485 -0.0470 -0.0209 -0.0196 -0.0335 -0.0784 -0.0430 -0.0386 -0.0259 -0.0560 -0.0375 -0.0372 -0.0733 -0.0670 -0.0783 -0.0295 -0.0521 -0.0385 -0.0451 -0.1052
S-14	mSizeOnTier.containsKey(tierAlias) ? mSizeOnTier.get(tierAlias) : 0
T-14	mSizeOnTier.containsKey(tierAlias) ? mSizeOnTier.get(tierAlias) : 0L
H-14	-0.05469520017504692	mSizeOnTier.containsKey(tierAlias) ? mSizeOnTier.get(tierAlias) : 0L
D-14	-0.05469520017504692	mSizeOnTier.containsKey(tierAlias) ? mSizeOnTier.get(tierAlias) : 0L
P-14	-0.0344 -0.0381 -0.0230 -0.0114 -0.0999 -0.0407 -0.0493 -0.0987 -0.0498 -0.0522 -0.0303 -0.0938 -0.0641 -0.0463 -0.0454 -0.0368 -0.0107 -0.1008 -0.0664 -0.0958 -0.0546 -0.0481 -0.0363 -0.0629 -0.0738 -0.0313 -0.0224 -0.1140
S-146	UriBuilder.fromResource(StreamAlertConditionResource.class).path("{conditionId}").build(alertCondition.getId())
T-146	UriBuilder.fromResource(StreamAlertConditionResource.class).path("{conditionId}").build(stream.getId(),alertCondition.getId())
H-146	-0.06309933960437775	UriBuilder.fromResource(StreamAlertConditionResource.class).path("{conditionId}").build(stream.getId(),alertCondition.getId())
D-146	-0.06309933960437775	UriBuilder.fromResource(StreamAlertConditionResource.class).path("{conditionId}").build(stream.getId(),alertCondition.getId())
P-146	-0.0431 -0.0444 -0.1039 -0.0658 -0.0402 -0.0911 -0.0205 -0.0272 -0.0577 -0.0449 -0.1157 -0.0553 -0.0601 -0.0468 -0.0209 -0.0294 -0.0873 -0.0473 -0.0646 -0.0192 -0.0913 -0.0411 -0.1145 -0.0390 -0.0710 -0.0291 -0.0692 -0.1107 -0.0248 -0.1775 -0.1023
S-42	LOG.error("Failed to transit standby cluster to " + SyncReplicationState.DOWNGRADE_ACTIVE)
T-42	LOG.error("Failed to transit standby cluster to " + SyncReplicationState.DOWNGRADE_ACTIVE,e)
H-42	-0.05635456368327141	LOG.error("Failed to transit standby cluster to " + SyncReplicationState.DOWNGRADE_ACTIVE,e)
D-42	-0.05635456368327141	LOG.error("Failed to transit standby cluster to " + SyncReplicationState.DOWNGRADE_ACTIVE,e)
P-42	-0.0503 -0.0970 -0.0451 -0.0438 -0.0756 -0.0680 -0.0172 -0.0266 -0.0092 -0.0172 -0.0423 -0.0709 -0.0864 -0.0847 -0.0221 -0.0263 -0.0546 -0.0811 -0.0288 -0.0233 -0.0170 -0.0159 -0.0158 -0.1140 -0.0210 -0.1616 -0.1401 -0.0693 -0.1090
S-297	result.expectedBodiesReceived("A+C+E+G+I","B+D+F+H+J")
T-297	result.expectedBodiesReceivedInAnyOrder("A+C+E+G+I","B+D+F+H+J")
H-297	-0.056973185390233994	result.expectedBodiesReceivedInAnyOrder("A+C+E+G+I","B+D+F+H+J")
D-297	-0.056973185390233994	result.expectedBodiesReceivedInAnyOrder("A+C+E+G+I","B+D+F+H+J")
P-297	-0.0447 -0.0848 -0.0293 -0.0131 -0.0132 -0.0040 -0.0552 -0.0642 -0.0646 -0.0389 -0.0714 -0.0648 -0.0486 -0.0412 -0.0499 -0.0581 -0.0555 -0.0482 -0.0572 -0.0458 -0.0760 -0.0437 -0.0553 -0.0709 -0.0900 -0.0435 -0.1679 -0.0953
S-697	cluster.getTypeFactory().createSqlType(SqlTypeName.DECIMAL,bd.scale(),unscaled.toString().length())
T-697	cluster.getTypeFactory().createSqlType(SqlTypeName.DECIMAL,unscaled.toString().length(),bd.scale())
H-697	-0.08283591270446777	cluster.getTypeFactory().createSqlType(SqlTypeName.DECIMAL,unscaled.toString().length(),bd.scale())
D-697	-0.08283591270446777	cluster.getTypeFactory().createSqlType(SqlTypeName.DECIMAL,unscaled.toString().length(),bd.scale())
P-697	-0.0333 -0.0981 -0.0298 -0.0395 -0.0604 -0.0438 -0.0207 -0.0388 -0.0938 -0.0133 -0.0157 -0.1081 -0.0175 -0.0100 -0.1387 -0.0726 -0.0244 -0.1072 -0.0620 -0.0681 -0.0588 -0.7259 -0.0031 -0.1247 -0.0181 -0.1035 -0.1067
S-421	assertEquals(2,historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size())
T-421	assertEquals(3,historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size())
H-421	-0.05775982514023781	assertEquals(3,historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size())
D-421	-0.05775982514023781	assertEquals(3,historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size())
P-421	-0.0542 -0.0441 -0.0430 -0.0376 -0.1067 -0.0605 -0.0542 -0.0163 -0.0332 -0.0441 -0.0408 -0.0846 -0.0212 -0.0185 -0.0885 -0.0253 -0.0578 -0.1052 -0.0619 -0.0451 -0.0240 -0.0598 -0.0650 -0.0816 -0.0734 -0.1101 -0.1029
S-95	testSame("asdf;","var asdf;",VarCheck.NAME_REFERENCE_IN_EXTERNS_ERROR,true)
T-95	testSame("asdf;","var asdf;",VarCheck.NAME_REFERENCE_IN_EXTERNS_ERROR)
H-95	-0.05664002522826195	testSame("asdf;","var asdf;",VarCheck.NAME_REFERENCE_IN_EXTERNS_ERROR)
D-95	-0.05664002522826195	testSame("asdf;","var asdf;",VarCheck.NAME_REFERENCE_IN_EXTERNS_ERROR)
P-95	-0.0501 -0.0667 -0.0225 -0.0688 -0.0528 -0.0694 -0.0188 -0.0704 -0.0485 -0.0575 -0.0329 -0.0964 -0.0344 -0.0757 -0.0076 -0.0759 -0.0591 -0.0910 -0.0286 -0.0287 -0.0326 -0.1150 -0.0313 -0.0656 -0.1158
S-674	ShrinkWrap.create(JavaArchive.class).addAsManifestResource(EmptyAsset.INSTANCE,"beans.xml")
T-674	ShrinkWrap.create(JavaArchive.class).addAsManifestResource("beans.xml")
H-674	-0.06253833323717117	ShrinkWrap.create(JavaArchive.class).addAsManifestResource("beans.xml")
D-674	-0.06253833323717117	ShrinkWrap.create(JavaArchive.class).addAsManifestResource("beans.xml")
P-674	-0.0284 -0.0240 -0.0233 -0.1021 -0.0575 -0.0928 -0.0229 -0.0223 -0.0802 -0.0793 -0.0602 -0.0457 -0.0370 -0.0376 -0.0507 -0.1345 -0.0239 -0.0952 -0.0736 -0.1262 -0.0958
S-806	log.warn("Unable to provision more workers. Current workerCount[%d] maximum workerCount[%d].")
T-806	log.warn("Unable to provision more workers. Current workerCount[%d] maximum workerCount[%d].",currValidWorkers,maxWorkerCount)
H-806	-0.062116291373968124	log.warn("Unable to provision more workers. Current workerCount[%d] maximum workerCount[%d].",currValidWorkers,maxWorkerCount)
D-806	-0.062116291373968124	log.warn("Unable to provision more workers. Current workerCount[%d] maximum workerCount[%d].",currValidWorkers,maxWorkerCount)
P-806	-0.0717 -0.0946 -0.0394 -0.0500 -0.0134 -0.0707 -0.0148 -0.0358 -0.0382 -0.0953 -0.0286 -0.0330 -0.0626 -0.0544 -0.0372 -0.0354 -0.0928 -0.0426 -0.0270 -0.0500 -0.0828 -0.0470 -0.0592 -0.0874 -0.0200 -0.0062 -0.0019 -0.1276 -0.1633 -0.0891 -0.1131 -0.1310 -0.0952 -0.1005
S-824	standardSearchRequest(query,IndexHelper.determineAffectedIndices(indexRangeService,deflector,range))
T-824	standardSearchRequest(query,IndexHelper.determineAffectedIndices(indexRangeService,deflector,range),range)
H-824	-0.051468510180711746	standardSearchRequest(query,IndexHelper.determineAffectedIndices(indexRangeService,deflector,range),range)
D-824	-0.051468510180711746	standardSearchRequest(query,IndexHelper.determineAffectedIndices(indexRangeService,deflector,range),range)
P-824	-0.0280 -0.0293 -0.0416 -0.0914 -0.0395 -0.1007 -0.0318 -0.0265 -0.0955 -0.0207 -0.0188 -0.0259 -0.0359 -0.0305 -0.1113 -0.0383 -0.0117 -0.0373 -0.1071 -0.0452 -0.0168 -0.0294 -0.0990 -0.0238 -0.0939 -0.0141 -0.0932 -0.1039
S-125	CsvReporter.forRegistry(registry).convertDurationsTo(getDurationUnit()).convertDurationsTo(getRateUnit())
T-125	CsvReporter.forRegistry(registry).convertDurationsTo(getDurationUnit()).convertRatesTo(getRateUnit())
H-125	-0.06557651609182358	CsvReporter.forRegistry(registry).convertDurationsTo(getDurationUnit()).convertRatesTo(getRateUnit())
D-125	-0.06557651609182358	CsvReporter.forRegistry(registry).convertDurationsTo(getDurationUnit()).convertRatesTo(getRateUnit())
P-125	-0.0074 -0.0126 -0.1050 -0.0502 -0.0356 -0.0929 -0.0332 -0.0815 -0.0169 -0.0753 -0.0148 -0.1085 -0.0432 -0.0276 -0.0473 -0.0574 -0.0336 -0.2642 -0.0789 -0.1075 -0.0413 -0.0398 -0.0567 -0.1006 -0.1075
S-123	server.getSegment(segment.getIdentifier()) != null && peon.getSegmentsToLoad().contains(segment)
T-123	server.getSegment(segment.getIdentifier()) != null || peon.getSegmentsToLoad().contains(segment)
H-123	-0.06024351343512535	server.getSegment(segment.getIdentifier()) != null || peon.getSegmentsToLoad().contains(segment)
D-123	-0.06024351343512535	server.getSegment(segment.getIdentifier()) != null || peon.getSegmentsToLoad().contains(segment)
P-123	-0.0518 -0.0802 -0.0601 -0.0233 -0.0781 -0.0185 -0.0968 -0.0472 -0.0520 -0.0954 -0.0672 -0.0841 -0.0725 -0.0629 -0.0394 -0.0922 -0.0470 -0.0250 -0.0136 -0.0429 -0.0427 -0.0951 -0.0174 -0.0957 -0.1049
S-200	julianDateFloor(range,(int)date + EPOCH_JULIAN,true)
T-200	julianDateFloor(range,(int)date + EPOCH_JULIAN,false)
H-200	-0.05664811283349991	julianDateFloor(range,(int)date + EPOCH_JULIAN,false)
D-200	-0.05664811283349991	julianDateFloor(range,(int)date + EPOCH_JULIAN,false)
P-200	-0.0346 -0.0163 -0.0285 -0.0923 -0.0585 -0.0977 -0.0175 -0.0732 -0.0958 -0.0463 -0.0875 -0.0647 -0.0747 -0.0194 -0.0194 -0.0231 -0.0957 -0.0250 -0.0199 -0.0113 -0.0268 -0.1054 -0.0845 -0.0898 -0.1084
S-825	scanFeatures(getCamelKarafFeatureUrl(),"camel-core","camel-spring","camel-test")
T-825	scanFeatures(getCamelKarafFeatureUrl(),"xml-specs-api","camel-core","camel-spring","camel-test")
H-825	-0.06345808506011963	scanFeatures(getCamelKarafFeatureUrl(),"xml-specs-api","camel-core","camel-spring","camel-test")
D-825	-0.06345808506011963	scanFeatures(getCamelKarafFeatureUrl(),"xml-specs-api","camel-core","camel-spring","camel-test")
P-825	-0.0270 -0.0554 -0.1083 -0.0451 -0.0332 -0.0329 -0.0975 -0.0093 -0.0295 -0.0573 -0.0983 -0.0415 -0.0048 -0.0595 -0.0008 -0.0329 -0.0002 -0.0338 -0.3058 -0.0771 -0.0548 -0.0527 -0.0421 -0.0791 -0.0140 -0.0562 -0.0642 -0.0716 -0.1454 -0.1279 -0.1093
S-702	Status.constructStatuses(get(getBaseURL() + "statuses/mentions.json",null,true))
T-702	Status.createStatuseList(get(getBaseURL() + "statuses/mentions.json",null,true))
H-702	-0.05571722984313965	Status.createStatuseList(get(getBaseURL() + "statuses/mentions.json",null,true))
D-702	-0.05571722984313965	Status.createStatuseList(get(getBaseURL() + "statuses/mentions.json",null,true))
P-702	-0.0362 -0.0981 -0.0405 -0.0178 -0.0088 -0.0840 -0.0847 -0.0541 -0.0890 -0.0573 -0.0248 -0.0366 -0.1002 -0.0922 -0.0840 -0.0171 -0.0477 -0.0166 -0.0212 -0.1174 -0.0337 -0.0489 -0.0431 -0.0703 -0.0544 -0.0203 -0.1054
S-744	Mono.just(entry.getKey()).and(entry.getValue().health().compose(this.timeoutCompose))
T-744	Mono.just(entry.getKey()).zipWith(entry.getValue().health().compose(this.timeoutCompose))
H-744	-0.053960271179676056	Mono.just(entry.getKey()).zipWith(entry.getValue().health().compose(this.timeoutCompose))
D-744	-0.053960271179676056	Mono.just(entry.getKey()).zipWith(entry.getValue().health().compose(this.timeoutCompose))
P-744	-0.0300 -0.1050 -0.0194 -0.0701 -0.0819 -0.1040 -0.0155 -0.0544 -0.0179 -0.0235 -0.0640 -0.0610 -0.0960 -0.0262 -0.0660 -0.0096 -0.0547 -0.0216 -0.0728 -0.0665 -0.0896 -0.0462 -0.0352 -0.0292 -0.0299 -0.1129
S-743	CsvReporter.forRegistry(registry).convertDurationsTo(getDurationUnit()).convertDurationsTo(getRateUnit())
T-743	CsvReporter.forRegistry(registry).convertDurationsTo(getDurationUnit()).convertRatesTo(getRateUnit())
H-743	-0.06557651609182358	CsvReporter.forRegistry(registry).convertDurationsTo(getDurationUnit()).convertRatesTo(getRateUnit())
D-743	-0.06557651609182358	CsvReporter.forRegistry(registry).convertDurationsTo(getDurationUnit()).convertRatesTo(getRateUnit())
P-743	-0.0074 -0.0126 -0.1050 -0.0502 -0.0356 -0.0929 -0.0332 -0.0815 -0.0169 -0.0753 -0.0148 -0.1085 -0.0432 -0.0276 -0.0473 -0.0574 -0.0336 -0.2642 -0.0789 -0.1075 -0.0413 -0.0398 -0.0567 -0.1006 -0.1075
S-434	@Override public ResponseImpl header(String name,Property property){ addHeader(name,property); return this; }
T-434	@Override public Response header(String name,Property property){ addHeader(name,property); return this; }
H-434	-0.05648879334330559	@Override public Response header(String name,Property property){ addHeader(name,property); return this; }
D-434	-0.05648879334330559	@Override public Response header(String name,Property property){ addHeader(name,property); return this; }
P-434	-0.0680 -0.0428 -0.0678 -0.0486 -0.0587 -0.0772 -0.0304 -0.0553 -0.0757 -0.0286 -0.0285 -0.0387 -0.0150 -0.0778 -0.0355 -0.0741 -0.0381 -0.0557 -0.0765 -0.0720 -0.0631 -0.0771 -0.0942
S-466	logger.debug("MyQ binding received command '{}' for item '{}'",command,itemName)
T-466	logger.trace("MyQ binding received command '{}' for item '{}'",command,itemName)
H-466	-0.16383394598960876	logger.debug("MyQ binding received command '{}' for item '{}'",command,itemName)
D-466	-0.16383394598960876	logger.debug("MyQ binding received command '{}' for item '{}'",command,itemName)
P-466	-0.0536 -0.1012 -0.9216 -0.0477 -0.0455 -0.0143 -0.0126 -1.5164 -0.0998 -0.1310 -0.0191 -0.0764 -0.0552 -0.0353 -0.1082 -0.0223 -0.0925 -0.0721 -0.0424 -0.1258 -0.0718 -0.0750 -0.0863 -0.1060
S-502	Status.constructStatuses(get(getBaseURL() + "statuses/friends_timeline.json",true))
T-502	Status.createStatuseList(get(getBaseURL() + "statuses/friends_timeline.json",true))
H-502	-0.05734081566333771	Status.createStatuseList(get(getBaseURL() + "statuses/friends_timeline.json",true))
D-502	-0.05734081566333771	Status.createStatuseList(get(getBaseURL() + "statuses/friends_timeline.json",true))
P-502	-0.0354 -0.0971 -0.0380 -0.0153 -0.0053 -0.0759 -0.0820 -0.0522 -0.0918 -0.0582 -0.0269 -0.0387 -0.0936 -0.0915 -0.0882 -0.0189 -0.0624 -0.0220 -0.0860 -0.0217 -0.1043 -0.0369 -0.0483 -0.0704 -0.0236 -0.1063
S-644	war.addAsWebInfResource(ClusteredWebTestCase.class.getPackage(),"web.xml")
T-644	war.setWebXML(ClusteredWebTestCase.class.getPackage(),"web.xml")
H-644	-0.07307498902082443	war.setWebXML(ClusteredWebTestCase.class.getPackage(),"web.xml")
D-644	-0.07307498902082443	war.setWebXML(ClusteredWebTestCase.class.getPackage(),"web.xml")
P-644	-0.0186 -0.1069 -0.1642 -0.0209 -0.0247 -0.1276 -0.0178 -0.0552 -0.0375 -0.0248 -0.0955 -0.0690 -0.1016 -0.0414 -0.0258 -0.1128 -0.1133 -0.0439 -0.1024 -0.0574 -0.1260 -0.1204
S-375	logger.info("Renamed " + instancesRenamed + " instances of "+ propsRenamed+ " properties.")
T-375	logger.fine("Renamed " + instancesRenamed + " instances of "+ propsRenamed+ " properties.")
H-375	-0.05684381350874901	logger.fine("Renamed " + instancesRenamed + " instances of "+ propsRenamed+ " properties.")
D-375	-0.05684381350874901	logger.fine("Renamed " + instancesRenamed + " instances of "+ propsRenamed+ " properties.")
P-375	-0.0271 -0.0910 -0.1191 -0.0118 -0.0860 -0.0121 -0.0384 -0.0793 -0.0875 -0.0258 -0.0223 -0.0515 -0.1052 -0.1035 -0.0298 -0.0531 -0.0275 -0.0363 -0.0210 -0.0488 -0.0363 -0.1117 -0.0502 -0.0407 -0.1050
S-52	database.FindProduct(node.getManufacturer(),node.getDeviceType(),node.getDeviceId())
T-52	database.FindProduct(node.getManufacturer(),node.getDeviceType(),node.getDeviceId(),node.getApplicationVersion())
H-52	-0.07063642889261246	database.FindProduct(node.getManufacturer(),node.getDeviceType(),node.getDeviceId(),node.getApplicationVersion())
D-52	-0.07063642889261246	database.FindProduct(node.getManufacturer(),node.getDeviceType(),node.getDeviceId(),node.getApplicationVersion())
P-52	-0.0734 -0.0967 -0.0383 -0.0600 -0.1089 -0.0598 -0.1007 -0.0751 -0.0101 -0.0116 -0.0420 -0.0779 -0.1124 -0.0700 -0.0628 -0.0435 -0.0980 -0.0727 -0.1034 -0.0648 -0.0623 -0.0842 -0.1620 -0.0604 -0.0991 -0.0405 -0.0147 -0.0372 -0.1061
S-282	LOG.info("Processing changes for pool " + poolName + ": "+ pools.get(poolName))
T-282	LOG.debug("Processing changes for pool " + poolName + ": "+ pools.get(poolName))
H-282	-0.05524710938334465	LOG.debug("Processing changes for pool " + poolName + ": "+ pools.get(poolName))
D-282	-0.05524710938334465	LOG.debug("Processing changes for pool " + poolName + ": "+ pools.get(poolName))
P-282	-0.0671 -0.0891 -0.0165 -0.0505 -0.0178 -0.0268 -0.0606 -0.0192 -0.1036 -0.0798 -0.0300 -0.0832 -0.0814 -0.0068 -0.0158 -0.0221 -0.1092 -0.0665 -0.0849 -0.0364 -0.0746 -0.0270 -0.1018
S-359	JavaConversions.asIterable(kafkaLog.logSegments(committedOffset,Long.MAX_VALUE))
T-359	JavaConversions.asJavaIterable(kafkaLog.logSegments(committedOffset,Long.MAX_VALUE))
H-359	-0.05723966658115387	JavaConversions.asJavaIterable(kafkaLog.logSegments(committedOffset,Long.MAX_VALUE))
D-359	-0.05723966658115387	JavaConversions.asJavaIterable(kafkaLog.logSegments(committedOffset,Long.MAX_VALUE))
P-359	-0.0304 -0.0269 -0.0222 -0.0944 -0.0969 -0.0396 -0.0567 -0.0856 -0.0157 -0.0600 -0.0961 -0.0423 -0.0129 -0.0959 -0.0161 -0.0320 -0.0639 -0.1079 -0.1052 -0.0172 -0.0845 -0.0467 -0.0166 -0.1081
S-19	LOGGER.log(Level.SEVERE,LocalizationMessages.ERROR_COMMITTING_OUTPUT_STREAM())
T-19	LOGGER.log(Level.SEVERE,LocalizationMessages.ERROR_COMMITTING_OUTPUT_STREAM(),e)
H-19	-0.05767984315752983	LOGGER.log(Level.SEVERE,LocalizationMessages.ERROR_COMMITTING_OUTPUT_STREAM(),e)
D-19	-0.05767984315752983	LOGGER.log(Level.SEVERE,LocalizationMessages.ERROR_COMMITTING_OUTPUT_STREAM(),e)
P-19	-0.0187 -0.0972 -0.0558 -0.0818 -0.0495 -0.0916 -0.0270 -0.0248 -0.1144 -0.0339 -0.0179 -0.0491 -0.1023 -0.0545 -0.0650 -0.0079 -0.0346 -0.0846 -0.0206 -0.0744 -0.0258 -0.1136 -0.0117 -0.0735 -0.1115
S-4	factory.getEmbdeddedServletContainer(exampleServletRegistration(),new FilterRegistrationBean(new ExampleFilter()))
T-4	factory.getEmbeddedServletContainer(exampleServletRegistration(),new FilterRegistrationBean(new ExampleFilter()))
H-4	-0.05247823894023895	factory.getEmbeddedServletContainer(exampleServletRegistration(),new FilterRegistrationBean(new ExampleFilter()))
D-4	-0.05247823894023895	factory.getEmbeddedServletContainer(exampleServletRegistration(),new FilterRegistrationBean(new ExampleFilter()))
P-4	-0.0259 -0.0979 -0.0503 -0.0279 -0.0155 -0.1136 -0.0195 -0.0786 -0.0286 -0.0967 -0.0354 -0.0423 -0.0292 -0.0267 -0.0871 -0.0438 -0.0297 -0.0557 -0.0412 -0.1039
S-478	expectQueryToFail("UserWith:Colon",ldapUserPassword,INVALID_CREDENTIALS_ERROR)
T-478	expectQueryToFail("UserWith:Colon",ldapUserPassword,MALFORMED_CREDENTIALS_ERROR)
H-478	-0.06667677313089371	expectQueryToFail("UserWith:Colon",ldapUserPassword,MALFORMED_CREDENTIALS_ERROR)
D-478	-0.06667677313089371	expectQueryToFail("UserWith:Colon",ldapUserPassword,MALFORMED_CREDENTIALS_ERROR)
P-478	-0.0491 -0.0343 -0.0944 -0.0501 -0.0451 -0.0349 -0.0350 -0.1153 -0.0238 -0.0546 -0.0368 -0.0211 -0.0584 -0.0544 -0.1329 -0.0789 -0.1206 -0.0943 -0.1756 -0.0532 -0.0143 -0.0256 -0.0957 -0.0250 -0.0990 -0.1112
S-481	DiagnosticGroups.registerGroup("functionParams",FunctionTypeBuilder.OPTIONAL_ARG_AT_END)
T-481	DiagnosticGroups.registerGroup("functionParams",FunctionTypeBuilder.INEXISTENT_PARAM,FunctionTypeBuilder.OPTIONAL_ARG_AT_END)
H-481	-0.14729607105255127	DiagnosticGroups.registerGroup("functionParams",FunctionTypeBuilder.OPTIONAL_ARG_AT_END,null)
D-481	-0.14729607105255127	DiagnosticGroups.registerGroup("functionParams",FunctionTypeBuilder.OPTIONAL_ARG_AT_END,null)
P-481	-0.0156 -0.0384 -0.0966 -0.0548 -0.0452 -0.0628 -0.0455 -0.0510 -0.0528 -0.0313 -0.0462 -0.0548 -0.0958 -0.4050 -0.0245 -0.0711 -0.0167 -0.0840 -0.0494 -0.0979 -0.0313 -0.4426 -1.5310 -0.1254 -0.1129
S-474	GL20.glUniformMatrix2(location,transpose,toFloatBuffer(value,offset,count << 2))
T-474	GL20.glUniformMatrix2fv(location,transpose,toFloatBuffer(value,offset,count << 2))
H-474	-0.05157531052827835	GL20.glUniformMatrix2fv(location,transpose,toFloatBuffer(value,offset,count << 2))
D-474	-0.05157531052827835	GL20.glUniformMatrix2fv(location,transpose,toFloatBuffer(value,offset,count << 2))
P-474	-0.0419 -0.0123 -0.0229 -0.0361 -0.0255 -0.0686 -0.0673 -0.0795 -0.0233 -0.0859 -0.0121 -0.0885 -0.0385 -0.0280 -0.0364 -0.1091 -0.0658 -0.0760 -0.0308 -0.0801 -0.0383 -0.0471 -0.0418 -0.0266 -0.1069
S-543	!resource.getAtmosphereResourceEvent().isClosedByApplication() && !resource.isCancelled()
T-543	!resource.getAtmosphereResourceEvent().isClosedByClient() && !resource.getAtmosphereResourceEvent().isClosedByApplication() && !resource.isCancelled()
H-543	-0.09951691329479218	!resource.getAtmosphereResourceEvent().isClosedByClient() && !resource.getAtmosphereResourceEvent().isClosedByApplication() && !resource.getAtmosphereResourceEvent().isClosedByApplication() && !resource.isCancelled()
D-543	-0.09951691329479218	!resource.getAtmosphereResourceEvent().isClosedByClient() && !resource.getAtmosphereResourceEvent().isClosedByApplication() && !resource.getAtmosphereResourceEvent().isClosedByApplication() && !resource.isCancelled()
P-543	-0.0415 -0.0502 -0.0974 -0.0515 -0.0364 -0.0219 -0.0156 -0.0502 -0.0247 -0.0688 -0.0682 -0.0342 -0.0402 -0.0853 -0.0620 -0.0877 -0.0203 -0.0530 -0.1005 -0.0528 -0.0457 -0.0244 -0.0114 -0.0775 -0.0315 -0.0642 -0.0715 -0.0370 -0.0232 -0.2664 -0.0696 -0.0591 -0.0289 -0.0554 -0.1101 -0.2138 -0.0760 -0.0296 -0.0184 -0.1168 -0.0394 -0.0668 -0.1113 -0.1133 -0.0253 -0.2240 -0.0794 -0.1383 -0.0316 -0.0646 -0.1120 -1.7565 -0.0110 -0.0876 -0.1194
S-635	getSsl(ClientAuth.NEED,"password","src/test/resources/test.jks")
T-635	getSsl(ClientAuth.NEED,"password","src/test/resources/test.jks","src/test/resources/test.jks")
H-635	-0.09176336228847504	getSsl(ClientAuth.NEED,"password","src/test/resources/test.jks")
D-635	-0.09176336228847504	getSsl(ClientAuth.NEED,"password","src/test/resources/test.jks")
P-635	-0.0586 -0.0231 -0.1227 -0.0462 -0.0281 -0.0939 -0.0264 -0.0406 -0.0548 -0.0297 -0.0747 -0.0265 -0.0374 -0.0618 -0.0558 -0.0137 -0.0478 -0.0596 -0.1024 -0.0272 -0.0210 -0.9577 -0.1008
S-645	factory.getEmbdeddedServletContainer(exampleServletRegistration(),new FilterRegistrationBean(new ExampleFilter()))
T-645	factory.getEmbeddedServletContainer(exampleServletRegistration(),new FilterRegistrationBean(new ExampleFilter()))
H-645	-0.05247823894023895	factory.getEmbeddedServletContainer(exampleServletRegistration(),new FilterRegistrationBean(new ExampleFilter()))
D-645	-0.05247823894023895	factory.getEmbeddedServletContainer(exampleServletRegistration(),new FilterRegistrationBean(new ExampleFilter()))
P-645	-0.0259 -0.0979 -0.0503 -0.0279 -0.0155 -0.1136 -0.0195 -0.0786 -0.0286 -0.0967 -0.0354 -0.0423 -0.0292 -0.0267 -0.0871 -0.0438 -0.0297 -0.0557 -0.0412 -0.1039
S-248	HttpRequest.put("http://localhost:8080/ejbws-example/SingletonEndpoint",message,10,SECONDS)
T-248	HttpRequest.post("http://localhost:8080/ejbws-example/SingletonEndpoint",message,10,SECONDS)
H-248	-0.05117328092455864	HttpRequest.post("http://localhost:8080/ejbws-example/SingletonEndpoint",message,10,SECONDS)
D-248	-0.05117328092455864	HttpRequest.post("http://localhost:8080/ejbws-example/SingletonEndpoint",message,10,SECONDS)
P-248	-0.0206 -0.1199 -0.0471 -0.0653 -0.0274 -0.0460 -0.0287 -0.0182 -0.0376 -0.0438 -0.0841 -0.0204 -0.0468 -0.0306 -0.0240 -0.0680 -0.0303 -0.1003 -0.0511 -0.0211 -0.0860 -0.1083
S-646	public DerivedBuilder setRealmPassword(String password){ realm().setPassword(password); return this; }
T-646	public Builder setRealmPassword(String password){ realm().setPassword(password); return this; }
H-646	-0.060241952538490295	public Builder setRealmPassword(String password){ realm().setPassword(password); return this; }
D-646	-0.060241952538490295	public Builder setRealmPassword(String password){ realm().setPassword(password); return this; }
P-646	-0.0652 -0.0246 -0.0520 -0.0289 -0.0453 -0.0841 -0.0412 -0.0846 -0.0395 -0.0180 -0.0535 -0.0558 -0.0461 -0.0968 -0.0407 -0.0702 -0.0864 -0.0767 -0.0651 -0.0854 -0.1050
S-28	configuration.addClientInterceptor(method,factory,InterceptorOrder.View.COMPONENT_DISPATCHER)
T-28	configuration.addViewInterceptor(method,factory,InterceptorOrder.View.COMPONENT_DISPATCHER)
H-28	-0.06177547946572304	configuration.addViewInterceptor(method,factory,InterceptorOrder.View.COMPONENT_DISPATCHER)
D-28	-0.06177547946572304	configuration.addViewInterceptor(method,factory,InterceptorOrder.View.COMPONENT_DISPATCHER)
P-28	-0.0477 -0.1047 -0.0605 -0.1083 -0.0248 -0.1017 -0.0402 -0.0933 -0.0456 -0.1073 -0.0087 -0.0737 -0.0841 -0.0602 -0.0792 -0.0085 -0.0603 -0.0134 -0.0165 -0.0330 -0.0855 -0.1017
S-372	mavenBundle("info.cukes","cucumber-jvm-deps","1.0.4-SNAPSHOT")
T-372	mavenBundle("info.cukes","cucumber-jvm-deps")
H-372	-0.047678690403699875	mavenBundle("info.cukes","cucumber-jvm-deps")
D-372	-0.047678690403699875	mavenBundle("info.cukes","cucumber-jvm-deps")
P-372	-0.0471 -0.0220 -0.0548 -0.0388 -0.0797 -0.0263 -0.0104 -0.0759 -0.0134 -0.0558 -0.0266 -0.0661 -0.0068 -0.0613 -0.0084 -0.1092 -0.1078
S-311	new SSL((short)0,(short)MIN_SSL_OPTIONS,(short)sslPort)
T-311	new SSL((short)MIN_SSL_OPTIONS,(short)0,(short)sslPort)
H-311	-0.08235054463148117	new SSL((short)MIN_SSL_OPTIONS,(short)0,(short)sslPort)
D-311	-0.08235054463148117	new SSL((short)MIN_SSL_OPTIONS,(short)0,(short)sslPort)
P-311	-0.0735 -0.0332 -0.0339 -0.0534 -0.0754 -0.0214 -0.0974 -0.0362 -0.0877 -0.0417 -0.1095 -0.1076 -0.0721 -0.0592 -0.0147 -0.1045 -0.1091 -0.0639 -0.3815 -0.0544 -0.0832 -0.0982
S-462	LOG.error("Cannot resolve the host name for " + regionAddress + " because of "+ e)
T-462	LOG.warn("Cannot resolve the host name for " + regionAddress + " because of "+ e)
H-462	-0.1313467174768448	LOG.warn("Cannot resolve the host name for " + regionAddress + " because of "+ e)
D-462	-0.1313467174768448	LOG.warn("Cannot resolve the host name for " + regionAddress + " because of "+ e)
P-462	-0.0384 -0.0965 -0.3543 -0.0604 -0.0109 -0.8071 -0.1316 -0.1132 -0.1030 -0.0674 -0.1392 -0.1020 -0.0621 -0.0446 -0.1589 -0.1212 -0.0421 -0.0710 -0.0317 -0.1519 -0.0827 -0.0995
S-512	defaults.jackson2Encoder(new Jackson2JsonEncoder(objectMapper,EMPTY_MIME_TYPES))
T-512	defaults.jackson2JsonEncoder(new Jackson2JsonEncoder(objectMapper,EMPTY_MIME_TYPES))
H-512	-0.17620611190795898	defaults.jackson2Encoder(new Jackson2JsonEncoder(objectMapper,EMPTY_MIME_TYPES))
D-512	-0.17620611190795898	defaults.jackson2Encoder(new Jackson2JsonEncoder(objectMapper,EMPTY_MIME_TYPES))
P-512	-0.0465 -0.0915 -2.4477 -0.0202 -0.0573 -0.0887 -0.0339 -0.0619 -0.0487 -0.1479 -0.0409 -0.0763 -0.0377 -0.0543 -0.1104 -0.0221 -0.0851 -0.0097 -0.1020 -0.0218 -0.1771 -0.0952
S-112	createMessageConsumer(session,destinationName,messageSelector,topic,durableSubscriptionId,true)
T-112	createMessageConsumer(session,destinationName,messageSelector,topic,durableSubscriptionId,false)
H-112	-0.13600879907608032	createMessageConsumer(session,destinationName,messageSelector,topic,durableSubscriptionId)
D-112	-0.13600879907608032	createMessageConsumer(session,destinationName,messageSelector,topic,durableSubscriptionId)
P-112	-0.0181 -0.0176 -0.0935 -0.0262 -0.1062 -0.0272 -0.0695 -0.0970 -0.0258 -0.0182 -0.1274 -0.0389 -0.1228 -0.0370 -0.5051 -0.0735 -0.0726 -0.9976 -0.1101
S-575	LOG.info("Creating short circuit output stream for block {} @ {}",blockId,address)
T-575	LOG.debug("Creating short circuit output stream for block {} @ {}",blockId,address)
H-575	-0.05614948645234108	LOG.debug("Creating short circuit output stream for block {} @ {}",blockId,address)
D-575	-0.05614948645234108	LOG.debug("Creating short circuit output stream for block {} @ {}",blockId,address)
P-575	-0.0721 -0.0931 -0.0405 -0.0613 -0.0309 -0.0268 -0.0178 -0.0327 -0.0307 -0.0905 -0.0486 -0.0312 -0.0614 -0.0391 -0.0573 -0.0344 -0.0751 -0.1036 -0.0317 -0.0912 -0.1090
S-1	obj.setContentEncoding(Mimetypes.MIMETYPE_BINARY_OCTET_STREAM)
T-1	obj.setContentType(Mimetypes.MIMETYPE_BINARY_OCTET_STREAM)
H-1	-0.0720551609992981	obj.setContentType(Mimetypes.MIMETYPE_BINARY_OCTET_STREAM)
D-1	-0.0720551609992981	obj.setContentType(Mimetypes.MIMETYPE_BINARY_OCTET_STREAM)
P-1	-0.0272 -0.0877 -0.4428 -0.0003 -0.0798 -0.0314 -0.0247 -0.0334 -0.1147 -0.0247 -0.0312 -0.1058 -0.0061 -0.0923 -0.0351 -0.0203 -0.0361 -0.0845 -0.0210 -0.1046 -0.1094
S-440	new GeneralDataCoding(false,false,MessageClass.CLASS1,Alphabet.ALPHA_DEFAULT)
T-440	new GeneralDataCoding(false,true,MessageClass.CLASS1,Alphabet.ALPHA_DEFAULT)
H-440	-0.05897144228219986	new GeneralDataCoding(false,true,MessageClass.CLASS1,Alphabet.ALPHA_DEFAULT)
D-440	-0.05897144228219986	new GeneralDataCoding(false,true,MessageClass.CLASS1,Alphabet.ALPHA_DEFAULT)
P-440	-0.0786 -0.0252 -0.0435 -0.0303 -0.1035 -0.0264 -0.0795 -0.0636 -0.0871 -0.0296 -0.0474 -0.1047 -0.0242 -0.0610 -0.0125 -0.1030 -0.0122 -0.0716 -0.0333 -0.0961 -0.1051
S-371	new RMNodeImpl(nodeId,rmContext,null,0,0,null,null,null)
T-371	new RMNodeImpl(nodeId,rmContext,null,0,0,null,null)
H-371	-0.08331245183944702	new RMNodeImpl(nodeId,rmContext,null,0,0,null,null)
D-371	-0.08331245183944702	new RMNodeImpl(nodeId,rmContext,null,0,0,null,null)
P-371	-0.0784 -0.0251 -0.0354 -0.0397 -0.1087 -0.0592 -0.0602 -0.1141 -0.0084 -0.0715 -0.1329 -0.0363 -0.1030 -0.0150 -0.0712 -0.3584 -0.0506 -0.1090 -0.1058
S-734	Wt.getSlice(slice).mult(Wt.getSlice(slice).transpose())
T-734	Wt.getSlice(slice).plus(Wt.getSlice(slice).transpose())
H-734	-0.058226510882377625	Wt.getSlice(slice).plus(Wt.getSlice(slice).transpose())
D-734	-0.058226510882377625	Wt.getSlice(slice).plus(Wt.getSlice(slice).transpose())
P-734	-0.0239 -0.0410 -0.0916 -0.0513 -0.0282 -0.0706 -0.0323 -0.0764 -0.0091 -0.0684 -0.0268 -0.0391 -0.0923 -0.0474 -0.0323 -0.1154 -0.0290 -0.0995 -0.0291 -0.1136 -0.1055
S-408	undertowHost.getServer().getListeners().get(0).getBinding().getValue().getPort()
T-408	undertowHost.getServer().getListeners().get(0).getBinding().getValue().getAbsolutePort()
H-408	-0.1790679395198822	undertowHost.getServer().getListeners().get(0).getBinding().getValue().getPort()
D-408	-0.1790679395198822	undertowHost.getServer().getListeners().get(0).getBinding().getValue().getPort()
P-408	-0.4674 -0.0117 -0.0556 -0.1012 -0.0495 -0.0586 -0.0531 -0.0724 -0.0810 -0.0533 -0.1021 -0.0401 -0.0727 -0.1053 -0.0802 -0.0185 -0.0572 -0.0757 -1.1183 -0.9813 -0.1054
S-497	Context.getEncounterService().canViewAllEncounterTypes(Context.getAuthenticatedUser())
T-497	!Context.getEncounterService().canViewAllEncounterTypes(Context.getAuthenticatedUser())
H-497	-0.12930023670196533	Context.getEncounterService().canViewAllEncounterTypes(Context.getAuthenticatedUser())
D-497	-0.12930023670196533	Context.getEncounterService().canViewAllEncounterTypes(Context.getAuthenticatedUser())
P-497	-0.0131 -0.0820 -0.0447 -0.0127 -0.0317 -0.0472 -0.0553 -0.1565 -0.2465 -0.1208 -0.0048 -0.0332 -0.0261 -0.3985 -0.0255 -0.1111 -0.0620 -0.8356 -0.1236 -0.1587 -0.1256
S-630	binder.bindConstant().annotatedWith(Names.named("servicePort")).to(8081)
T-630	binder.bindConstant().annotatedWith(Names.named("servicePort")).to(8089)
H-630	-0.060110874474048615	binder.bindConstant().annotatedWith(Names.named("servicePort")).to(8089)
D-630	-0.060110874474048615	binder.bindConstant().annotatedWith(Names.named("servicePort")).to(8089)
P-630	-0.0305 -0.1029 -0.0276 -0.0205 -0.0753 -0.0317 -0.0173 -0.0410 -0.1057 -0.0274 -0.0985 -0.0305 -0.0572 -0.0310 -0.0406 -0.0304 -0.0476 -0.1091 -0.0857 -0.1350 -0.0761 -0.1008
S-23	assertThat(converter.getSupportedMediaTypes()).containsExactly(MediaTypes.HAL_JSON)
T-23	assertThat(converter.getSupportedMediaTypes()).containsExactly(MediaTypes.HAL_JSON,MediaType.parseMediaType(MediaTypes.HAL_JSON_VALUE + ";charset=UTF-8"))
H-23	-0.3017597794532776	assertThat(converter.getSupportedMediaTypes()).contains(MediaTypes.HAL_JSON)
D-23	-0.3017597794532776	assertThat(converter.getSupportedMediaTypes()).contains(MediaTypes.HAL_JSON)
P-23	-0.0563 -0.1041 -0.8164 -0.0936 -0.0487 -0.0595 -0.8394 -0.0423 -0.0647 -0.1010 -2.1006 -0.6024 -0.0386 -0.0938 -0.0530 -0.0300 -0.0947 -0.3514 -0.2758 -0.1690
S-514	Configuration.getLong(PropertyKey.USER_NETWORK_NETTY_TIMEOUT_MS)
T-514	Configuration.getMs(PropertyKey.USER_NETWORK_NETTY_TIMEOUT_MS)
H-514	-0.06187419593334198	Configuration.getMs(PropertyKey.USER_NETWORK_NETTY_TIMEOUT_MS)
D-514	-0.06187419593334198	Configuration.getMs(PropertyKey.USER_NETWORK_NETTY_TIMEOUT_MS)
P-514	-0.0319 -0.0960 -0.0498 -0.0844 -0.0902 -0.0261 -0.0612 -0.1016 -0.0335 -0.0953 -0.0236 -0.1073 -0.0153 -0.0056 -0.1106 -0.0158 -0.0894 -0.0197 -0.0831 -0.0971
S-741	Assert.assertFalse(mFileSystem.getStatus(uri).getInMemoryPercentage() == 100)
T-741	Assert.assertTrue(mFileSystem.getStatus(uri).getInMemoryPercentage() == 100)
H-741	-0.05766599252820015	Assert.assertTrue(mFileSystem.getStatus(uri).getInMemoryPercentage() == 100)
D-741	-0.05766599252820015	Assert.assertTrue(mFileSystem.getStatus(uri).getInMemoryPercentage() == 100)
P-741	-0.0334 -0.0959 -0.0355 -0.0795 -0.0709 -0.0294 -0.0266 -0.0937 -0.0601 -0.0408 -0.0946 -0.0459 -0.0906 -0.0650 -0.0201 -0.0064 -0.0811 -0.0552 -0.0335 -0.0950
S-449	Assert.assertFalse(Boolean.valueOf(response.getFirstHeader("serialized").getValue()))
T-449	Assert.assertTrue(Boolean.valueOf(response.getFirstHeader("serialized").getValue()))
H-449	-0.06751667708158493	Assert.assertTrue(Boolean.valueOf(response.getFirstHeader("serialized").getValue()))
D-449	-0.06751667708158493	Assert.assertTrue(Boolean.valueOf(response.getFirstHeader("serialized").getValue()))
P-449	-0.0467 -0.0984 -0.0319 -0.0332 -0.0809 -0.1615 -0.0907 -0.0203 -0.0883 -0.0440 -0.0927 -0.0501 -0.1550 -0.0353 -0.0806 -0.0135 -0.0898 -0.0180 -0.0219 -0.0975
S-526	Assert.assertFalse(Boolean.valueOf(response.getFirstHeader("serialized").getValue()))
T-526	Assert.assertTrue(Boolean.valueOf(response.getFirstHeader("serialized").getValue()))
H-526	-0.06751667708158493	Assert.assertTrue(Boolean.valueOf(response.getFirstHeader("serialized").getValue()))
D-526	-0.06751667708158493	Assert.assertTrue(Boolean.valueOf(response.getFirstHeader("serialized").getValue()))
P-526	-0.0467 -0.0984 -0.0319 -0.0332 -0.0809 -0.1615 -0.0907 -0.0203 -0.0883 -0.0440 -0.0927 -0.0501 -0.1550 -0.0353 -0.0806 -0.0135 -0.0898 -0.0180 -0.0219 -0.0975
S-193	Configuration.getLong(PropertyKey.USER_NETWORK_NETTY_TIMEOUT_MS)
T-193	Configuration.getMs(PropertyKey.USER_NETWORK_NETTY_TIMEOUT_MS)
H-193	-0.06187419593334198	Configuration.getMs(PropertyKey.USER_NETWORK_NETTY_TIMEOUT_MS)
D-193	-0.06187419593334198	Configuration.getMs(PropertyKey.USER_NETWORK_NETTY_TIMEOUT_MS)
P-193	-0.0319 -0.0960 -0.0498 -0.0844 -0.0902 -0.0261 -0.0612 -0.1016 -0.0335 -0.0953 -0.0236 -0.1073 -0.0153 -0.0056 -0.1106 -0.0158 -0.0894 -0.0197 -0.0831 -0.0971
S-192	invocation.logger.warning("Asking if operation execution has been started: " + invocation)
T-192	invocation.logger.finest("Asking if operation execution has been started: " + invocation)
H-192	-0.05681219324469566	invocation.logger.finest("Asking if operation execution has been started: " + invocation)
D-192	-0.05681219324469566	invocation.logger.finest("Asking if operation execution has been started: " + invocation)
P-192	-0.0385 -0.0959 -0.0252 -0.1120 -0.0330 -0.0182 -0.0530 -0.0383 -0.0119 -0.0700 -0.0757 -0.0336 -0.0500 -0.0621 -0.0218 -0.0756 -0.0998 -0.0853 -0.0263 -0.0677 -0.0990
S-316	getGlobalProperty(OpenmrsConstants.GLOBAL_PROPERTY_LOCALE_ALLOWED_LIST)
T-316	getGlobalProperty(OpenmrsConstants.GLOBAL_PROPERTY_LOCALE_ALLOWED_LIST,"")
H-316	-0.059090420603752136	getGlobalProperty(OpenmrsConstants.GLOBAL_PROPERTY_LOCALE_ALLOWED_LIST,"")
D-316	-0.059090420603752136	getGlobalProperty(OpenmrsConstants.GLOBAL_PROPERTY_LOCALE_ALLOWED_LIST,"")
P-316	-0.0202 -0.0443 -0.1115 -0.0405 -0.0240 -0.0198 -0.0272 -0.1114 -0.0208 -0.1012 -0.0331 -0.1117 -0.0138 -0.0200 -0.1089 -0.0089 -0.1012 -0.1188 -0.0606 -0.0371 -0.1057
S-600	endFunction("get_column_statistics_by_partition: ",statsObj != null)
T-600	endFunction("get_column_statistics_by_partition: ",statsObj != null,null)
H-600	-0.07062602043151855	endFunction("get_column_statistics_by_partition: ",statsObj != null,null)
D-600	-0.07062602043151855	endFunction("get_column_statistics_by_partition: ",statsObj != null,null)
P-600	-0.0281 -0.0419 -0.0599 -0.0525 -0.1009 -0.0544 -0.0748 -0.0088 -0.0850 -0.0344 -0.0840 -0.0115 -0.0862 -0.0336 -0.0127 -0.0466 -0.0753 -0.0783 -0.3364 -0.0261 -0.1038 -0.1186
S-739	new PutBackupOperation(name,dataKey,dataValue,replicationInfo,true)
T-739	new PutBackupOperation(name,dataKey,dataValue,replicationInfo,true,false)
H-739	-0.11010275781154633	new PutBackupOperation(name,dataKey,dataValue,replicationInfo)
D-739	-0.11010275781154633	new PutBackupOperation(name,dataKey,dataValue,replicationInfo)
P-739	-0.0780 -0.3620 -0.0315 -0.0438 -0.1103 -0.0314 -0.1058 -0.0597 -0.0969 -0.1101 -0.0683 -0.1017 -0.0940 -0.0314 -0.0452 -0.0514 -0.4524 -0.1079
S-339	logger.warn("gave up waiting for query reply from device {}",m_address)
T-339	logger.debug("gave up waiting for query reply from device {}",m_address)
H-339	-0.05315880477428436	logger.debug("gave up waiting for query reply from device {}",m_address)
D-339	-0.05315880477428436	logger.debug("gave up waiting for query reply from device {}",m_address)
P-339	-0.0382 -0.0965 -0.0166 -0.0577 -0.0251 -0.0122 -0.0379 -0.0338 -0.0695 -0.0520 -0.0334 -0.0528 -0.0250 -0.0610 -0.0901 -0.0401 -0.0828 -0.0289 -0.1018 -0.1078
S-419	@Override public ResponseImpl description(String description){ throw new RuntimeException("Not implemented"); }
T-419	@Override public Response description(String description){ throw new RuntimeException("Not implemented"); }
H-419	-0.04979552701115608	@Override public Response description(String description){ throw new RuntimeException("Not implemented"); }
D-419	-0.04979552701115608	@Override public Response description(String description){ throw new RuntimeException("Not implemented"); }
P-419	-0.0766 -0.0374 -0.0518 -0.0225 -0.0177 -0.0728 -0.0290 -0.0219 -0.0404 -0.0413 -0.0827 -0.0164 -0.0761 -0.0396 -0.0679 -0.0297 -0.0462 -0.0741 -0.1020
S-141	Configuration.getLong(PropertyKey.USER_NETWORK_NETTY_TIMEOUT_MS)
T-141	Configuration.getMs(PropertyKey.USER_NETWORK_NETTY_TIMEOUT_MS)
H-141	-0.06187419593334198	Configuration.getMs(PropertyKey.USER_NETWORK_NETTY_TIMEOUT_MS)
D-141	-0.06187419593334198	Configuration.getMs(PropertyKey.USER_NETWORK_NETTY_TIMEOUT_MS)
P-141	-0.0319 -0.0960 -0.0498 -0.0844 -0.0902 -0.0261 -0.0612 -0.1016 -0.0335 -0.0953 -0.0236 -0.1073 -0.0153 -0.0056 -0.1106 -0.0158 -0.0894 -0.0197 -0.0831 -0.0971
S-568	location.belongTo(BlockStoreLocation.anyDirInTier(tierAlias))
T-568	location.equals(BlockStoreLocation.anyDirInTier(tierAlias))
H-568	-0.04825305938720703	location.equals(BlockStoreLocation.anyDirInTier(tierAlias))
D-568	-0.04825305938720703	location.equals(BlockStoreLocation.anyDirInTier(tierAlias))
P-568	-0.0204 -0.1022 -0.0352 -0.1047 -0.0372 -0.0384 -0.0292 -0.0983 -0.0273 -0.0203 -0.0391 -0.0129 -0.0952 -0.0397 -0.0271 -0.0205 -0.0250 -0.0959
S-24	new ClientBuilderImpl().serviceUrl(getPulsarBrokerUrl()).ioThreads(2)
T-24	new ClientBuilderImpl().serviceUrl(getPulsarBrokerUrl()).ioThreads(5)
H-24	-0.05083698406815529	new ClientBuilderImpl().serviceUrl(getPulsarBrokerUrl()).ioThreads(5)
D-24	-0.05083698406815529	new ClientBuilderImpl().serviceUrl(getPulsarBrokerUrl()).ioThreads(5)
P-24	-0.0826 -0.0468 -0.0186 -0.0306 -0.0683 -0.0464 -0.0569 -0.0842 -0.0461 -0.0524 -0.0186 -0.0098 -0.0048 -0.0449 -0.0735 -0.0177 -0.0099 -0.1470 -0.1068
S-708	LOG.warn("Promotion of block " + blockId + " failed.",ioe)
T-708	LOG.warn("Promotion of block " + blockId + " failed.")
H-708	-0.1370910257101059	LOG.warn("Promotion of block " + blockId + " failed.",ioe)
D-708	-0.1370910257101059	LOG.warn("Promotion of block " + blockId + " failed.",ioe)
P-708	-0.0516 -0.0967 -0.2704 -0.0458 -0.5744 -0.0317 -0.0924 -0.0347 -0.0856 -0.0938 -0.3476 -0.0969 -0.0719 -0.0311 -0.0562 -0.1147 -0.3138 -0.0884 -0.1071
S-774	LOG.warn("Promotion of block " + blockId + " failed.",ioe)
T-774	LOG.warn("Promotion of block " + blockId + " failed.")
H-774	-0.1370910257101059	LOG.warn("Promotion of block " + blockId + " failed.",ioe)
D-774	-0.1370910257101059	LOG.warn("Promotion of block " + blockId + " failed.",ioe)
P-774	-0.0516 -0.0967 -0.2704 -0.0458 -0.5744 -0.0317 -0.0924 -0.0347 -0.0856 -0.0938 -0.3476 -0.0969 -0.0719 -0.0311 -0.0562 -0.1147 -0.3138 -0.0884 -0.1071
S-454	GatherGettersAndSetterProperties.update(compiler,externs,root)
T-454	GatherGetterAndSetterProperties.update(compiler,externs,root)
H-454	-0.0538332462310791	GatherGetterAndSetterProperties.update(compiler,externs,root)
D-454	-0.0538332462310791	GatherGetterAndSetterProperties.update(compiler,externs,root)
P-454	-0.0237 -0.0067 -0.0993 -0.0146 -0.0233 -0.0262 -0.1100 -0.0351 -0.1166 -0.0138 -0.0871 -0.0186 -0.0248 -0.0355 -0.0687 -0.0561 -0.1002 -0.1085
S-476	GatherGettersAndSetterProperties.update(compiler,externs,root)
T-476	GatherGetterAndSetterProperties.update(compiler,externs,root)
H-476	-0.0538332462310791	GatherGetterAndSetterProperties.update(compiler,externs,root)
D-476	-0.0538332462310791	GatherGetterAndSetterProperties.update(compiler,externs,root)
P-476	-0.0237 -0.0067 -0.0993 -0.0146 -0.0233 -0.0262 -0.1100 -0.0351 -0.1166 -0.0138 -0.0871 -0.0186 -0.0248 -0.0355 -0.0687 -0.0561 -0.1002 -0.1085
S-124	(outputFolder + File.separator + modelFolder).replaceAll("/",File.separator)
T-124	(outputFolder + File.separator + modelFolder).replace("/",File.separator)
H-124	-0.057078976184129715	(outputFolder + File.separator + modelFolder).replace("/",File.separator)
D-124	-0.057078976184129715	(outputFolder + File.separator + modelFolder).replace("/",File.separator)
P-124	-0.0461 -0.0258 -0.0228 -0.1016 -0.0351 -0.0896 -0.0442 -0.0967 -0.0321 -0.0249 -0.0477 -0.0705 -0.0247 -0.0511 -0.0445 -0.1039 -0.0467 -0.0738 -0.1026
S-218	AstUtils.hasLeastOneAnnotation(classNode,"MessageEndpoint","EnableIntegrationPatterns")
T-218	AstUtils.hasAtLeastOneAnnotation(classNode,"MessageEndpoint","EnableIntegrationPatterns")
H-218	-0.050323642790317535	AstUtils.hasAtLeastOneAnnotation(classNode,"MessageEndpoint","EnableIntegrationPatterns")
D-218	-0.050323642790317535	AstUtils.hasAtLeastOneAnnotation(classNode,"MessageEndpoint","EnableIntegrationPatterns")
P-218	-0.0294 -0.0356 -0.0881 -0.0595 -0.0044 -0.0472 -0.0375 -0.1198 -0.0532 -0.0450 -0.0483 -0.0250 -0.0257 -0.0684 -0.0240 -0.0299 -0.0287 -0.0892 -0.0973
S-441	assertEquals(1,historyService.createHistoricActivityInstanceQuery().finished().list().size())
T-441	assertEquals(3,historyService.createHistoricActivityInstanceQuery().finished().list().size())
H-441	-0.0553298220038414	assertEquals(3,historyService.createHistoricActivityInstanceQuery().finished().list().size())
D-441	-0.0553298220038414	assertEquals(3,historyService.createHistoricActivityInstanceQuery().finished().list().size())
P-441	-0.0561 -0.0281 -0.0390 -0.0400 -0.0990 -0.0532 -0.0519 -0.0228 -0.0372 -0.0383 -0.0421 -0.0716 -0.0173 -0.0595 -0.0616 -0.0676 -0.0580 -0.1060 -0.1018
S-554	(outputFolder + File.separator + apiFolder).replaceAll("/",File.separator)
T-554	(outputFolder + File.separator + apiFolder).replace("/",File.separator)
H-554	-0.05899019539356232	(outputFolder + File.separator + apiFolder).replace("/",File.separator)
D-554	-0.05899019539356232	(outputFolder + File.separator + apiFolder).replace("/",File.separator)
P-554	-0.0442 -0.0278 -0.0212 -0.1051 -0.0387 -0.0872 -0.0528 -0.0970 -0.0551 -0.0257 -0.0438 -0.0577 -0.0259 -0.0552 -0.0508 -0.1036 -0.0531 -0.0745 -0.1015
S-686	meta.setContentEncoding(Mimetypes.MIMETYPE_OCTET_STREAM)
T-686	meta.setContentType(Mimetypes.MIMETYPE_OCTET_STREAM)
H-686	-0.0759914219379425	meta.setContentType(Mimetypes.MIMETYPE_OCTET_STREAM)
D-686	-0.0759914219379425	meta.setContentType(Mimetypes.MIMETYPE_OCTET_STREAM)
P-686	-0.0952 -0.0891 -0.4092 -0.0018 -0.0855 -0.0346 -0.0262 -0.0369 -0.1100 -0.0375 -0.0313 -0.0921 -0.0304 -0.0165 -0.0257 -0.0893 -0.0199 -0.1058 -0.1069
S-582	endpointA.expectedBodiesReceived("A blue car!","A blue car, again!")
T-582	endpointA.expectedBodiesReceivedInAnyOrder("A blue car!","A blue car, again!")
H-582	-0.3031514585018158	endpointB.expectedBodiesReceived("A blue car!","A blue car, again!")
D-582	-0.3031514585018158	endpointB.expectedBodiesReceived("A blue car!","A blue car, again!")
P-582	-0.0553 -0.4104 -0.0874 -0.0288 -0.0149 -0.0151 -0.2035 -0.0759 -1.0092 -0.3703 -0.0666 -0.0310 -0.0947 -1.1244 -0.3411 -0.0779 -1.3830 -0.2678 -0.1025
S-382	config.getBroadcasterFactory().lookup(a.broadcaster(),true)
T-382	config.getBroadcasterFactory().lookup(a.broadcaster(),path,true)
H-382	-0.07018320262432098	config.getBroadcasterFactory().lookup(a.broadcaster(),path,true)
D-382	-0.07018320262432098	config.getBroadcasterFactory().lookup(a.broadcaster(),path,true)
P-382	-0.0618 -0.0895 -0.0562 -0.0310 -0.0238 -0.0254 -0.0348 -0.0714 -0.0534 -0.1138 -0.1324 -0.1058 -0.0283 -0.0285 -0.0157 -0.0721 -0.0736 -0.2031 -0.0284 -0.1174 -0.1075
S-535	GL20.glUniform2(location,toIntBuffer(v,offset,count << 1))
T-535	GL20.glUniform2iv(location,toIntBuffer(v,offset,count << 1))
H-535	-0.04855204373598099	GL20.glUniform2iv(location,toIntBuffer(v,offset,count << 1))
D-535	-0.04855204373598099	GL20.glUniform2iv(location,toIntBuffer(v,offset,count << 1))
P-535	-0.0387 -0.0171 -0.0215 -0.0312 -0.0591 -0.0367 -0.0727 -0.0249 -0.0778 -0.0563 -0.0415 -0.0279 -0.0816 -0.0300 -0.0909 -0.0271 -0.0968 -0.0402 -0.0251 -0.0134 -0.1091
S-710	config.getBroadcasterFactory().lookup(m.broadcaster(),true)
T-710	config.getBroadcasterFactory().lookup(m.broadcaster(),path,true)
H-710	-0.06402996182441711	config.getBroadcasterFactory().lookup(m.broadcaster(),path,true)
D-710	-0.06402996182441711	config.getBroadcasterFactory().lookup(m.broadcaster(),path,true)
P-710	-0.0620 -0.0902 -0.0547 -0.0321 -0.0236 -0.0242 -0.0347 -0.0719 -0.0569 -0.1123 -0.0760 -0.0931 -0.0248 -0.0286 -0.0171 -0.0829 -0.0297 -0.1727 -0.0244 -0.1259 -0.1067
S-721	new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange)
T-721	new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange,exchange.getException())
H-721	-0.057025376707315445	new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange,exchange.getException())
D-721	-0.057025376707315445	new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange,exchange.getException())
P-721	-0.0809 -0.0089 -0.0353 -0.0593 -0.0628 -0.0258 -0.0178 -0.0391 -0.0170 -0.0492 -0.0307 -0.0962 -0.0983 -0.0513 -0.0427 -0.0823 -0.0649 -0.1734 -0.0471 -0.0254 -0.0390 -0.0943 -0.0162 -0.1108
S-81	nlDataOutNodes != null & nlDataOutNodes.getLength() > 0
T-81	nlDataOutNodes != null && nlDataOutNodes.getLength() > 0
H-81	-0.06054064258933067	nlDataOutNodes != null && nlDataOutNodes.getLength() > 0
D-81	-0.06054064258933067	nlDataOutNodes != null && nlDataOutNodes.getLength() > 0
P-81	-0.0318 -0.0714 -0.0262 -0.0243 -0.0514 -0.0720 -0.0861 -0.0457 -0.0574 -0.0228 -0.0210 -0.1068 -0.0723 -0.0575 -0.0938 -0.0706 -0.0886 -0.0900
S-69	assertEquals(fStopwatch.runtime(MILLISECONDS),800d,250d)
T-69	assertEquals(800d,fStopwatch.runtime(MILLISECONDS),250d)
H-69	-0.2935892343521118	assertEquals800d,fStopwatch.runtime(MILLISECONDS))
D-69	-0.2935892343521118	assertEquals800d,fStopwatch.runtime(MILLISECONDS))
P-69	-0.0349 -0.3229 -0.0517 -0.1270 -0.3940 -0.0292 -0.0101 -0.0942 -0.0097 -0.1021 -0.0121 -0.0231 -2.7968 -0.1025
S-622	!WebSocketProtocolStream.class.isAssignableFrom(webSocketProtocol.getClass())
T-622	WebSocketProtocolStream.class.isAssignableFrom(webSocketProtocol.getClass())
H-622	-0.11424601078033447	!WebSocketProtocolStream.class.isAssignableFrom(webSocketProtocol.getClass())
D-622	-0.11424601078033447	!WebSocketProtocolStream.class.isAssignableFrom(webSocketProtocol.getClass())
P-622	-0.2331 -0.0124 -0.0446 -0.0278 -0.0823 -0.0504 -0.0953 -0.1058 -0.0370 -0.0474 -0.1268 -0.0205 -0.0114 -0.0340 -0.1012 -0.0282 -0.0849 -0.9134
S-194	new DefaultPropertyNamePatternsMatcher(delimeters,"aaa","bbbb","ccccc")
T-194	new DefaultPropertyNamePatternsMatcher(delimiters,"aaa","bbbb","ccccc")
H-194	-0.24393437802791595	new DefaultPropertyNamePatternsMatcher(delimeters,"aaa","bbbb","ccccc")
D-194	-0.24393437802791595	new DefaultPropertyNamePatternsMatcher(delimeters,"aaa","bbbb","ccccc")
P-194	-0.0792 -0.0232 -0.0085 -0.0280 -0.0257 -0.0978 -0.9718 -0.0245 -0.0456 -0.8488 -0.0503 -0.5959 -0.4148 -0.0444 -0.4146 -0.4430 -0.1709 -0.1039
S-305	removeBlockInternal(sessionId,blockId,BlockStoreLocation.anyTier())
T-305	removeBlock(sessionId,blockId,BlockStoreLocation.anyTier())
H-305	-0.08251306414604187	removeBlock(sessionId,blockId,BlockStoreLocation.anyTier())
D-305	-0.08251306414604187	removeBlock(sessionId,blockId,BlockStoreLocation.anyTier())
P-305	-0.0634 -0.0931 -0.2917 -0.0153 -0.1232 -0.1033 -0.0214 -0.1125 -0.1132 -0.0529 -0.0309 -0.0296 -0.1118 -0.0275 -0.0116 -0.0945 -0.1070
S-204	Math.min(RETRY_INTERVAL,timeout.timeLeft().toMillis())
T-204	Math.min(retryIntervalMillis,timeout.timeLeft().toMillis())
H-204	-0.07472293823957443	Math.min(retryIntervalMillis,timeout.timeLeft().toMillis())
D-204	-0.07472293823957443	Math.min(retryIntervalMillis,timeout.timeLeft().toMillis())
P-204	-0.0294 -0.1000 -0.2569 -0.0787 -0.0265 -0.0751 -0.0076 -0.1383 -0.0261 -0.0997 -0.0617 -0.0370 -0.0482 -0.0649 -0.0280 -0.0864 -0.1058
S-103	exchange.addRequestHeader(HttpHeaders.AUTHORIZATION,"OAuth " + currentToken)
T-103	exchange.setRequestHeader(HttpHeaders.AUTHORIZATION,"OAuth " + currentToken)
H-103	-0.06065063178539276	exchange.setRequestHeader(HttpHeaders.AUTHORIZATION,"OAuth " + currentToken)
D-103	-0.06065063178539276	exchange.setRequestHeader(HttpHeaders.AUTHORIZATION,"OAuth " + currentToken)
P-103	-0.0372 -0.0959 -0.1792 -0.0126 -0.0910 -0.0288 -0.0261 -0.1090 -0.0154 -0.0471 -0.0286 -0.0166 -0.0752 -0.0934 -0.0065 -0.0660 -0.1023
S-709	addKeys(externalClasses,DATE,"org.joda.time.LocalDate")
T-709	addKeys(externalClasses,DATE,"org.joda.time.LocalDate","java.time.LocalDate")
H-709	-0.06434088945388794	addKeys(externalClasses,DATE,"org.joda.time.LocalDate","java.time.LocalDate")
D-709	-0.06434088945388794	addKeys(externalClasses,DATE,"org.joda.time.LocalDate","java.time.LocalDate")
P-709	-0.0811 -0.0181 -0.1087 -0.0142 -0.0142 -0.1182 -0.0274 -0.0467 -0.0865 -0.1015 -0.0330 -0.0141 -0.0881 -0.0311 -0.0809 -0.0177 -0.0878 -0.0142 -0.1399 -0.0898 -0.0956 -0.0286 -0.1107 -0.0960
S-47	request.getContentType().equals("application/x-www-form-urlencoded")
T-47	request.getContentType().startsWith("application/x-www-form-urlencoded")
H-47	-0.06277099251747131	request.getContentType().startsWith("application/x-www-form-urlencoded")
D-47	-0.06277099251747131	request.getContentType().startsWith("application/x-www-form-urlencoded")
P-47	-0.0956 -0.0960 -0.0558 -0.0247 -0.0706 -0.0992 -0.0591 -0.0277 -0.0625 -0.0370 -0.0659 -0.0308 -0.0646 -0.0173 -0.0589 -0.0028 -0.1567 -0.1049
S-769	Nd4j.getAffinityManager().getDeviceForThread(Thread.currentThread())
T-769	Nd4j.getAffinityManager().getDeviceForCurrentThread()
H-769	-0.05279051512479782	Nd4j.getAffinityManager().getDeviceForCurrentThread()
D-769	-0.05279051512479782	Nd4j.getAffinityManager().getDeviceForCurrentThread()
P-769	-0.0049 -0.0417 -0.0171 -0.0848 -0.0598 -0.0201 -0.0429 -0.0637 -0.0754 -0.0603 -0.1162 -0.0582 -0.0187 -0.0188 -0.1090
S-174	factory.get(sResultWildcard,NO_ANNOTATIONS,retrofit)
T-174	factory.get(mResultWildcard,NO_ANNOTATIONS,retrofit)
H-174	-0.10266676545143127	factory.get(fResultWildcard,NO_ANNOTATIONS,retrofit)
D-174	-0.10266676545143127	factory.get(fResultWildcard,NO_ANNOTATIONS,retrofit)
P-174	-0.0336 -0.0989 -0.0527 -0.0965 -0.9178 -0.0206 -0.0195 -0.0819 -0.0310 -0.0862 -0.0189 -0.0129 -0.0231 -0.0931 -0.0453 -0.0145 -0.0926 -0.1091
S-301	assertEquals(5,AccessControlLists.getTablePermissions(conf,TEST_TABLE).size())
T-301	assertEquals(4,AccessControlLists.getTablePermissions(conf,TEST_TABLE).size())
H-301	-0.06548250466585159	assertEquals(4,AccessControlLists.getTablePermissions(conf,TEST_TABLE).size())
D-301	-0.06548250466585159	assertEquals(4,AccessControlLists.getTablePermissions(conf,TEST_TABLE).size())
P-301	-0.0450 -0.0467 -0.0039 -0.0230 -0.0953 -0.0475 -0.0765 -0.0346 -0.1009 -0.0273 -0.0804 -0.0685 -0.0999 -0.0434 -0.1254 -0.0711 -0.0816 -0.1077
S-656	Assert.assertEquals(masterAddress,new InetSocketAddress("RemoteMaster1",10000))
T-656	Assert.assertEquals(new InetSocketAddress("RemoteMaster1",10000),masterAddress)
H-656	-0.04736325889825821	Assert.assertEquals(new InetSocketAddress("RemoteMaster1",10000),masterAddress)
D-656	-0.04736325889825821	Assert.assertEquals(new InetSocketAddress("RemoteMaster1",10000),masterAddress)
P-656	-0.0348 -0.0937 -0.0455 -0.0481 -0.0891 -0.0328 -0.0167 -0.0085 -0.0496 -0.0418 -0.0283 -0.0156 -0.0239 -0.0650 -0.0232 -0.0538 -0.0814 -0.1006
S-718	logger.trace("Receive queue TAKE: Length={}",recvQueue.size())
T-718	logger.debug("Receive queue TAKE: Length={}",recvQueue.size())
H-718	-0.06164538487792015	logger.debug("Receive queue TAKE: Length={}",recvQueue.size())
D-718	-0.06164538487792015	logger.debug("Receive queue TAKE: Length={}",recvQueue.size())
P-718	-0.0381 -0.0947 -0.0935 -0.0628 -0.0214 -0.0763 -0.0306 -0.0074 -0.1322 -0.0291 -0.0134 -0.0243 -0.0225 -0.0476 -0.1204 -0.0488 -0.1393 -0.1070
S-766	warnings.append(LocalizationMessages.HINT_MSG(error.getMessage()))
T-766	hints.append(LocalizationMessages.HINT_MSG(error.getMessage()))
H-766	-0.11730187386274338	warnings.append(LocalizationMessages.HINT_MSG(error.getMessage()))
D-766	-0.11730187386274338	warnings.append(LocalizationMessages.HINT_MSG(error.getMessage()))
P-766	-0.9849 -0.0865 -0.0755 -0.0950 -0.0159 -0.0270 -0.0964 -0.0987 -0.0484 -0.0273 -0.0925 -0.0346 -0.0837 -0.0686 -0.0831 -0.0267 -0.0585 -0.1081
S-195	factory.get(sResponseWildcard,NO_ANNOTATIONS,retrofit)
T-195	factory.get(mResponseWildcard,NO_ANNOTATIONS,retrofit)
H-195	-0.09788082540035248	factory.get(fResponseWildcard,NO_ANNOTATIONS,retrofit)
D-195	-0.09788082540035248	factory.get(fResponseWildcard,NO_ANNOTATIONS,retrofit)
P-195	-0.0337 -0.0981 -0.0531 -0.0972 -0.8362 -0.0241 -0.0212 -0.0803 -0.0305 -0.0833 -0.0187 -0.0122 -0.0220 -0.0905 -0.0454 -0.0132 -0.0923 -0.1096
S-98	chain.filter(exchange).compose((call) -> filter(exchange,call))
T-98	chain.filter(exchange).transformDeferred((call) -> filter(exchange,call))
H-98	-0.06749945878982544	chain.filter(exchange).transformDeferred((call) -> filter(exchange,call))
D-98	-0.06749945878982544	chain.filter(exchange).transformDeferred((call) -> filter(exchange,call))
P-98	-0.0506 -0.0965 -0.0737 -0.0831 -0.0432 -0.0810 -0.0392 -0.0042 -0.0624 -0.0896 -0.0781 -0.0700 -0.0840 -0.0826 -0.0653 -0.0634 -0.0865 -0.0205 -0.1087
S-812	StringUtils.hasLength(secretQuestion) || StringUtils.hasLength(secretAnswer)
T-812	StringUtils.hasLength(secretQuestion) && StringUtils.hasLength(secretAnswer)
H-812	-0.0664522647857666	StringUtils.hasLength(secretQuestion) && StringUtils.hasLength(secretAnswer)
D-812	-0.0664522647857666	StringUtils.hasLength(secretQuestion) && StringUtils.hasLength(secretAnswer)
P-812	-0.0242 -0.0855 -0.0663 -0.0775 -0.0879 -0.0169 -0.0328 -0.0804 -0.1174 -0.0267 -0.0954 -0.0761 -0.0375 -0.1123 -0.0306 -0.0384 -0.0968 -0.0933
S-137	finishChannel(channel.getPipeline().getContext(NettyAsyncHttpProvider.class))
T-137	markChannelNotReadable(channel.getPipeline().getContext(NettyAsyncHttpProvider.class))
H-137	-0.14715982973575592	finishChannel(channel.getPipeline().getContext(NettyAsyncHttpProvider.class))
D-137	-0.14715982973575592	finishChannel(channel.getPipeline().getContext(NettyAsyncHttpProvider.class))
P-137	-1.6557 -0.0388 -0.1090 -0.0160 -0.1081 -0.0659 -0.0357 -0.0482 -0.0121 -0.0761 -0.0677 -0.0257 -0.0143 -0.0339 -0.0912 -0.0501 -0.0951 -0.1052
S-580	Class.forName(mUfsClz).getConstructor(String.class)
T-580	Class.forName(mUfsClz).getConstructor(String.class,TachyonConf.class)
H-580	-0.17547135055065155	Class.forName(mUfsClz).getConstructor()
D-580	-0.17547135055065155	Class.forName(mUfsClz).getConstructor()
P-580	-0.0608 -0.1031 -0.0786 -0.1179 -0.0300 -0.0242 -0.0125 -0.0548 -0.0481 -0.0705 -0.1351 -0.0183 -1.5968 -0.1059
S-438	createMessageConsumer(session,destinationName,messageSelector,true,null,true)
T-438	createMessageConsumer(session,destinationName,messageSelector,true,null)
H-438	-0.06524427980184555	createMessageConsumer(session,destinationName,messageSelector,true,null)
D-438	-0.06524427980184555	createMessageConsumer(session,destinationName,messageSelector,true,null)
P-438	-0.0237 -0.0207 -0.0947 -0.0287 -0.1044 -0.0397 -0.0552 -0.0899 -0.0343 -0.0248 -0.1550 -0.0386 -0.1061 -0.0546 -0.0628 -0.1108
S-186	logger.trace("Trying to map {} to {}",t,path)
T-186	logger.debug("Trying to map {} to {}",t,path)
H-186	-0.07583577185869217	logger.trace("Trying to map {} to {}",t,path)
D-186	-0.07583577185869217	logger.trace("Trying to map {} to {}",t,path)
P-186	-0.0380 -0.0919 -0.0094 -0.0613 -0.0541 -0.0432 -0.0886 -0.0446 -0.0345 -0.0836 -0.0356 -0.0498 -0.1053 -0.1566 -0.0678 -0.2153 -0.1098
S-351	triggerManager.getRules(CHANGE,item,newState,oldState)
T-351	triggerManager.getRules(CHANGE,item,oldState,newState)
H-351	-0.09532225131988525	triggerManager.getRules(CHANGE,item,newState,oldState)
D-351	-0.09532225131988525	triggerManager.getRules(CHANGE,item,newState,oldState)
P-351	-0.0461 -0.0342 -0.0969 -0.0640 -0.0385 -0.1212 -0.1355 -0.1170 -0.1554 -0.1496 -0.0541 -0.0589 -0.1805 -0.0554 -0.0967 -0.1106 -0.1059
S-547	ProcedureTestingUtility.waitNoProcedureRunning(master.getMasterProcedureExecutor())
T-547	ProcedureTestingUtility.waitAllProcedures(master.getMasterProcedureExecutor())
H-547	-0.061012886464595795	ProcedureTestingUtility.waitAllProcedures(master.getMasterProcedureExecutor())
D-547	-0.061012886464595795	ProcedureTestingUtility.waitAllProcedures(master.getMasterProcedureExecutor())
P-547	-0.0275 -0.0172 -0.0129 -0.0985 -0.0647 -0.1478 -0.0506 -0.0351 -0.0937 -0.0217 -0.0891 -0.0498 -0.0265 -0.0787 -0.0240 -0.0930 -0.1066
S-18	assertEquals(id3,new Twitter(id3,pass3).verifyCredentials().getName())
T-18	assertEquals(id1,new Twitter(id3,pass3).verifyCredentials().getName())
H-18	-0.05689210072159767	assertEquals(id1,new Twitter(id3,pass3).verifyCredentials().getName())
D-18	-0.05689210072159767	assertEquals(id1,new Twitter(id3,pass3).verifyCredentials().getName())
P-18	-0.0492 -0.0965 -0.0668 -0.0262 -0.0238 -0.0252 -0.0827 -0.0679 -0.0777 -0.0347 -0.0205 -0.0597 -0.0327 -0.0649 -0.0164 -0.1213 -0.1010
S-713	assertEquals(model.getProperties().get(NAME).getType(),"string")
T-713	assertEquals("string",model.getProperties().get(NAME).getType())
H-713	-0.06028567999601364	assertEquals("string",model.getProperties().get(NAME).getType())
D-713	-0.06028567999601364	assertEquals("string",model.getProperties().get(NAME).getType())
P-713	-0.0393 -0.0383 -0.0413 -0.0716 -0.0193 -0.0995 -0.0628 -0.0370 -0.0604 -0.0847 -0.1003 -0.0437 -0.0664 -0.0234 -0.0674 -0.1092
S-704	assertThat(page1reverse.pagination().getGlobalTotal()).isEqualTo(7)
T-704	assertThat(page1reverse.pagination().getGlobalTotal()).isEqualTo(5)
H-704	-0.05322931706905365	assertThat(page1reverse.pagination().getGlobalTotal()).isEqualTo(5)
D-704	-0.05322931706905365	assertThat(page1reverse.pagination().getGlobalTotal()).isEqualTo(5)
P-704	-0.0354 -0.0950 -0.0317 -0.0920 -0.0240 -0.1118 -0.0166 -0.0679 -0.0541 -0.0534 -0.0369 -0.0395 -0.0599 -0.0063 -0.0218 -0.1053
S-385	new CompilerException(sourceName,e.line,e.getCause())
T-385	new CompilerException(sourcePath,e.line,e.getCause())
H-385	-0.06780955940485	new CompilerException(sourceName,e.line,e.getCause())
D-385	-0.06780955940485	new CompilerException(sourceName,e.line,e.getCause())
P-385	-0.0756 -0.0183 -0.0344 -0.0877 -0.0536 -0.0480 -0.0947 -0.0397 -0.1053 -0.0773 -0.1200 -0.0461 -0.1017 -0.0450 -0.0065 -0.0893 -0.1098
S-314	getBooleanValue(ASYNC_CLIENT + "acceptAnyCertificate",false)
T-314	getBoolean(ASYNC_CLIENT + "acceptAnyCertificate",false)
H-314	-0.0761188343167305	getBoolean(ASYNC_CLIENT + "acceptAnyCertificate",false)
D-314	-0.0761188343167305	getBoolean(ASYNC_CLIENT + "acceptAnyCertificate",false)
P-314	-0.0698 -0.0999 -0.0646 -0.0416 -0.0364 -0.0965 -0.0576 -0.1211 -0.0956 -0.0367 -0.0409 -0.0227 -0.1759 -0.0418 -0.1090 -0.1078
S-677	log.debug("Unexpected exception on closing transaction. Cause: " + e)
T-677	log.warn("Unexpected exception on closing transaction. Cause: " + e)
H-677	-0.08104542642831802	log.warn("Unexpected exception on closing transaction. Cause: " + e)
D-677	-0.08104542642831802	log.warn("Unexpected exception on closing transaction. Cause: " + e)
P-677	-0.0724 -0.0954 -0.2526 -0.0531 -0.0166 -0.0706 -0.0383 -0.0225 -0.0373 -0.0911 -0.0195 -0.0943 -0.0731 -0.0823 -0.1718 -0.0844 -0.1023
S-723	waitUntil(() -> clusterManager.getNodes().size() == 2,30_000)
T-723	waitUntil(() -> clusterManager.getNodes().size() == 2,60_000)
H-723	-0.05070129781961441	waitUntil(() -> clusterManager.getNodes().size() == 2,60_000)
D-723	-0.05070129781961441	waitUntil(() -> clusterManager.getNodes().size() == 2,60_000)
P-723	-0.0075 -0.0259 -0.0380 -0.0433 -0.0437 -0.0845 -0.0463 -0.0516 -0.0697 -0.0570 -0.0770 -0.0342 -0.0454 -0.0177 -0.0750 -0.0513 -0.0939
S-777	LOG.warn("Failed to get mount information: {}",e.getMessage())
T-777	LOG.debug("Failed to get mount information: {}",e.getMessage())
H-777	-0.09135241061449051	LOG.debug("Failed to get mount information: {}",e.getMessage())
D-777	-0.09135241061449051	LOG.debug("Failed to get mount information: {}",e.getMessage())
P-777	-0.0467 -0.0956 -0.3104 -0.0552 -0.0692 -0.0600 -0.1073 -0.0341 -0.0278 -0.1258 -0.0554 -0.0600 -0.1357 -0.1035 -0.0356 -0.1260 -0.1046
S-796	logger.debug("Trying to map {} to {}",t,path)
T-796	logger.trace("Trying to map {} to {}",t,path)
H-796	-0.061663590371608734	logger.trace("Trying to map {} to {}",t,path)
D-796	-0.061663590371608734	logger.trace("Trying to map {} to {}",t,path)
P-796	-0.0430 -0.0909 -0.0376 -0.0593 -0.0518 -0.0404 -0.0832 -0.0404 -0.0381 -0.0795 -0.0461 -0.0481 -0.0321 -0.0955 -0.0425 -0.1140 -0.1059
S-626	serializer.serializeServerFailure(ctx.alloc(),new RuntimeException(msg))
T-626	MessageSerializer.serializeServerFailure(ctx.alloc(),new RuntimeException(msg))
H-626	-0.0798804834485054	serializer.serializeServerFailure(ctx.alloc(),new RuntimeException(msg))
D-626	-0.0798804834485054	serializer.serializeServerFailure(ctx.alloc(),new RuntimeException(msg))
P-626	-0.0797 -0.1094 -0.0736 -0.1342 -0.0429 -0.0735 -0.0272 -0.1073 -0.0145 -0.0748 -0.0815 -0.0405 -0.0463 -0.1035 -0.0268 -0.2144 -0.1078
S-683	addGroupedInterceptor(filter,interceptorClassName,group,executionPolicy)
T-683	addGroupedInterceptor(filter,interceptorClassName,null,group,executionPolicy)
H-683	-0.1003030315041542	addGroupedInterceptor(filter,interceptorClassName,null,group,executionPolicy)
D-683	-0.1003030315041542	addGroupedInterceptor(filter,interceptorClassName,null,group,executionPolicy)
P-683	-0.0654 -0.0328 -0.0323 -0.0230 -0.1190 -0.0319 -0.0902 -0.0252 -0.0169 -0.0622 -0.1169 -0.0090 -0.7943 -0.0499 -0.1922 -0.0115 -0.0437 -0.0819 -0.1077
S-797	endFunction("write_partition_column_statistics: ",ret != false)
T-797	endFunction("write_partition_column_statistics: ",ret != false,null)
H-797	-0.06098577380180359	endFunction("write_partition_column_statistics: ",ret != false,null)
D-797	-0.06098577380180359	endFunction("write_partition_column_statistics: ",ret != false,null)
P-797	-0.0273 -0.0396 -0.0642 -0.0468 -0.1011 -0.0150 -0.1017 -0.0818 -0.0792 -0.0107 -0.0954 -0.0373 -0.0186 -0.0615 -0.0250 -0.1157 -0.0136 -0.1052 -0.1190
S-246	dir.isDirectory() && !"target".equals(dir.getName())
T-246	dir.isDirectory() && !"target".equals(dir.getName()) && !dir.getName().startsWith(".")
H-246	-0.2684909701347351	dir.isDirectory() && !"target".equals(dir.getName())
D-246	-0.2684909701347351	dir.isDirectory() && !"target".equals(dir.getName())
P-246	-2.9254 -0.0798 -0.0506 -0.0446 -0.0688 -0.0902 -0.0197 -0.0418 -0.0165 -0.1077 -0.0642 -0.0873 -0.0837 -0.0967 -0.0337 -0.1329 -0.6208
S-742	start.set(Calendar.DAY_OF_MONTH,startMonth)
T-742	start.set(Calendar.DAY_OF_MONTH,startDay)
H-742	-0.06724212318658829	start.set(Calendar.DAY_OF_MONTH,startDay)
D-742	-0.06724212318658829	start.set(Calendar.DAY_OF_MONTH,startDay)
P-742	-0.0465 -0.0929 -0.0850 -0.0928 -0.0289 -0.0956 -0.0172 -0.0861 -0.0424 -0.0893 -0.0240 -0.1163 -0.0411 -0.0101 -0.1029 -0.1047
S-823	executor.scheduleWithFixedDelay(this,period,period,unit)
T-823	executor.scheduleAtFixedRate(this,period,period,unit)
H-823	-0.06311573833227158	executor.scheduleAtFixedRate(this,period,period,unit)
D-823	-0.06311573833227158	executor.scheduleAtFixedRate(this,period,period,unit)
P-823	-0.0162 -0.0982 -0.0261 -0.0178 -0.0077 -0.0137 -0.1248 -0.1399 -0.0996 -0.0179 -0.0857 -0.0136 -0.0915 -0.0675 -0.0848 -0.1049
S-632	LOG.error("OpenTracing: Failed to capture tracing data",t)
T-632	LOG.warn("OpenTracing: Failed to capture tracing data",t)
H-632	-0.05378146842122078	LOG.warn("OpenTracing: Failed to capture tracing data",t)
D-632	-0.05378146842122078	LOG.warn("OpenTracing: Failed to capture tracing data",t)
P-632	-0.0455 -0.1009 -0.0230 -0.0601 -0.0369 -0.0169 -0.0890 -0.0266 -0.0638 -0.0174 -0.0182 -0.0794 -0.0459 -0.0407 -0.0892 -0.1072
S-786	registerConsumer(newUUIDString(),newUUIDString(),owner,attributes)
T-786	registerConsumer(owner,newUUIDString(),newUUIDString(),attributes)
H-786	-0.0634990930557251	registerConsumer(owner,newUUIDString(),newUUIDString(),attributes)
D-786	-0.0634990930557251	registerConsumer(owner,newUUIDString(),newUUIDString(),attributes)
P-786	-0.0444 -0.0325 -0.1198 -0.0216 -0.1090 -0.0439 -0.0422 -0.0638 -0.0555 -0.0464 -0.0317 -0.0634 -0.0777 -0.0364 -0.1171 -0.1104
S-565	NodeTraversal.traverseEs6(compiler,originalRoot,this)
T-565	NodeTraversal.traverseEs6(compiler,scriptRoot,this)
H-565	-0.055164121091365814	NodeTraversal.traverseEs6(compiler,scriptRoot,this)
D-565	-0.055164121091365814	NodeTraversal.traverseEs6(compiler,scriptRoot,this)
P-565	-0.0277 -0.0095 -0.0959 -0.0222 -0.0309 -0.0188 -0.0273 -0.1432 -0.0117 -0.1360 -0.0068 -0.0289 -0.0921 -0.0335 -0.0968 -0.1015
S-237	ALIAS.addResourceAttributeDescription(resources,keyPrefix,container)
T-237	ALIASES.addResourceAttributeDescription(resources,keyPrefix,container)
H-237	-0.05641354247927666	ALIASES.addResourceAttributeDescription(resources,keyPrefix,container)
D-237	-0.05641354247927666	ALIASES.addResourceAttributeDescription(resources,keyPrefix,container)
P-237	-0.0072 -0.0198 -0.1128 -0.0935 -0.0379 -0.0531 -0.0317 -0.0488 -0.0862 -0.0281 -0.0737 -0.0287 -0.0328 -0.0771 -0.0251 -0.1023 -0.1003
S-675	Utils.deserialize(_boltSer,IBatchBolt.class)
T-675	Utils.javaDeserialize(_boltSer,IBatchBolt.class)
H-675	-0.04793759435415268	Utils.javaDeserialize(_boltSer,IBatchBolt.class)
D-675	-0.04793759435415268	Utils.javaDeserialize(_boltSer,IBatchBolt.class)
P-675	-0.0197 -0.0915 -0.0227 -0.0240 -0.0630 -0.0388 -0.0104 -0.0263 -0.0785 -0.0329 -0.0621 -0.0252 -0.0131 -0.0867 -0.0409 -0.0796 -0.0996
S-199	new DynamicAwareEntry("https://localhost/test",null,null)
T-199	new DynamicAwareEntry("https://localhost/test",null,null,null)
H-199	-0.0582975335419178	new DynamicAwareEntry("https://localhost/test",null,null,null)
D-199	-0.0582975335419178	new DynamicAwareEntry("https://localhost/test",null,null,null)
P-199	-0.0752 -0.0154 -0.0175 -0.0456 -0.0472 -0.0269 -0.0245 -0.0172 -0.0670 -0.0653 -0.0647 -0.0268 -0.1168 -0.0377 -0.1690 -0.0243 -0.1012 -0.1070
S-706	new DynamicAwareEntry("http://localhost:8080/test",null,null)
T-706	new DynamicAwareEntry("http://localhost:8080/test",null,null,null)
H-706	-0.05813029035925865	new DynamicAwareEntry("http://localhost:8080/test",null,null,null)
D-706	-0.05813029035925865	new DynamicAwareEntry("http://localhost:8080/test",null,null,null)
P-706	-0.0780 -0.0172 -0.0165 -0.0447 -0.0470 -0.0293 -0.0213 -0.0207 -0.0100 -0.1017 -0.0683 -0.0298 -0.1129 -0.0404 -0.1665 -0.0288 -0.1046 -0.1086
S-471	executor.scheduleWithFixedDelay(this,period,period,unit)
T-471	executor.scheduleAtFixedRate(this,period,period,unit)
H-471	-0.06311573833227158	executor.scheduleAtFixedRate(this,period,period,unit)
D-471	-0.06311573833227158	executor.scheduleAtFixedRate(this,period,period,unit)
P-471	-0.0162 -0.0982 -0.0261 -0.0178 -0.0077 -0.0137 -0.1248 -0.1399 -0.0996 -0.0179 -0.0857 -0.0136 -0.0915 -0.0675 -0.0848 -0.1049
S-567	/** * {@inheritDoc} */ @Override public AtmosphereResource addAtmosphereResource(AtmosphereResource r){ try { if (destroyed.get()) { logger.debug(DESTROYED,getID(),"addAtmosphereResource(AtmosphereResource<?, ?> r"); return r; } start(); if (scope == SCOPE.REQUEST && requestScoped.getAndSet(true)) { throw new IllegalStateException("Broadcaster " + this + " cannot be used as its scope is set to REQUEST"); } if (maxSuspendResource.get() > 0 && resources.size() >= maxSuspendResource.get()) { if (policy == POLICY.FIFO) { AtmosphereResource resource=resources.poll(); try { logger.warn("Too many resource. Forcing resume of {} ",resource); resource.resume(); } catch ( Throwable t) { logger.warn("failed to resume resource {} ",resource,t); } } else if (policy == POLICY.REJECT) { throw new RejectedExecutionException(String.format("Maximum suspended AtmosphereResources %s",maxSuspendResource)); } } if (resources.contains(r)) { return r; } synchronized (concurrentSuspend
T-567	/** * {@inheritDoc} */ @Override public Broadcaster addAtmosphereResource(AtmosphereResource r){ try { if (destroyed.get()) { logger.debug(DESTROYED,getID(),"addAtmosphereResource(AtmosphereResource<?, ?> r"); return r; } start(); if (scope == SCOPE.REQUEST && requestScoped.getAndSet(true)) { throw new IllegalStateException("Broadcaster " + this + " cannot be used as its scope is set to REQUEST"); } if (maxSuspendResource.get() > 0 && resources.size() >= maxSuspendResource.get()) { if (policy == POLICY.FIFO) { AtmosphereResource resource=resources.poll(); try { logger.warn("Too many resource. Forcing resume of {} ",resource); resource.resume(); } catch ( Throwable t) { logger.warn("failed to resume resource {} ",resource,t); } } else if (policy == POLICY.REJECT) { throw new RejectedExecutionException(String.format("Maximum suspended AtmosphereResources %s",maxSuspendResource)); } } if (resources.contains(r)) { return r; } synchronized (concurrentSuspendBroadcast
H-567	-0.12025777250528336	/** * {@inheritDoc} */ @Override public Broadcaster addAtmosphereResource(AtmosphereResource r){ try { if (destroyed.get()) { logger.debug(DESTROYED,getID(),"addAtmosphereResource(AtmosphereResource<?, ?> r"); return r; } start(); if (scope == SCOPE.REQUEST && requestScoped.getAndSet(true)) { throw new IllegalStateException("Broadcaster " + this + " cannot be used as its scope is set to REQUEST"); } if (maxSuspendResource.get() > 0 && resources.size() >= maxSuspendResource.get()) { if (policy == POLICY.FIFO) { AtmosphereResource resource=resources.poll(); try { logger.warn("Too many resource. Forcing resume of {} ",resource); resource.resume(); } catch ( Throwable t) { logger.warn("failed to resume resource {} ",resource,t); } }
D-567	-0.12025777250528336	/** * {@inheritDoc} */ @Override public Broadcaster addAtmosphereResource(AtmosphereResource r){ try { if (destroyed.get()) { logger.debug(DESTROYED,getID(),"addAtmosphereResource(AtmosphereResource<?, ?> r"); return r; } start(); if (scope == SCOPE.REQUEST && requestScoped.getAndSet(true)) { throw new IllegalStateException("Broadcaster " + this + " cannot be used as its scope is set to REQUEST"); } if (maxSuspendResource.get() > 0 && resources.size() >= maxSuspendResource.get()) { if (policy == POLICY.FIFO) { AtmosphereResource resource=resources.poll(); try { logger.warn("Too many resource. Forcing resume of {} ",resource); resource.resume(); } catch ( Throwable t) { logger.warn("failed to resume resource {} ",resource,t); } }
P-567	-0.0187 -0.0714 -0.0157 -0.0290 -0.0223 -0.0763 -0.0308 -0.0515 -0.0382 -0.0562 -0.1573 -0.0113 -0.0187 -0.1125 -0.0747 -0.0506 -0.0426 -0.0807 -0.0940 -0.0536 -0.0339 -0.0266 -0.0649 -0.0689 -0.0610 -0.0996 -0.0931 -0.0990 -0.1208 -0.0268 -0.0616 -0.0896 -0.0810 -0.0711 -0.1450 -0.0307 -0.1080 -0.0782 -0.0983 -0.0198 -0.0208 -0.0250 -0.0338 -0.0802 -0.0450 -0.0444 -0.0745 -0.1185 -0.0327 -0.0579 -0.0507 -0.0493 -0.0802 -0.1032 -0.0561 -0.0418 -0.0482 -0.0712 -0.0111 -0.1064 -0.0481 -0.0665 -0.0936 -0.0533 -0.0505 -0.0628 -0.0867 -0.0250 -0.0297 -0.0565 -0.1096 -0.0406 -0.0426 -0.0397 -0.0967 -0.0353 -0.0337 -0.0359 -0.0161 -0.0914 -0.0783 -0.0221 -0.0884 -0.0496 -0.0353 -0.1279 -0.0616 -0.0980 -0.0063 -0.0573 -0.0489 -0.0106 -0.0231 -0.0077 -0.1010 -0.0959 -0.1114 -0.1057 -0.0875 -0.0247 -0.0614 -0.0760 -0.1296 -0.0420 -0.0277 -0.0697 -0.0555 -0.0875 -0.0822 -0.0502 -0.0858 -0.0744 -0.0900 -0.0975 -0.0642 -0.0913 -0.1358 -0.0637 -0.0781 -0.0495 -0.0446 -0.0306 -0.1656 -0.1158 -0.0608 -0.0664 -0.0571 -0.0277 -0.0501 -0.0730 -0.1021 -0.0553 -0.0764 -0.0727 -0.0710 -0.1008 -0.0881 -0.0520 -0.0519 -0.0326 -0.0897 -0.0275 -0.0294 -0.0486 -0.0703 -0.0433 -0.0350 -0.0265 -0.0836 -0.0446 -0.0506 -0.0559 -0.1032 -0.0086 -0.0364 -0.0906 -0.0889 -0.0331 -0.0906 -0.0470 -0.0381 -0.0695 -0.0873 -0.0633 -0.0890 -0.0500 -0.0089 -0.1145 -0.0924 -0.0238 -0.0822 -0.0678 -0.0473 -0.1126 -0.0904 -0.0989 -0.0464 -0.0739 -0.0630 -0.0831 -0.0755 -0.0584 -0.0572 -0.1028 -0.0337 -0.0919 -0.0232 -0.0382 -0.0400 -0.0733 -0.1412 -0.0808 -0.0292 -0.0848 -0.0672 -0.0696 -0.0361 -0.0497 -0.0651 -0.0346 -11.4163
S-258	public abstract class AbstractHikariConfig implements HikariConfigMBean { private static final Logger LOGGER=LoggerFactory.getLogger(HikariConfig.class); private static final long CONNECTION_TIMEOUT=TimeUnit.SECONDS.toMillis(30); private static final long VALIDATION_TIMEOUT=TimeUnit.SECONDS.toMillis(5); private static final long IDLE_TIMEOUT=TimeUnit.MINUTES.toMillis(10); private static final long MAX_LIFETIME=TimeUnit.MINUTES.toMillis(30); private static int poolNumber; private static boolean unitTest; private volatile long connectionTimeout; private volatile long validationTimeout; private volatile long idleTimeout; private volatile long leakDetectionThreshold; private volatile long maxLifetime; private volatile int maxPoolSize; private volatile int minIdle; private String catalog; private String connectionCustomizerClassName; private String connectionInitSql; private String connectionTestQuery; private String dataSourceClassName; private String dataSourceJndiName; private String driverClassName; private String jdbcUrl; private String password; private String poolName; private String transactionIsolationName; private String username; private boolean isAutoCommit; private boolean isReadOnly; private boolean isInitializationFailFast; private boolean isIsolateInternalQueries; private boolean isRegisterMbeans; private
T-258	public abstract class AbstractHikariConfig implements HikariConfigMXBean { private static final Logger LOGGER=LoggerFactory.getLogger(HikariConfig.class); private static final long CONNECTION_TIMEOUT=TimeUnit.SECONDS.toMillis(30); private static final long VALIDATION_TIMEOUT=TimeUnit.SECONDS.toMillis(5); private static final long IDLE_TIMEOUT=TimeUnit.MINUTES.toMillis(10); private static final long MAX_LIFETIME=TimeUnit.MINUTES.toMillis(30); private static int poolNumber; private static boolean unitTest; private volatile long connectionTimeout; private volatile long validationTimeout; private volatile long idleTimeout; private volatile long leakDetectionThreshold; private volatile long maxLifetime; private volatile int maxPoolSize; private volatile int minIdle; private String catalog; private String connectionCustomizerClassName; private String connectionInitSql; private String connectionTestQuery; private String dataSourceClassName; private String dataSourceJndiName; private String driverClassName; private String jdbcUrl; private String password; private String poolName; private String transactionIsolationName; private String username; private boolean isAutoCommit; private boolean isReadOnly; private boolean isInitializationFailFast; private boolean isIsolateInternalQueries; private boolean isRegisterMbeans; private
H-258	-0.1411755084991455	public abstract class AbstractHikariConfig implements HikariConfigMXBean { private static final Logger LOGGER=LoggerFactory.getLogger(HikariConfig.class); private static final long CONNECTION_TIMEOUT=TimeUnit.SECONDS.toMillis(30); private static final long VALIDATION_TIMEOUT=TimeUnit.SECONDS.toMillis(5); private static final long IDLE_TIMEOUT=TimeUnit.MINUTES.toMillis(10); private static final long MAX_LIFETIME=TimeUnit.MINUTES.toMillis(30); private static int poolNumber; private static boolean unitTest; private volatile long connectionTimeout; private volatile long validationTimeout; private volatile long idleTimeout; private volatile long leakDetectionThreshold; private volatile long maxLifetime; private volatile int maxPoolSize; private volatile int minIdle; private String catalog; private String connectionCustomizerClassName; private String connectionInitSql; private String connectionTestQuery; private String dataSourceClassName; private String dataSourceJndiName; private String driverClassName; private
D-258	-0.1411755084991455	public abstract class AbstractHikariConfig implements HikariConfigMXBean { private static final Logger LOGGER=LoggerFactory.getLogger(HikariConfig.class); private static final long CONNECTION_TIMEOUT=TimeUnit.SECONDS.toMillis(30); private static final long VALIDATION_TIMEOUT=TimeUnit.SECONDS.toMillis(5); private static final long IDLE_TIMEOUT=TimeUnit.MINUTES.toMillis(10); private static final long MAX_LIFETIME=TimeUnit.MINUTES.toMillis(30); private static int poolNumber; private static boolean unitTest; private volatile long connectionTimeout; private volatile long validationTimeout; private volatile long idleTimeout; private volatile long leakDetectionThreshold; private volatile long maxLifetime; private volatile int maxPoolSize; private volatile int minIdle; private String catalog; private String connectionCustomizerClassName; private String connectionInitSql; private String connectionTestQuery; private String dataSourceClassName; private String dataSourceJndiName; private String driverClassName; private
P-258	-0.0668 -0.0139 -0.0817 -0.0349 -0.0379 -0.0297 -0.0477 -0.0265 -0.0749 -0.0334 -0.0532 -0.1531 -0.1066 -0.0569 -0.0451 -0.0538 -0.0553 -0.0077 -0.0415 -0.0232 -0.0405 -0.0929 -0.0226 -0.0740 -0.0535 -0.0449 -0.0539 -0.1121 -0.0637 -0.0670 -0.0523 -0.0768 -0.0675 -0.0682 -0.0787 -0.0951 -0.0466 -0.0593 -0.0616 -0.0566 -0.1055 -0.0208 -0.1002 -0.0872 -0.0344 -0.1475 -0.1181 -0.1163 -0.0644 -0.0768 -0.0713 -0.0804 -0.0376 -0.0390 -0.1059 -0.0562 -0.0667 -0.0601 -0.0773 -0.1122 -0.0388 -0.1032 -0.1106 -0.0300 -0.0340 -0.0576 -0.0618 -0.0736 -0.0671 -0.1058 -0.0285 -0.1183 -0.0369 -0.0474 -0.0494 -0.0600 -0.1121 -0.0405 -0.0171 -0.1079 -0.1368 -0.0325 -0.0698 -0.0478 -0.0810 -0.0808 -0.0938 -0.0427 -0.0828 -0.0100 -0.0315 -0.0258 -0.0465 -0.0508 -0.0612 -0.1175 -0.0340 -0.0325 -0.1063 -0.1035 -0.0270 -0.1087 -0.1093 -0.0919 -0.0510 -0.0677 -0.0653 -0.0167 -0.0601 -0.0473 -0.0480 -0.0602 -0.0598 -0.0825 -0.0854 -0.0538 -0.0325 -0.0444 -0.0646 -0.0284 -0.0553 -0.0835 -0.0606 -0.0496 -0.0422 -0.0483 -0.0530 -0.0738 -0.0477 -0.0391 -0.0640 -0.0267 -0.0355 -0.0600 -0.0529 -0.0385 -0.0575 -0.0075 -0.0161 -0.0282 -0.0699 -0.0480 -0.0436 -0.0657 -0.0456 -0.0426 -0.0114 -0.0785 -0.0597 -0.0337 -0.1000 -0.0532 -0.0083 -0.0814 -0.0627 -0.0209 -0.0660 -0.0296 -0.0124 -0.0838 -0.0525 -0.0808 -0.0120 -0.1147 -0.0551 -0.0848 -0.0483 -0.0082 -0.1087 -0.0684 -0.0474 -0.0780 -0.0311 -0.0338 -0.0280 -0.0704 -0.0495 -0.0916 -0.0361 -0.0573 -0.0415 -0.0636 -0.0588 -0.0839 -0.0733 -0.1129 -0.0736 -0.0668 -0.1269 -0.0471 -0.0314 -0.0147 -0.0604 -0.0700 -0.0633 -0.0845 -0.0459 -0.1017 -0.0758 -0.0581 -16.2064
S-8	/** * This is the primary connection pool class that provides the basic pooling behavior for HikariCP. * @author Brett Wooldridge */ public abstract class BaseHikariPool implements HikariPoolMBean, IBagStateListener { protected final Logger LOGGER=LoggerFactory.getLogger(getClass()); private static final long ALIVE_BYPASS_WINDOW=Long.getLong("com.zaxxer.hikari.aliveBypassWindow",1000L); protected static final int POOL_RUNNING=0; protected static final int POOL_SUSPENDED=1; protected static final int POOL_SHUTDOWN=2; public final String catalog; public final boolean isReadOnly; public final boolean isAutoCommit; public int transactionIsolation; protected final PoolUtilities poolUtils; protected final HikariConfig configuration; protected final AtomicInteger totalConnections; protected final ConcurrentBag<PoolBagEntry> connectionBag; protected final ThreadPoolExecutor addConnectionExecutor; protected final ThreadPoolExecutor closeConnectionExecutor; protected final ScheduledThreadPoolExecutor houseKeepingExecutorService; protected final boolean isUseJdbc4Validation; protected final boolean isIsolateInternalQueries; protected volatile int poolState; protected volatile long connectionTimeout; protected volatile long validationTimeout; private final LeakTask leakTask; private final DataSource
T-8	/** * This is the primary connection pool class that provides the basic pooling behavior for HikariCP. * @author Brett Wooldridge */ public abstract class BaseHikariPool implements HikariPoolMXBean, IBagStateListener { protected final Logger LOGGER=LoggerFactory.getLogger(getClass()); private static final long ALIVE_BYPASS_WINDOW=Long.getLong("com.zaxxer.hikari.aliveBypassWindow",1000L); protected static final int POOL_RUNNING=0; protected static final int POOL_SUSPENDED=1; protected static final int POOL_SHUTDOWN=2; public final String catalog; public final boolean isReadOnly; public final boolean isAutoCommit; public int transactionIsolation; protected final PoolUtilities poolUtils; protected final HikariConfig configuration; protected final AtomicInteger totalConnections; protected final ConcurrentBag<PoolBagEntry> connectionBag; protected final ThreadPoolExecutor addConnectionExecutor; protected final ThreadPoolExecutor closeConnectionExecutor; protected final ScheduledThreadPoolExecutor houseKeepingExecutorService; protected final boolean isUseJdbc4Validation; protected final boolean isIsolateInternalQueries; protected volatile int poolState; protected volatile long connectionTimeout; protected volatile long validationTimeout; private final LeakTask leakTask; private final DataSource
H-8	-0.12684941291809082	/** * This is the primary connection pool class that provides the basic pooling behavior for HikariCP. * @author Brett Wooldridge */ public abstract class BaseHikariPool implements HikariPoolMXBean, IBagStateListener { protected final Logger LOGGER=LoggerFactory.getLogger(getClass()); private static final long ALIVE_BYPASS_WINDOW=Long.getLong("com.zaxxer.hikari.aliveBypassWindow",1000L); protected static final int POOL_RUNNING=0; protected static final int POOL_SUSPENDED=1; protected static final int POOL_SHUTDOWN=2; public final String catalog; public final boolean isReadOnly; public final boolean isAutoCommit; public int transactionIsolation; protected final PoolUtilities poolUtils; protected final HikariConfig configuration; protected final AtomicInteger totalConnections; protected final ConcurrentBag<PoolBagEntry> connectionBag; protected final ThreadPoolExecutor addConnectionExecutor; protected final ThreadPoolExecutor closeConnectionExecutor; protected
D-8	-0.12684941291809082	/** * This is the primary connection pool class that provides the basic pooling behavior for HikariCP. * @author Brett Wooldridge */ public abstract class BaseHikariPool implements HikariPoolMXBean, IBagStateListener { protected final Logger LOGGER=LoggerFactory.getLogger(getClass()); private static final long ALIVE_BYPASS_WINDOW=Long.getLong("com.zaxxer.hikari.aliveBypassWindow",1000L); protected static final int POOL_RUNNING=0; protected static final int POOL_SUSPENDED=1; protected static final int POOL_SHUTDOWN=2; public final String catalog; public final boolean isReadOnly; public final boolean isAutoCommit; public int transactionIsolation; protected final PoolUtilities poolUtils; protected final HikariConfig configuration; protected final AtomicInteger totalConnections; protected final ConcurrentBag<PoolBagEntry> connectionBag; protected final ThreadPoolExecutor addConnectionExecutor; protected final ThreadPoolExecutor closeConnectionExecutor; protected
P-8	-0.0315 -0.0846 -0.0400 -0.0988 -0.0662 -0.0378 -0.0350 -0.0339 -0.1059 -0.0986 -0.0603 -0.0915 -0.0198 -0.0390 -0.0295 -0.0617 -0.0397 -0.0254 -0.0086 -0.0817 -0.0803 -0.0281 -0.0284 -0.0296 -0.0100 -0.0241 -0.0410 -0.0130 -0.0276 -0.0137 -0.0246 -0.0466 -0.0190 -0.0440 -0.0118 -0.0412 -0.0288 -0.0491 -0.0290 -0.0820 -0.0293 -0.0483 -0.1883 -0.0754 -0.1230 -0.0062 -0.0358 -0.0248 -0.0593 -0.0642 -0.0638 -0.0403 -0.0038 -0.0483 -0.0284 -0.0432 -0.0989 -0.0266 -0.0618 -0.0318 -0.0586 -0.0643 -0.0367 -0.0512 -0.0628 -0.0031 -0.0393 -0.0816 -0.0534 -0.0490 -0.0826 -0.0902 -0.0338 -0.1340 -0.0947 -0.0707 -0.1099 -0.0512 -0.0783 -0.1050 -0.0299 -0.0133 -0.0272 -0.0256 -0.1140 -0.0440 -0.0214 -0.1173 -0.0254 -0.0197 -0.1019 -0.0968 -0.0429 -0.1255 -0.0280 -0.0656 -0.0801 -0.0598 -0.0637 -0.0660 -0.0512 -0.0172 -0.0703 -0.0747 -0.0348 -0.0346 -0.0948 -0.0579 -0.0750 -0.0977 -0.0516 -0.0377 -0.0564 -0.0314 -0.0217 -0.0068 -0.0182 -0.0531 -0.0626 -0.0492 -0.0750 -0.0812 -0.0471 -0.0278 -0.0578 -0.0057 -0.0142 -0.0043 -0.0270 -0.1519 -0.0494 -0.0674 -0.0704 -0.0115 -0.0800 -0.0741 -0.0608 -0.0694 -0.0095 -0.0722 -0.0476 -0.0585 -0.0515 -0.0212 -0.0206 -0.0492 -0.0488 -0.0852 -0.0234 -0.0095 -0.0698 -0.0421 -0.0458 -0.0298 -0.0171 -0.0209 -0.0424 -0.0584 -0.0420 -0.0556 -0.0413 -0.0327 -0.0510 -0.0364 -0.0544 -0.0460 -0.0597 -0.0153 -0.0276 -0.0139 -0.0618 -0.0438 -0.0472 -0.0082 -0.0091 -0.0218 -0.0379 -0.0149 -0.0514 -0.0688 -0.0182 -0.0072 -0.0570 -0.0677 -0.0498 -0.0384 -0.0398 -0.0473 -0.0208 -0.0399 -0.0939 -0.0648 -0.0574 -0.0361 -0.0506 -0.0538 -0.0257 -0.0397 -0.0736 -0.0644 -15.5330
S-157	Arrays.asList("abstract","continue","for","new","switch","assert","default","if","package","synchronized","boolean","do","goto","private","this","break","double","implements","protected","throw","byte","else","import","public","throws","case","enum","instanceof","return","transient","catch","extends","int","short","try","char","final","interface","static","void","class","finally","long","strictfp","volatile","const","float","native","super","while")
T-157	Arrays.asList("abstract","continue","for","new","switch","assert","default","if","package","synchronized","boolean","do","goto","private","this","break","double","implements","protected","throw","byte","else","import","public","throws","case","enum","instanceof","return","transient","catch","extends","int","short","try","char","final","interface","static","void","class","finally","long","strictfp","volatile","const","float","native","super","while","type")
H-157	-0.04631184786558151	Arrays.asList("abstract","continue","for","new","switch","assert","default","if","package","synchronized","boolean","do","goto","private","this","break","double","implements","protected","throw","byte","else","import","public","throws","case","enum","instanceof","return","transient","catch","extends","int","short","try","char","final","interface","static","void","class","finally","long","strictfp","volatile","const","float","native","super","while","type")
D-157	-0.04631184786558151	Arrays.asList("abstract","continue","for","new","switch","assert","default","if","package","synchronized","boolean","do","goto","private","this","break","double","implements","protected","throw","byte","else","import","public","throws","case","enum","instanceof","return","transient","catch","extends","int","short","try","char","final","interface","static","void","class","finally","long","strictfp","volatile","const","float","native","super","while","type")
P-157	-0.0632 -0.0910 -0.0154 -0.0591 -0.0174 -0.0357 -0.0470 -0.0549 -0.0534 -0.0534 -0.0287 -0.0316 -0.0437 -0.0614 -0.0113 -0.0461 -0.0431 -0.0509 -0.0730 -0.0408 -0.0507 -0.0566 -0.0098 -0.0286 -0.0515 -0.0190 -0.0548 -0.0067 -0.0522 -0.0061 -0.0509 -0.0320 -0.0476 -0.0386 -0.0758 -0.0273 -0.0502 -0.0414 -0.0718 -0.0181 -0.0568 -0.0828 -0.0148 -0.0777 -0.0616 -0.0427 -0.0371 -0.0486 -0.0111 -0.0364 -0.0092 -0.0701 -0.0217 -0.0618 -0.0066 -0.0714 -0.0425 -0.0606 -0.0195 -0.0764 -0.0219 -0.0466 -0.0637 -0.0234 -0.0466 -0.0081 -0.0006 -0.0617 -0.0373 -0.0623 -0.0204 -0.0430 -0.0756 -0.0507 -0.0582 -0.0162 -0.0401 -0.0292 -0.0349 -0.0279 -0.0459 -0.0176 -0.0510 -0.0644 -0.0660 -0.0237 -0.0553 -0.0307 -0.0512 -0.0231 -0.2270 -0.0250 -0.0548 -0.0355 -0.0520 -0.0103 -0.0082 -0.0534 -0.0402 -0.0084 -0.0667 -0.0109 -0.0736 -0.0270 -0.0534 -0.0129 -0.0433 -0.0157 -0.0422 -0.0306 -0.3037 -0.0205 -0.1525 -0.0938
S-657	pushExecutor.submit(new NamedRunnable("OkHttp %s Push Data[%s]",hostName,streamId){ @Override public void execute(){ try { boolean cancel=pushObserver.onData(streamId,buffer,byteCount,inFinished); if (cancel) frameWriter.rstStream(streamId,ErrorCode.CANCEL); if (cancel || inFinished) { synchronized (SpdyConnection.this) { currentPushRequests.remove(streamId); } } } catch ( IOException ignored) { } } } )
T-657	pushExecutor.execute(new NamedRunnable("OkHttp %s Push Data[%s]",hostName,streamId){ @Override public void execute(){ try { boolean cancel=pushObserver.onData(streamId,buffer,byteCount,inFinished); if (cancel) frameWriter.rstStream(streamId,ErrorCode.CANCEL); if (cancel || inFinished) { synchronized (SpdyConnection.this) { currentPushRequests.remove(streamId); } } } catch ( IOException ignored) { } } } )
H-657	-0.063772052526474	pushExecutor.execute(new NamedRunnable("OkHttp %s Push Data[%s]",hostName,streamId){ @Override public void execute(){ try { boolean cancel=pushObserver.onData(streamId,buffer,byteCount,inFinished); if (cancel) frameWriter.rstStream(streamId,ErrorCode.CANCEL); if (cancel || inFinished) { synchronized (SpdyConnection.this) { currentPushRequests.remove(streamId); } } } catch ( IOException ignored) { } } } )
D-657	-0.063772052526474	pushExecutor.execute(new NamedRunnable("OkHttp %s Push Data[%s]",hostName,streamId){ @Override public void execute(){ try { boolean cancel=pushObserver.onData(streamId,buffer,byteCount,inFinished); if (cancel) frameWriter.rstStream(streamId,ErrorCode.CANCEL); if (cancel || inFinished) { synchronized (SpdyConnection.this) { currentPushRequests.remove(streamId); } } } catch ( IOException ignored) { } } } )
P-657	-0.0677 -0.0194 -0.1069 -0.0669 -0.1175 -0.0359 -0.0265 -0.0260 -0.0566 -0.0364 -0.0146 -0.0582 -0.0494 -0.0386 -0.0399 -0.0682 -0.0256 -0.0693 -0.0516 -0.0251 -0.0882 -0.1014 -0.0377 -0.1017 -0.0503 -0.0895 -0.0324 -0.0686 -0.0745 -0.0610 -0.0443 -0.0597 -0.1170 -0.0679 -0.0639 -0.0540 -0.0227 -0.0319 -0.1069 -0.0970 -0.0505 -0.1116 -0.0543 -0.0822 -0.1104 -0.0146 -0.0839 -0.0250 -0.0516 -0.0798 -0.0672 -0.0369 -0.0704 -0.0991 -0.1287 -0.0602 -0.0834 -0.0536 -0.0206 -0.1084 -0.0186 -0.0366 -0.0859 -0.0425 -0.0771 -0.0951 -0.0197 -0.1011 -0.0255 -0.0499 -0.0864 -0.1346 -0.0209 -0.0275 -0.0363 -0.0575 -0.0916 -0.1118 -0.0329 -0.1187 -0.0322 -0.0085 -0.0243 -0.1050 -0.0336 -0.0630 -0.0960 -0.0598 -0.0480 -0.0302 -0.1044 -0.0472 -0.1150 -0.0364 -0.0805 -0.0950 -0.1239 -0.0757 -0.0598 -0.0615 -0.1317 -0.0300 -0.0117 -0.0555 -0.0575 -0.0979 -0.0826 -0.0644 -0.0566 -0.0931
S-211	Arrays.asList(CoreAnnotations.TextAnnotation.class,CoreAnnotations.TokensAnnotation.class,CoreAnnotations.CharacterOffsetBeginAnnotation.class,CoreAnnotations.CharacterOffsetEndAnnotation.class,CoreAnnotations.BeforeAnnotation.class,CoreAnnotations.AfterAnnotation.class,CoreAnnotations.TokenBeginAnnotation.class,CoreAnnotations.TokenEndAnnotation.class,CoreAnnotations.PositionAnnotation.class,CoreAnnotations.IndexAnnotation.class,CoreAnnotations.OriginalTextAnnotation.class,CoreAnnotations.ValueAnnotation.class)
T-211	Arrays.asList(CoreAnnotations.TextAnnotation.class,CoreAnnotations.TokensAnnotation.class,CoreAnnotations.CharacterOffsetBeginAnnotation.class,CoreAnnotations.CharacterOffsetEndAnnotation.class,CoreAnnotations.BeforeAnnotation.class,CoreAnnotations.AfterAnnotation.class,CoreAnnotations.TokenBeginAnnotation.class,CoreAnnotations.TokenEndAnnotation.class,CoreAnnotations.PositionAnnotation.class,CoreAnnotations.IndexAnnotation.class,CoreAnnotations.OriginalTextAnnotation.class,CoreAnnotations.ValueAnnotation.class,CoreAnnotations.IsNewlineAnnotation.class)
H-211	-0.08927544951438904	Arrays.asList(CoreAnnotations.TextAnnotation.class,CoreAnnotations.TokensAnnotation.class,CoreAnnotations.CharacterOffsetBeginAnnotation.class,CoreAnnotations.CharacterOffsetEndAnnotation.class,CoreAnnotations.BeforeAnnotation.class,CoreAnnotations.AfterAnnotation.class,CoreAnnotations.TokenBeginAnnotation.class,CoreAnnotations.TokenEndAnnotation.class,CoreAnnotations.PositionAnnotation.class,CoreAnnotations.IndexAnnotation.class,CoreAnnotations.OriginalTextAnnotation.class,CoreAnnotations.ValueAnnotation.class,CoreAnnotations.IsNewlineAnnotation.class)
D-211	-0.08927544951438904	Arrays.asList(CoreAnnotations.TextAnnotation.class,CoreAnnotations.TokensAnnotation.class,CoreAnnotations.CharacterOffsetBeginAnnotation.class,CoreAnnotations.CharacterOffsetEndAnnotation.class,CoreAnnotations.BeforeAnnotation.class,CoreAnnotations.AfterAnnotation.class,CoreAnnotations.TokenBeginAnnotation.class,CoreAnnotations.TokenEndAnnotation.class,CoreAnnotations.PositionAnnotation.class,CoreAnnotations.IndexAnnotation.class,CoreAnnotations.OriginalTextAnnotation.class,CoreAnnotations.ValueAnnotation.class,CoreAnnotations.IsNewlineAnnotation.class)
P-211	-0.0738 -0.0944 -0.0221 -0.1159 -0.0668 -0.0575 -0.0993 -0.0783 -0.0492 -0.0886 -0.0888 -0.1072 -0.0663 -0.0535 -0.1158 -0.0389 -0.0386 -0.0826 -0.0806 -0.0989 -0.0868 -0.0857 -0.1170 -0.0442 -0.0369 -0.0373 -0.0836 -0.1010 -0.0888 -0.0957 -0.0774 -0.0821 -0.1071 -0.0385 -0.0317 -0.0745 -0.0903 -0.1005 -0.1186 -0.1121 -0.1028 -0.0730 -0.1083 -0.0507 -0.0679 -0.0981 -0.0870 -0.0995 -0.0699 -0.0730 -0.0991 -0.0959 -0.0725 -0.0994 -0.0720 -0.1000 -0.1021 -0.0757 -0.1056 -0.0747 -0.0342 -0.1115 -0.1102 -0.1026 -0.0804 -0.1299 -0.0900 -0.0991 -0.0688 -0.0911 -0.1018 -0.1011 -0.1011 -0.0972 -0.1323 -0.1006 -0.1202 -0.0370 -0.1006 -0.0867 -0.0882 -0.0793 -0.1050 -0.0923 -0.0971 -0.0335 -0.0573 -0.0887 -0.0788 -0.1003 -0.1546 -0.0706 -0.1100 -0.0237 -0.0518 -0.0736 -0.1090 -0.0813 -0.1067 -0.0659 -0.0716 -0.1050 -0.0834 -0.1168 -0.0748 -0.0756 -0.8812 -0.0601 -0.0717 -0.0610 -0.0065 -0.0348 -0.0590 -0.0486 -0.0785 -0.0594 -0.1284 -0.0998
S-293	invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
T-293	doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
H-293	-0.1245737075805664	doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
D-293	-0.1245737075805664	doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
P-293	-0.0644 -0.0276 -0.1030 -0.0597 -0.0917 -0.0569 -0.0616 -0.1000 -0.1042 -0.0631 -0.0843 -0.1022 -0.0854 -0.0700 -0.1024 -0.0590 -0.1064 -0.1032 -0.0603 -0.0945 -0.1065 -0.0928 -0.0612 -0.0962 -0.0627 -0.1155 -0.1153 -0.0673 -0.1080 -0.1061 -0.1060 -0.0728 -0.0947 -0.0705 -0.1211 -0.1246 -0.0701 -0.1141 -0.1049 -0.1134 -0.0786 -0.0946 -0.0690 -0.1187 -0.1249 -0.0707 -0.1141 -0.1101 -0.1254 -0.0835 -0.0964 -0.0702 -0.1154 -0.1213 -0.0672 -0.1159 -0.1091 -0.1245 -0.0847 -0.0953 -0.0739 -0.1136 -0.1165 -0.0670 -0.1126 -0.1050 -0.1155 -0.0714 -0.0957 -0.0728 -0.1191 -0.1104 -0.0706 -0.1120 -0.1020 -0.1101 -0.0614 -0.1025 -0.0720 -0.1390 -0.1084 -0.0725 -0.1142 -0.1013 -0.1047 -0.0637 -0.1069 -0.0756 -3.0319 -0.1012 -0.0750 -0.0793 -0.0943
S-499	invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
T-499	doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
H-499	-0.10519200563430786	doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
D-499	-0.10519200563430786	doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
P-499	-0.0573 -0.0272 -0.0988 -0.0548 -0.0910 -0.0556 -0.0633 -0.0971 -0.0973 -0.0639 -0.0753 -0.1018 -0.0809 -0.0698 -0.1022 -0.0587 -0.1067 -0.0975 -0.0609 -0.0885 -0.1074 -0.0905 -0.0621 -0.0999 -0.0640 -0.1142 -0.1079 -0.0682 -0.1017 -0.1059 -0.1035 -0.0709 -0.0949 -0.0723 -0.1211 -0.1144 -0.0709 -0.1065 -0.1052 -0.1098 -0.0800 -0.0946 -0.0708 -0.1205 -0.1132 -0.0726 -0.1076 -0.1106 -0.1190 -0.0846 -0.0953 -0.0705 -0.1216 -0.1066 -0.0686 -0.1112 -0.1105 -0.1178 -0.0882 -0.0932 -0.0715 -0.1354 -0.0973 -0.0709 -0.1063 -0.1062 -0.1042 -0.0775 -0.0921 -0.0788 -1.1852 -0.1010 -0.0806 -0.0920 -0.0939
S-399	invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
T-399	doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
H-399	-0.10913800448179245	doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
D-399	-0.10913800448179245	doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
P-399	-0.0609 -0.0273 -0.0972 -0.0547 -0.0908 -0.0547 -0.0652 -0.0973 -0.0961 -0.0625 -0.0727 -0.1015 -0.0781 -0.0676 -0.1004 -0.0609 -0.1080 -0.0966 -0.0597 -0.0881 -0.1085 -0.0880 -0.0602 -0.0972 -0.0653 -0.1164 -0.1066 -0.0673 -0.0976 -0.1051 -0.0976 -0.0682 -0.0906 -0.0752 -0.1230 -0.1121 -0.0700 -0.1027 -0.1042 -0.1028 -0.0785 -0.0896 -0.0739 -0.1284 -0.1088 -0.0733 -0.1045 -0.1093 -0.1086 -0.0808 -0.0894 -0.0750 -0.1549 -0.0944 -0.0719 -0.1080 -0.1093 -0.1050 -0.0857 -0.0865 -0.0822 -1.3930 -0.1063 -0.0928 -0.1011 -0.0928
S-490	lines("Function.prototype.inherits = function(parentCtor) {"," function tempCtor() {};"," tempCtor.prototype = parentCtor.prototype;"," this.superClass_ = parentCtor.prototype;"," this.prototype = new tempCtor();"," this.prototype.constructor = this;","};")
T-490	lines("Function.prototype.inherits = function(parentCtor) {"," function tempCtor() {};"," tempCtor.prototype = parentCtor.prototype;"," this.superClass_ = parentCtor.prototype;"," this.prototype = new tempCtor();"," this.prototype.constructor = this;","};","/** @constructor */ function A() {}","/** @constructor */ function B() {}","B.inherits(A);","use(B.superClass_);")
H-490	-0.08699622750282288	lines("Function.prototype.inherits = function(parentCtor) {"," function tempCtor() {};"," tempCtor.prototype = parentCtor.prototype;"," this.superClass_ = parentCtor.prototype;"," this.prototype = new tempCtor();"," this.prototype.constructor = this;","};")
D-490	-0.08699622750282288	lines("Function.prototype.inherits = function(parentCtor) {"," function tempCtor() {};"," tempCtor.prototype = parentCtor.prototype;"," this.superClass_ = parentCtor.prototype;"," this.prototype = new tempCtor();"," this.prototype.constructor = this;","};")
P-490	-0.1622 -0.0705 -0.0257 -0.0925 -0.0149 -0.0933 -0.0316 -0.0152 -0.0167 -0.0908 -0.0497 -0.0904 -0.0320 -0.0414 -0.0345 -0.0930 -0.1101 -0.0526 -0.0568 -0.0510 -0.0533 -0.0189 -0.0453 -0.0132 -0.0484 -0.0622 -0.0524 -0.0212 -0.0800 -0.0185 -0.0774 -0.0846 -0.0526 -0.0196 -0.1013 -0.0272 -0.0600 -0.1015 -0.1576 -0.0936 -0.0196 -0.0683 -0.0945 -0.0461 -0.0945 -0.0732 -0.0307 -0.1055 -0.0293 -0.0592 -0.0879 -0.1322 -0.0963 -0.0586 -0.0648 -0.0733 -0.0597 -0.0505 -0.0357 -0.0547 -0.0807 -0.0981 -0.0985 -0.0335 -0.0873 -0.0124 -0.0885 -0.0654 -0.0466 -0.0902 -0.0391 -1.7697 -0.0925
S-798	pushExecutor.submit(new NamedRunnable("OkHttp %s Push Reset[%s]",hostName,streamId){ @Override public void execute(){ pushObserver.onReset(streamId,errorCode); synchronized (SpdyConnection.this) { currentPushRequests.remove(streamId); } } } )
T-798	pushExecutor.execute(new NamedRunnable("OkHttp %s Push Reset[%s]",hostName,streamId){ @Override public void execute(){ pushObserver.onReset(streamId,errorCode); synchronized (SpdyConnection.this) { currentPushRequests.remove(streamId); } } } )
H-798	-0.06374122947454453	pushExecutor.execute(new NamedRunnable("OkHttp %s Push Reset[%s]",hostName,streamId){ @Override public void execute(){ pushObserver.onReset(streamId,errorCode); synchronized (SpdyConnection.this) { currentPushRequests.remove(streamId); } } } )
D-798	-0.06374122947454453	pushExecutor.execute(new NamedRunnable("OkHttp %s Push Reset[%s]",hostName,streamId){ @Override public void execute(){ pushObserver.onReset(streamId,errorCode); synchronized (SpdyConnection.this) { currentPushRequests.remove(streamId); } } } )
P-798	-0.0591 -0.0248 -0.1018 -0.1399 -0.1095 -0.0449 -0.0281 -0.0224 -0.0578 -0.0339 -0.0147 -0.0624 -0.0538 -0.0436 -0.0193 -0.0617 -0.0316 -0.0677 -0.0330 -0.0248 -0.0912 -0.0912 -0.0487 -0.1172 -0.0470 -0.0896 -0.0407 -0.0540 -0.0861 -0.0581 -0.0446 -0.0685 -0.0267 -0.1025 -0.1028 -0.0307 -0.0996 -0.0452 -0.0770 -0.1031 -0.0567 -0.0239 -0.0742 -0.0556 -0.1165 -0.0352 -0.0090 -0.0273 -0.0928 -0.0433 -0.0645 -0.1032 -0.0447 -0.0437 -0.0319 -0.1057 -0.0518 -0.1153 -0.0611 -0.0871 -0.0977 -0.1104 -0.0739 -0.0707 -0.0534 -0.0980
S-705	/** * Make sure we don't attempt to recover inline; if the parser successfully recovers, it won't throw an exception. */ @Override public Token recoverInline(BaseRecognizer recognizer) throws RecognitionException { throw new RuntimeException(new InputMismatchException(recognizer)); }
T-705	/** * Make sure we don't attempt to recover inline; if the parser successfully recovers, it won't throw an exception. */ @Override public Symbol recoverInline(BaseRecognizer<Symbol> recognizer) throws RecognitionException { throw new RuntimeException(new InputMismatchException(recognizer)); }
H-705	-0.0679759681224823	/** * Make sure we don't attempt to recover inline; if the parser successfully recovers, it won't throw an exception. */ @Override public Symbol recoverInline(BaseRecognizer<Symbol> recognizer) throws RecognitionException { throw new RuntimeException(new InputMismatchException(recognizer)); }
D-705	-0.0679759681224823	/** * Make sure we don't attempt to recover inline; if the parser successfully recovers, it won't throw an exception. */ @Override public Symbol recoverInline(BaseRecognizer<Symbol> recognizer) throws RecognitionException { throw new RuntimeException(new InputMismatchException(recognizer)); }
P-705	-0.0236 -0.0885 -0.0403 -0.0669 -0.0383 -0.0439 -0.0864 -0.0468 -0.0349 -0.0734 -0.0181 -0.0403 -0.0402 -0.0843 -0.0959 -0.0618 -0.0102 -0.0267 -0.0343 -0.0145 -0.0687 -0.0751 -0.0403 -0.0641 -0.0821 -0.0215 -0.0545 -0.0503 -0.0824 -0.0686 -0.0743 -0.0443 -0.0607 -0.4922 -0.0962 -0.0144 -0.1188 -0.0416 -0.0558 -0.0194 -0.4183 -0.0390 -0.0452 -0.0597 -0.0172 -0.0753 -0.0538 -0.0103 -0.0732 -0.0974 -0.0462 -0.1016 -0.0300 -0.0971 -0.0964 -0.0700 -0.0480 -0.0132 -0.0476 -0.0961 -0.0273 -0.0327 -0.0251 -0.0895 -0.1137
S-444	@RunWith(HazelcastParallelClassRunner.class) @Category({QuickTest.class,ParallelTest.class}) public class IdGeneratorBasicDistributedTest extends IdGeneratorBasicTest { @Override protected HazelcastInstance[] newInstances(){ return createHazelcastInstanceFactory(2).newInstances(); } }
T-444	@RunWith(HazelcastParallelClassRunner.class) @Category({QuickTest.class,ParallelTest.class}) public class IdGeneratorBasicDistributedTest extends IdGeneratorAbstractTest { @Override protected HazelcastInstance[] newInstances(){ return createHazelcastInstanceFactory(2).newInstances(); } }
H-444	-0.05786379799246788	@RunWith(HazelcastParallelClassRunner.class) @Category({QuickTest.class,ParallelTest.class}) public class IdGeneratorBasicDistributedTest extends IdGeneratorAbstractTest { @Override protected HazelcastInstance[] newInstances(){ return createHazelcastInstanceFactory(2).newInstances(); } }
D-444	-0.05786379799246788	@RunWith(HazelcastParallelClassRunner.class) @Category({QuickTest.class,ParallelTest.class}) public class IdGeneratorBasicDistributedTest extends IdGeneratorAbstractTest { @Override protected HazelcastInstance[] newInstances(){ return createHazelcastInstanceFactory(2).newInstances(); } }
P-444	-0.0686 -0.0395 -0.0860 -0.0429 -0.0151 -0.0223 -0.0504 -0.0303 -0.0908 -0.0688 -0.0737 -0.0669 -0.0430 -0.0355 -0.0237 -0.0736 -0.0935 -0.0568 -0.0904 -0.0283 -0.0854 -0.0875 -0.0635 -0.0421 -0.0805 -0.1251 -0.0333 -0.0508 -0.0375 -0.0144 -0.0735 -0.0269 -0.0505 -0.0532 -0.0867 -0.1186 -0.0807 -0.0750 -0.0335 -0.0515 -0.0175 -0.0404 -0.0299 -0.0794 -0.0437 -0.0389 -0.0938 -0.0332 -0.0205 -0.0535 -0.0446 -0.0178 -0.0795 -0.0625 -0.0436 -0.0841 -0.0857 -0.0793 -0.0959
S-370	logger.info("{} exists but cannot be executed even when execute permissions set; " + "check volume for \"noexec\" flag; use -Dio.netty.native.workdir=[path] " + "to set native working directory separately.",tmpFile.getPath())
T-370	logger.info("{} exists but cannot be executed even when execute permissions set; " + "check volume for \"noexec\" flag; use -Dio.netty.native.workdir=[path] " + "to set native working directory separately.",tmpFile.getPath(),"io.netty.native.workdir")
H-370	-0.11107239127159119	logger.info("{} exists but cannot be executed even when execute permissions set; " + "check volume for \"noexec\" flag; use -Dio.netty.native.workdir=[path] " + "to set native working directory separately.",tmpFile.getPath())
D-370	-0.11107239127159119	logger.info("{} exists but cannot be executed even when execute permissions set; " + "check volume for \"noexec\" flag; use -Dio.netty.native.workdir=[path] " + "to set native working directory separately.",tmpFile.getPath())
P-370	-0.0339 -0.0839 -0.2711 -0.0556 -0.0142 -0.0588 -0.1259 -0.0335 -0.0794 -0.0501 -0.0407 -0.0391 -0.0455 -0.0458 -0.0594 -0.0364 -0.0777 -0.0799 -0.0961 -0.0361 -0.0442 -0.0630 -0.0360 -0.0553 -0.0095 -0.1021 -0.0364 -0.0423 -0.0567 -0.0727 -0.0476 -0.0125 -0.1037 -0.0168 -0.0992 -0.0171 -0.1104 -0.0251 -0.0283 -0.0496 -0.0478 -0.1261 -0.0956 -0.0766 -0.0924 -0.0375 -0.0551 -0.0474 -0.0527 -0.0323 -0.0161 -0.0333 -0.0323 -0.1003 -0.1012 -0.0604 -0.0446 -3.0077 -0.1022
S-571	v.executeBlocking(fut -> { try { v.simulateKill(); fut.complete(); } catch ( Exception e) { fut.fail(e); } } ,ar -> { if (!ar.succeeded()) { fail(ar.cause()); } } )
T-571	v.executeBlocking(fut -> { try { v.simulateKill(); fut.complete(); } catch ( Exception e) { fut.fail(e); } } ,false,ar -> { if (!ar.succeeded()) { fail(ar.cause()); } } )
H-571	-0.1273404359817505	v.executeBlocking(fut -> { try { v.simulateKill(); fut.complete(); } catch ( Exception e) { fut.fail(e); } } ,ar -> { if (!ar.succeeded()) { fail(ar.cause()); } } )
D-571	-0.1273404359817505	v.executeBlocking(fut -> { try { v.simulateKill(); fut.complete(); } catch ( Exception e) { fut.fail(e); } } ,ar -> { if (!ar.succeeded()) { fail(ar.cause()); } } )
P-571	-0.1450 -0.1012 -0.0409 -0.2417 -0.0935 -0.0558 -0.1185 -0.0401 -0.0883 -0.0933 -0.0954 -0.1263 -0.0993 -0.9600 -0.0404 -0.0188 -0.0393 -0.8177 -0.0998 -0.0400 -0.0502 -0.0748 -0.0637 -0.0867 -0.0365 -0.1073 -0.0607 -0.1054 -0.9666 -0.0996 -0.0433 -0.0827 -0.1095 -0.0500 -0.0868 -0.0750 -0.3403 -0.1157 -0.0461 -0.0770 -0.0900 -0.0294 -0.0671 -0.0989 -0.1911 -0.0384 -0.0463 -0.0896 -0.0386 -0.1002 -0.0605 -0.1012 -0.0249 -0.0501 -0.0735 -0.0586 -0.0944 -0.0998
S-292	@Override public Cell deepClone(){ byte[] copy=Bytes.copy(this.bytes,this.offset,this.length); KeyValue kv=new KeyValue(copy,0,copy.length); kv.setSequenceId(this.getSequenceId()); return kv; }
T-292	@Override public ExtendedCell deepClone(){ byte[] copy=Bytes.copy(this.bytes,this.offset,this.length); KeyValue kv=new KeyValue(copy,0,copy.length); kv.setSequenceId(this.getSequenceId()); return kv; }
H-292	-0.06147962063550949	@Override public ExtendedCell deepClone(){ byte[] copy=Bytes.copy(this.bytes,this.offset,this.length); KeyValue kv=new KeyValue(copy,0,copy.length); kv.setSequenceId(this.getSequenceId()); return kv; }
D-292	-0.06147962063550949	@Override public ExtendedCell deepClone(){ byte[] copy=Bytes.copy(this.bytes,this.offset,this.length); KeyValue kv=new KeyValue(copy,0,copy.length); kv.setSequenceId(this.getSequenceId()); return kv; }
P-292	-0.0648 -0.0341 -0.0570 -0.0470 -0.0232 -0.0464 -0.0363 -0.0417 -0.0410 -0.0407 -0.0342 -0.0448 -0.0289 -0.1057 -0.0303 -0.1001 -0.0446 -0.1023 -0.0332 -0.0711 -0.0423 -0.1139 -0.0262 -0.0884 -0.0537 -0.0950 -0.0672 -0.0558 -0.0285 -0.0269 -0.0548 -0.0573 -0.0291 -0.1070 -0.0292 -0.0709 -0.0613 -0.0315 -0.0876 -0.0609 -0.0709 -0.0475 -0.0914 -0.0722 -0.0341 -0.0806 -0.1120 -0.0553 -0.1123 -0.0714 -0.0391 -0.0842 -0.0684 -0.1156 -0.0437 -0.0699 -0.0936 -0.0884
S-80	Arrays.asList(CoreAnnotations.TextAnnotation.class,CoreAnnotations.TokensAnnotation.class,CoreAnnotations.CharacterOffsetBeginAnnotation.class,CoreAnnotations.CharacterOffsetEndAnnotation.class,CoreAnnotations.IsNewlineAnnotation.class)
T-80	Arrays.asList(CoreAnnotations.TextAnnotation.class,CoreAnnotations.TokensAnnotation.class,CoreAnnotations.CharacterOffsetBeginAnnotation.class,CoreAnnotations.CharacterOffsetEndAnnotation.class,CoreAnnotations.IsNewlineAnnotation.class,CoreAnnotations.TokenBeginAnnotation.class,CoreAnnotations.TokenEndAnnotation.class,CoreAnnotations.OriginalTextAnnotation.class)
H-80	-0.10734596103429794	Arrays.asList(CoreAnnotations.TextAnnotation.class,CoreAnnotations.TokensAnnotation.class,CoreAnnotations.CharacterOffsetBeginAnnotation.class,CoreAnnotations.CharacterOffsetEndAnnotation.class,CoreAnnotations.IsNewlineAnnotation.class,CoreAnnotations.TokenBeginAnnotation.class)
D-80	-0.10734596103429794	Arrays.asList(CoreAnnotations.TextAnnotation.class,CoreAnnotations.TokensAnnotation.class,CoreAnnotations.CharacterOffsetBeginAnnotation.class,CoreAnnotations.CharacterOffsetEndAnnotation.class,CoreAnnotations.IsNewlineAnnotation.class,CoreAnnotations.TokenBeginAnnotation.class)
P-80	-0.0662 -0.0882 -0.0204 -0.1056 -0.0522 -0.0491 -0.0987 -0.0762 -0.0403 -0.0906 -0.0815 -0.1061 -0.0578 -0.0438 -0.1129 -0.0272 -0.0337 -0.0820 -0.0742 -0.1015 -0.0629 -0.0648 -0.1145 -0.0349 -0.0368 -0.0361 -0.0686 -0.1009 -0.0791 -0.0911 -0.0489 -0.0629 -0.1108 -0.0265 -0.0320 -0.0682 -0.0618 -0.1010 -0.0907 -0.1223 -0.0700 -0.0668 -0.1005 -0.0469 -0.0513 -0.0457 -0.0557 -0.1007 -0.0700 -0.2354 -0.0280 -0.0520 -0.0858 -0.6550 -0.0269 -0.0836 -0.0957 -0.0688 -1.5715 -0.1074
S-583	from(Constants.PARALLEL_LOANBROKER_URI).process(new CreditScoreProcessor(Constants.CREDITAGENCY_ADDRESS)).multicast(new BankResponseAggregationStrategy()).setParallelProcessing(true)
T-583	from(Constants.PARALLEL_LOANBROKER_URI).process(new CreditScoreProcessor(Constants.CREDITAGENCY_ADDRESS)).multicast(new BankResponseAggregationStrategy()).parallelProcessing(true)
H-583	-0.05026610568165779	from(Constants.PARALLEL_LOANBROKER_URI).process(new CreditScoreProcessor(Constants.CREDITAGENCY_ADDRESS)).multicast(new BankResponseAggregationStrategy()).parallelProcessing(true)
D-583	-0.05026610568165779	from(Constants.PARALLEL_LOANBROKER_URI).process(new CreditScoreProcessor(Constants.CREDITAGENCY_ADDRESS)).multicast(new BankResponseAggregationStrategy()).parallelProcessing(true)
P-583	-0.0664 -0.0988 -0.0330 -0.1124 -0.0309 -0.0222 -0.0337 -0.0378 -0.0692 -0.0137 -0.0464 -0.0301 -0.0086 -0.0054 -0.0859 -0.0107 -0.0600 -0.0247 -0.0721 -0.0441 -0.0125 -0.0338 -0.0134 -0.0937 -0.0350 -0.1067 -0.0196 -0.0164 -0.0102 -0.0187 -0.0190 -0.0815 -0.0159 -0.0222 -0.0394 -0.0158 -0.0943 -0.0529 -0.0225 -0.0355 -0.0208 -0.0190 -0.0485 -0.2184 -0.0284 -0.1237 -0.0786 -0.1437 -0.1170
S-179	User.createCursorSupportUserList(http.get("http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json"))
T-179	User.createUsersList(http.get("http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json"))
H-179	-0.05311337858438492	User.createUsersList(http.get("http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json"))
D-179	-0.05311337858438492	User.createUsersList(http.get("http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json"))
P-179	-0.0473 -0.1039 -0.0400 -0.1514 -0.1463 -0.1016 -0.0280 -0.1003 -0.0601 -0.0668 -0.0249 -0.0322 -0.0231 -0.0240 -0.0274 -0.0142 -0.0894 -0.0321 -0.0190 -0.0934 -0.0116 -0.0520 -0.0181 -0.0496 -0.0340 -0.0518 -0.0311 -0.0752 -0.0531 -0.0097 -0.0508 -0.0193 -0.0569 -0.0330 -0.0498 -0.0681 -0.0620 -0.0491 -0.0714 -0.0300 -0.0250 -0.1051 -0.0228 -0.0345 -0.1005
S-267	new JedisClusterCommand<Set<String>>(connectionHandler,timeout,maxRedirections){ @Override public Set<String> execute( Jedis connection){ return connection.spop(key,count); } }
T-267	new JedisClusterCommand<Set<String>>(connectionHandler,maxRedirections){ @Override public Set<String> execute( Jedis connection){ return connection.spop(key,count); } }
H-267	-0.06164536252617836	new JedisClusterCommand<Set<String>>(connectionHandler,maxRedirections){ @Override public Set<String> execute( Jedis connection){ return connection.spop(key,count); } }
D-267	-0.06164536252617836	new JedisClusterCommand<Set<String>>(connectionHandler,maxRedirections){ @Override public Set<String> execute( Jedis connection){ return connection.spop(key,count); } }
P-267	-0.0725 -0.0195 -0.0240 -0.0381 -0.0530 -0.0544 -0.0367 -0.0674 -0.0547 -0.0963 -0.0219 -0.0447 -0.1047 -0.2171 -0.0290 -0.0090 -0.0595 -0.0341 -0.1086 -0.0384 -0.0578 -0.1338 -0.0420 -0.0492 -0.1017 -0.0430 -0.1047 -0.0218 -0.0411 -0.0225 -0.0820 -0.0372 -0.1031 -0.0534 -0.0296 -0.0672 -0.0318 -0.0796 -0.0413 -0.0607 -0.0845 -0.0806 -0.0986
S-46	new RuntimeException("Could not create TypeInformation for type " + data[0].getClass().getName() + "; please specify the TypeInformation manually via "+ "StreamExecutionEnvironment#fromElements(Collection, TypeInformation)")
T-46	new RuntimeException("Could not create TypeInformation for type " + data[0].getClass().getName() + "; please specify the TypeInformation manually via "+ "StreamExecutionEnvironment#fromElements(Collection, TypeInformation)",e)
H-46	-0.055663373321294785	new RuntimeException("Could not create TypeInformation for type " + data[0].getClass().getName() + "; please specify the TypeInformation manually via "+ "StreamExecutionEnvironment#fromElements(Collection, TypeInformation)",e)
D-46	-0.055663373321294785	new RuntimeException("Could not create TypeInformation for type " + data[0].getClass().getName() + "; please specify the TypeInformation manually via "+ "StreamExecutionEnvironment#fromElements(Collection, TypeInformation)",e)
P-46	-0.0751 -0.0537 -0.0700 -0.0672 -0.0186 -0.0920 -0.1193 -0.0517 -0.0300 -0.0498 -0.0346 -0.0819 -0.1163 -0.0770 -0.0177 -0.0238 -0.0727 -0.0215 -0.0816 -0.1047 -0.0304 -0.0428 -0.0411 -0.1145 -0.0563 -0.0319 -0.0299 -0.0279 -0.0344 -0.1115 -0.0249 -0.0300 -0.0193 -0.0327 -0.0594 -0.0373 -0.1222 -0.0255 -0.1176 -0.0442 -0.0253 -0.0150 -0.0031 -0.0544 -0.1143
S-781	new StringInputRowParser(new JSONParseSpec(new TimestampSpec("timestamp","auto"),new DimensionsSpec(Arrays.asList("dim1","dim2"),null,null)),null,null,null)
T-781	new StringInputRowParser(new JSONParseSpec(new TimestampSpec("timestamp","auto"),new DimensionsSpec(Arrays.asList("dim1","dim2"),null,null)),null,null,null,null)
H-781	-0.06615684926509857	new StringInputRowParser(new JSONParseSpec(new TimestampSpec("timestamp","auto"),new DimensionsSpec(Arrays.asList("dim1","dim2"),null,null)),null,null,null,null)
D-781	-0.06615684926509857	new StringInputRowParser(new JSONParseSpec(new TimestampSpec("timestamp","auto"),new DimensionsSpec(Arrays.asList("dim1","dim2"),null,null)),null,null,null,null)
P-781	-0.0708 -0.0510 -0.0452 -0.0491 -0.0401 -0.0961 -0.0545 -0.0325 -0.0420 -0.0530 -0.0976 -0.0526 -0.0262 -0.0370 -0.0515 -0.0380 -0.0579 -0.0318 -0.0475 -0.0457 -0.0304 -0.0100 -0.0349 -0.0942 -0.0214 -0.0905 -0.0233 -0.0538 -0.0409 -0.0288 -0.0322 -0.0502 -0.0758 -0.0331 -0.0951 -0.0463 -0.0305 -0.0434 -0.0862 -0.0329 -0.1283 -0.0214 -0.5434 -0.0158 -0.2560 -0.1044
S-72	Status.constructStatuses(get(getBaseURL() + "statuses/public_timeline.json",null,new Paging((long)sinceID).asPostParameterList(Paging.S),false))
T-72	Status.createStatuseList(get(getBaseURL() + "statuses/public_timeline.json",null,new Paging((long)sinceID).asPostParameterList(Paging.S),false))
H-72	-0.08353496342897415	Status.createStatuseList(get(getBaseURL() + "statuses/public_timeline.json",null,new Paging((long)sinceID).asPostParameterList(Paging.S),false))
D-72	-0.08353496342897415	Status.createStatuseList(get(getBaseURL() + "statuses/public_timeline.json",null,new Paging((long)sinceID).asPostParameterList(Paging.S),false))
P-72	-0.0294 -0.1052 -0.0617 -0.0216 -0.0077 -0.0687 -0.0859 -0.0594 -0.0912 -0.0585 -0.0210 -0.0361 -0.1082 -0.0918 -0.0852 -0.0154 -0.0572 -0.0512 -0.0808 -0.0146 -0.1109 -0.0373 -0.0646 -0.0469 -0.0744 -0.0575 -0.0606 -0.0537 -0.0411 -0.1310 -0.1102 -0.9059 -0.0559 -0.0805 -0.1115 -0.0334 -0.0337 -0.1122 -0.0419 -0.0402 -0.0879 -0.0990 -0.1466 -0.0312 -0.0189 -0.1051
S-352	getLsResultStr("/testRoot/testDir",files[1].getCreationTimeMs(),0,LsCommand.STATE_FOLDER,testUser,testUser,files[1].getPermission(),files[1].isFolder())
T-352	getLsResultStr("/testRoot/testDir",files[1].getCreationTimeMs(),1,LsCommand.STATE_FOLDER,testUser,testUser,files[1].getPermission(),files[1].isFolder())
H-352	-0.060486022382974625	getLsResultStr("/testRoot/testDir",files[1].getCreationTimeMs(),1,LsCommand.STATE_FOLDER,testUser,testUser,files[1].getPermission(),files[1].isFolder())
D-352	-0.060486022382974625	getLsResultStr("/testRoot/testDir",files[1].getCreationTimeMs(),1,LsCommand.STATE_FOLDER,testUser,testUser,files[1].getPermission(),files[1].isFolder())
P-352	-0.0360 -0.0757 -0.0352 -0.0533 -0.0137 -0.0843 -0.0691 -0.0481 -0.0486 -0.0464 -0.0582 -0.0721 -0.0142 -0.0636 -0.0229 -0.0231 -0.0512 -0.0797 -0.0422 -0.0502 -0.0507 -0.1129 -0.0173 -0.0794 -0.0247 -0.0991 -0.0811 -0.0883 -0.1129 -0.0583 -0.0579 -0.1091 -0.0610 -0.0194 -0.0784 -0.0537 -0.0642 -0.0902 -0.0354 -0.0600 -0.0284 -0.1309 -0.0999
S-680	builder(SingleSignOnDefinition.INSTANCE).addAttributes(SingleSignOnDefinition.DOMAIN,SingleSignOnDefinition.PATH,SingleSignOnDefinition.HTTP_ONLY,SingleSignOnDefinition.SECURE)
T-680	builder(SingleSignOnDefinition.INSTANCE).addAttributes(SingleSignOnDefinition.DOMAIN,SingleSignOnDefinition.PATH,SingleSignOnDefinition.HTTP_ONLY,SingleSignOnDefinition.SECURE,SingleSignOnDefinition.COOKIE_NAME)
H-680	-0.06730353087186813	builder(SingleSignOnDefinition.INSTANCE).addAttributes(SingleSignOnDefinition.DOMAIN,SingleSignOnDefinition.PATH,SingleSignOnDefinition.HTTP_ONLY,SingleSignOnDefinition.SECURE,SingleSignOnDefinition.COOKIE_NAME)
D-680	-0.06730353087186813	builder(SingleSignOnDefinition.INSTANCE).addAttributes(SingleSignOnDefinition.DOMAIN,SingleSignOnDefinition.PATH,SingleSignOnDefinition.HTTP_ONLY,SingleSignOnDefinition.SECURE,SingleSignOnDefinition.COOKIE_NAME)
P-680	-0.0402 -0.1140 -0.0216 -0.0298 -0.0590 -0.0508 -0.0970 -0.0332 -0.0519 -0.0347 -0.0389 -0.1301 -0.0413 -0.0422 -0.0825 -0.0481 -0.0984 -0.0073 -0.1046 -0.0458 -0.0504 -0.0909 -0.0556 -0.1055 -0.0861 -0.0993 -0.0480 -0.0592 -0.0835 -0.0680 -0.1114 -0.0113 -0.0850 -0.0327 -0.1192 -0.0521 -0.0670 -0.0903 -0.0549 -0.1032 -0.0649 -0.1439 -0.0594 -0.0644 -0.0779 -0.0633 -0.0775 -0.0100 -0.0477 -0.0716 -0.0692 -0.1052
S-364	log.error("Checking bounds key:[{}, {}) & col:[{}, {}) (expect {} keys)",new Object[]{keyStart,keyEnd,startCol,endCol,expected.size()})
T-364	log.debug("Checking bounds key:[{}, {}) & col:[{}, {}) (expect {} keys)",new Object[]{keyStart,keyEnd,startCol,endCol,expected.size()})
H-364	-0.05597463995218277	log.debug("Checking bounds key:[{}, {}) & col:[{}, {}) (expect {} keys)",new Object[]{keyStart,keyEnd,startCol,endCol,expected.size()})
D-364	-0.05597463995218277	log.debug("Checking bounds key:[{}, {}) & col:[{}, {}) (expect {} keys)",new Object[]{keyStart,keyEnd,startCol,endCol,expected.size()})
P-364	-0.0712 -0.0958 -0.0063 -0.0493 -0.0073 -0.0467 -0.0352 -0.0203 -0.0332 -0.0442 -0.0276 -0.0515 -0.0700 -0.0238 -0.0373 -0.0442 -0.0302 -0.1253 -0.0281 -0.0287 -0.0358 -0.0820 -0.0469 -0.0561 -0.0184 -0.0387 -0.0786 -0.1070 -0.0386 -0.0502 -0.1043 -0.0469 -0.0454 -0.0968 -0.0577 -0.0293 -0.1203 -0.0229 -0.1266 -0.0423 -0.1598 -0.0253 -0.1006
S-185	from("jms:queue2:parallelLoanRequestQueue").process(new CreditAgency()).multicast(new BankResponseAggregationStrategy().setAggregatingOutMessage(true)).setParallelProcessing(true)
T-185	from("jms:queue2:parallelLoanRequestQueue").process(new CreditAgency()).multicast(new BankResponseAggregationStrategy().setAggregatingOutMessage(true)).parallelProcessing(true)
H-185	-0.05575251206755638	from("jms:queue2:parallelLoanRequestQueue").process(new CreditAgency()).multicast(new BankResponseAggregationStrategy().setAggregatingOutMessage(true)).parallelProcessing(true)
D-185	-0.05575251206755638	from("jms:queue2:parallelLoanRequestQueue").process(new CreditAgency()).multicast(new BankResponseAggregationStrategy().setAggregatingOutMessage(true)).parallelProcessing(true)
P-185	-0.0612 -0.0566 -0.0157 -0.1169 -0.0598 -0.1152 -0.0235 -0.0232 -0.0323 -0.0378 -0.0761 -0.0286 -0.0813 -0.0331 -0.0113 -0.0195 -0.0117 -0.0415 -0.0370 -0.0119 -0.0929 -0.0483 -0.0222 -0.0394 -0.0231 -0.0271 -0.0577 -0.0628 -0.0541 -0.0919 -0.0400 -0.0418 -0.1006 -0.0322 -0.0327 -0.0564 -0.0840 -0.1414 -0.1124 -0.1106 -0.1200
S-354	testSame("var foo = function (a) {}; foo.call(this, 1);","var foo = function () {var a$jscomp$1 = 1;}; foo.call(this);")
T-354	test("var foo = function (a) {}; foo.call(this, 1);","var foo = function () {var a$jscomp$1 = 1;}; foo.call(this);")
H-354	-0.07009901851415634	test("var foo = function (a) {}; foo.call(this, 1);","var foo = function () {var a$jscomp$1 = 1;}; foo.call(this);")
D-354	-0.07009901851415634	test("var foo = function (a) {}; foo.call(this, 1);","var foo = function () {var a$jscomp$1 = 1;}; foo.call(this);")
P-354	-0.2626 -0.0900 -0.0340 -0.0895 -0.0754 -0.0600 -0.1667 -0.0754 -0.0732 -0.0187 -0.0817 -0.0913 -0.0736 -0.0922 -0.0591 -0.0688 -0.0501 -0.0295 -0.0514 -0.0863 -0.0723 -0.0597 -0.0287 -0.0795 -0.0379 -0.1228 -0.0455 -0.0191 -0.0096 -0.0112 -0.0841 -0.0345 -0.0297 -0.0338 -0.0766 -0.0958 -0.0743 -0.1046 -0.0780 -0.0441 -0.0839 -0.0887
S-183	Status.constructStatuses(get(getBaseURL() + "statuses/user_timeline/" + id+ ".json",null,paging.asPostParameterList(),http.isAuthenticationEnabled()))
T-183	Status.createStatuseList(get(getBaseURL() + "statuses/user_timeline/" + id+ ".json",null,paging.asPostParameterList(),http.isAuthenticationEnabled()))
H-183	-0.057238608598709106	Status.createStatuseList(get(getBaseURL() + "statuses/user_timeline/" + id+ ".json",null,paging.asPostParameterList(),http.isAuthenticationEnabled()))
D-183	-0.057238608598709106	Status.createStatuseList(get(getBaseURL() + "statuses/user_timeline/" + id+ ".json",null,paging.asPostParameterList(),http.isAuthenticationEnabled()))
P-183	-0.0333 -0.1026 -0.0439 -0.0126 -0.0075 -0.0721 -0.0900 -0.0605 -0.0905 -0.0504 -0.0192 -0.0365 -0.0991 -0.0984 -0.0895 -0.0148 -0.0562 -0.0511 -0.0971 -0.0131 -0.0921 -0.1040 -0.0746 -0.0328 -0.0367 -0.0264 -0.0567 -0.0312 -0.0926 -0.0338 -0.0265 -0.1062 -0.0789 -0.0496 -0.0211 -0.0477 -0.0276 -0.1230 -0.0576 -0.0524 -0.0257 -0.0230 -0.1028
S-693	addKeys(externalClasses,DATE_TIME,"org.joda.time.DateTime","org.joda.time.ReadableDateTime","javax.xml.datatype.XMLGregorianCalendar")
T-693	addKeys(externalClasses,DATE_TIME,"org.joda.time.DateTime","org.joda.time.ReadableDateTime","javax.xml.datatype.XMLGregorianCalendar","java.time.LocalDateTime")
H-693	-0.058595143258571625	addKeys(externalClasses,DATE_TIME,"org.joda.time.DateTime","org.joda.time.ReadableDateTime","javax.xml.datatype.XMLGregorianCalendar","java.time.LocalDateTime")
D-693	-0.058595143258571625	addKeys(externalClasses,DATE_TIME,"org.joda.time.DateTime","org.joda.time.ReadableDateTime","javax.xml.datatype.XMLGregorianCalendar","java.time.LocalDateTime")
P-693	-0.0908 -0.0202 -0.0897 -0.0134 -0.0143 -0.1052 -0.0169 -0.0955 -0.0193 -0.0490 -0.1166 -0.0959 -0.0247 -0.0152 -0.0992 -0.0334 -0.0932 -0.0104 -0.0486 -0.1063 -0.1071 -0.0311 -0.0195 -0.1007 -0.0337 -0.0881 -0.0741 -0.0158 -0.0357 -0.0200 -0.1050 -0.0199 -0.0974 -0.0068 -0.1071 -0.0238 -0.0260 -0.0072 -0.0775 -0.0189 -0.0804 -0.0686 -0.1086 -0.0608 -0.0268 -0.1369 -0.0986
S-638	twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 + user+ "/lists/memberships.json?cursor="+ cursor,true))
T-638	twitter4j.List.createListList(get(getApiBaseURL() + V1 + user+ "/lists/memberships.json?cursor="+ cursor,true))
H-638	-0.08203378319740295	twitter4j.List.createListList(get(getApiBaseURL() + V1 + user+ "/lists/memberships.json?cursor="+ cursor,true))
D-638	-0.08203378319740295	twitter4j.List.createListList(get(getApiBaseURL() + V1 + user+ "/lists/memberships.json?cursor="+ cursor,true))
P-638	-0.0233 -0.0462 -0.0234 -0.0820 -0.0676 -0.0920 -0.0704 -0.0772 -1.0349 -0.1525 -0.0537 -0.0839 -0.0490 -0.0399 -0.0238 -0.0248 -0.0869 -0.0793 -0.0433 -0.0621 -0.0764 -0.0491 -0.0422 -0.0380 -0.0304 -0.0415 -0.0265 -0.0398 -0.0118 -0.1154 -0.0332 -0.0629 -0.0582 -0.0376 -0.0336 -0.0904 -0.0684 -0.0266 -0.1010
S-110	Arrays.asList("spring-boot-starter-tomcat-","tomcat-embed-core-","tomcat-embed-el-","tomcat-embed-logging-juli-")
T-110	Arrays.asList("spring-boot-starter-tomcat-","tomcat-embed-core-","tomcat-embed-el-","tomcat-embed-logging-juli-","tomcat-embed-websocket-")
H-110	-0.14567990601062775	Arrays.asList("spring-boot-starter-tomcat-","tomcat-embed-core-","tomcat-embed-el-","tomcat-embed-logging-juli-")
D-110	-0.14567990601062775	Arrays.asList("spring-boot-starter-tomcat-","tomcat-embed-core-","tomcat-embed-el-","tomcat-embed-logging-juli-")
P-110	-0.0802 -0.0873 -0.0174 -0.0478 -0.0229 -0.0723 -0.0150 -0.0609 -0.0080 -0.0879 -0.0098 -0.0896 -0.0687 -0.0248 -0.0765 -0.0209 -0.0762 -0.0298 -0.0742 -0.0814 -0.0321 -0.0984 -0.0256 -0.0758 -0.0221 -0.0884 -0.0613 -0.0383 -0.1055 -0.0293 -0.0722 -0.0707 -0.0857 -0.0204 -0.0308 -0.2533 -3.2707 -0.1038
S-104	addListenerMethod1.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PROMISE_ADD_LISTENER,NettyConstants.SCOPE,ExecutionPolicy.BOUNDARY)
T-104	addListenerMethod2.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PROMISE_ADD_LISTENER,NettyConstants.SCOPE,ExecutionPolicy.BOUNDARY)
H-104	-0.05323105305433273	addListenerMethod2.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PROMISE_ADD_LISTENER,NettyConstants.SCOPE,ExecutionPolicy.BOUNDARY)
D-104	-0.05323105305433273	addListenerMethod2.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PROMISE_ADD_LISTENER,NettyConstants.SCOPE,ExecutionPolicy.BOUNDARY)
P-104	-0.0349 -0.0340 -0.1209 -0.0552 -0.0138 -0.0310 -0.1071 -0.0222 -0.0465 -0.1072 -0.0160 -0.0081 -0.0225 -0.0980 -0.0122 -0.0855 -0.0330 -0.0132 -0.0381 -0.0101 -0.1068 -0.0364 -0.0810 -0.0472 -0.0159 -0.1120 -0.0174 -0.0514 -0.1200 -0.0102 -0.1016 -0.0161 -0.0562 -0.0973 -0.0117 -0.0126 -0.1121 -0.1073
S-756	GL.glTexSubImage2DEXT(target,level,xoffset,yoffset,width,height,format,type,pixels,Memory.getPosition(pixels))
T-756	GL.glTexSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixels,Memory.getPosition(pixels))
H-756	-0.06118878722190857	GL.glTexSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixels,Memory.getPosition(pixels))
D-756	-0.06118878722190857	GL.glTexSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixels,Memory.getPosition(pixels))
P-756	-0.0404 -0.0963 -0.0293 -0.0194 -0.0648 -0.0329 -0.0718 -0.1102 -0.0700 -0.0183 -0.0933 -0.0424 -0.1208 -0.0309 -0.0335 -0.1091 -0.0392 -0.0210 -0.1048 -0.0360 -0.0970 -0.0542 -0.0853 -0.0176 -0.0934 -0.0208 -0.0918 -0.0408 -0.1104 -0.0130 -0.0989 -0.0614 -0.0573 -0.0906 -0.0238 -0.0189 -0.1042
S-651	NONCONFORMING_LR_RULE(165,"rule <arg> is left recursive but doesn't conform to a pattern ANTLR can handle",ErrorSeverity.ERROR)
T-651	NONCONFORMING_LR_RULE(169,"rule <arg> is left recursive but doesn't conform to a pattern ANTLR can handle",ErrorSeverity.ERROR)
H-651	-0.05236300826072693	NONCONFORMING_LR_RULE(169,"rule <arg> is left recursive but doesn't conform to a pattern ANTLR can handle",ErrorSeverity.ERROR)
D-651	-0.05236300826072693	NONCONFORMING_LR_RULE(169,"rule <arg> is left recursive but doesn't conform to a pattern ANTLR can handle",ErrorSeverity.ERROR)
P-651	-0.0271 -0.0369 -0.0440 -0.0410 -0.0855 -0.0223 -0.0943 -0.0240 -0.0218 -0.0117 -0.1167 -0.0536 -0.0694 -0.0440 -0.0535 -0.0810 -0.0488 -0.0279 -0.0802 -0.0288 -0.0768 -0.0555 -0.0260 -0.0917 -0.0824 -0.0421 -0.0115 -0.0139 -0.0388 -0.0430 -0.0441 -0.0355 -0.0229 -0.0994 -0.0396 -0.0904 -0.1114
S-785	Status.constructStatuses(get(getBaseURL() + "statuses/retweeted_to_me.json",null,paging.asPostParameterList(),true))
T-785	Status.createStatuseList(get(getBaseURL() + "statuses/retweeted_to_me.json",null,paging.asPostParameterList(),true))
H-785	-0.054659295827150345	Status.createStatuseList(get(getBaseURL() + "statuses/retweeted_to_me.json",null,paging.asPostParameterList(),true))
D-785	-0.054659295827150345	Status.createStatuseList(get(getBaseURL() + "statuses/retweeted_to_me.json",null,paging.asPostParameterList(),true))
P-785	-0.0317 -0.1011 -0.0375 -0.0146 -0.0082 -0.0827 -0.0864 -0.0537 -0.0847 -0.0553 -0.0226 -0.0363 -0.0987 -0.0877 -0.0889 -0.0163 -0.0596 -0.0186 -0.0314 -0.0067 -0.0928 -0.0440 -0.0794 -0.0212 -0.1067 -0.0300 -0.0593 -0.0381 -0.0850 -0.0390 -0.0327 -0.1077 -0.0752 -0.0541 -0.0240 -0.0388 -0.0581 -0.0190 -0.1038
S-398	!StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),"flush") && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),"grant")
T-398	!StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),"flush") && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),"grant") && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),"create user")&& !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),"drop user")&& !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),"create database")&& !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),"drop database")
H-398	-0.11491753906011581	!StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),"flush") && !StringUtils.trim(ddl),"grant") && !StringUtils.trim(ddl))
D-398	-0.11491753906011581	!StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),"flush") && !StringUtils.trim(ddl),"grant") && !StringUtils.trim(ddl))
P-398	-0.0381 -0.0246 -0.0416 -0.0822 -0.1244 -0.0781 -0.0939 -0.0432 -0.0522 -0.0853 -0.0082 -0.0988 -0.0268 -0.3114 -0.1751 -0.0687 -0.0977 -0.0666 -0.0366 -0.0305 -0.0594 -0.0933 -0.0083 -0.1038 -0.0262 -0.2196 -0.1132 -0.0407 -0.0922 -0.2803 -0.0339 -0.0294 -0.0617 -0.1049 -0.0081 -0.0927 -0.0245 -1.1106 -0.3948
S-226	HELSINKY{ @Override public ServiceNowProducer get( ServiceNowEndpoint endpoint) throws Exception { return new HelsinkiServiceNowProducer(endpoint); } }
T-226	HELSINKI{ @Override public ServiceNowProducer get( ServiceNowEndpoint endpoint) throws Exception { return new HelsinkiServiceNowProducer(endpoint); } }
H-226	-0.05438431724905968	HELSINKI{ @Override public ServiceNowProducer get( ServiceNowEndpoint endpoint) throws Exception { return new HelsinkiServiceNowProducer(endpoint); } }
D-226	-0.05438431724905968	HELSINKI{ @Override public ServiceNowProducer get( ServiceNowEndpoint endpoint) throws Exception { return new HelsinkiServiceNowProducer(endpoint); } }
P-226	-0.0117 -0.0756 -0.0349 -0.0253 -0.0185 -0.0498 -0.0878 -0.0247 -0.0683 -0.0216 -0.0289 -0.0260 -0.1267 -0.0825 -0.0202 -0.0281 -0.0204 -0.0710 -0.0552 -0.0493 -0.0918 -0.1061 -0.0790 -0.0966 -0.0274 -0.0157 -0.0417 -0.0579 -0.0278 -0.0218 -0.0848 -0.0675 -0.0483 -0.0857 -0.0902 -0.0887
S-491	DiagnosticType.disabled("JSC_GOOG_MODULE_IN_NON_MODULE","goog.module() call must be the first statement in a module.")
T-491	DiagnosticType.error("JSC_GOOG_MODULE_IN_NON_MODULE","goog.module() call must be the first statement in a module.")
H-491	-0.05961103364825249	DiagnosticType.error("JSC_GOOG_MODULE_IN_NON_MODULE","goog.module() call must be the first statement in a module.")
D-491	-0.05961103364825249	DiagnosticType.error("JSC_GOOG_MODULE_IN_NON_MODULE","goog.module() call must be the first statement in a module.")
P-491	-0.0205 -0.0520 -0.0988 -0.2456 -0.0530 -0.0164 -0.0232 -0.0884 -0.0110 -0.0187 -0.0744 -0.0251 -0.0700 -0.0318 -0.0850 -0.0255 -0.0931 -0.0257 -0.0375 -0.0337 -0.0395 -0.1063 -0.0629 -0.0941 -0.0425 -0.0913 -0.0812 -0.0715 -0.0462 -0.0259 -0.0433 -0.0653 -0.0478 -0.0399 -0.0989
S-691	testError("class Foo extends BaseFoo { method() { Foo.base(this, 'method'); } }",GOOG_BASE_CLASS_ERROR)
T-691	testError("class Foo extends BaseFoo { method() { Foo.base(this, 'method'); } }",BASE_CLASS_ERROR)
H-691	-0.06817290186882019	testError("class Foo extends BaseFoo { method() { Foo.base(this, 'method'); } }",BASE_CLASS_ERROR)
D-691	-0.06817290186882019	testError("class Foo extends BaseFoo { method() { Foo.base(this, 'method'); } }",BASE_CLASS_ERROR)
P-691	-0.0983 -0.0803 -0.0782 -0.0612 -0.0300 -0.0143 -0.0260 -0.0379 -0.1233 -0.1128 -0.0622 -0.0880 -0.0320 -0.0956 -0.0475 -0.0940 -0.0423 -0.0749 -0.0775 -0.0642 -0.0580 -0.1275 -0.0898 -0.0745 -0.0063 -0.0779 -0.0228 -0.1004 -0.0318 -0.0791 -0.1048
S-800	Status.constructStatuses(get(getBaseURL() + "favorites/" + id+ ".json","page",String.valueOf(page),true))
T-800	Status.createStatuseList(get(getBaseURL() + "favorites/" + id+ ".json","page",String.valueOf(page),true))
H-800	-0.05810018256306648	Status.createStatuseList(get(getBaseURL() + "favorites/" + id+ ".json","page",String.valueOf(page),true))
D-800	-0.05810018256306648	Status.createStatuseList(get(getBaseURL() + "favorites/" + id+ ".json","page",String.valueOf(page),true))
P-800	-0.0400 -0.0971 -0.0329 -0.0126 -0.0055 -0.0662 -0.0854 -0.0609 -0.0920 -0.0473 -0.0166 -0.0271 -0.0927 -0.0953 -0.0739 -0.0484 -0.0076 -0.0638 -0.0833 -0.0573 -0.0311 -0.0520 -0.0332 -0.0518 -0.0741 -0.0464 -0.0364 -0.1207 -0.0107 -0.0892 -0.0728 -0.1244 -0.0572 -0.0255 -0.1022
S-545	/** * Frequency in milliseconds that the consumer offsets are auto-committed to Kafka if 'enable.auto.commit' true. */ private Long autoCommitInterval;
T-545	/** * Frequency in milliseconds that the consumer offsets are auto-committed to Kafka if 'enable.auto.commit' true. */ private Integer autoCommitInterval;
H-545	-0.08996786177158356	/** * Frequency in milliseconds that the consumer offsets are auto-committed to Kafka if 'enable.auto.commit' true. */ private Integer autoCommitInterval;
D-545	-0.08996786177158356	/** * Frequency in milliseconds that the consumer offsets are auto-committed to Kafka if 'enable.auto.commit' true. */ private Integer autoCommitInterval;
P-545	-0.0234 -0.0811 -0.1056 -0.1015 -0.4634 -0.0975 -0.0643 -0.0945 -0.3697 -0.0789 -0.0314 -0.1156 -0.0402 -0.0440 -0.0214 -0.0927 -0.0749 -0.0408 -0.1034 -0.0295 -0.0975 -0.0886 -0.0561 -0.1501 -0.0714 -0.0512 -0.0401 -0.0972 -0.0319 -0.0344 -0.0220 -0.0413 -0.1136
S-373	booleanSessionProperty(LEGACY_ORDER_BY,"Use legacy rules for column resolution in ORDER BY clause",false,featuresConfig.isLegacyOrderBy())
T-373	booleanSessionProperty(LEGACY_ORDER_BY,"Use legacy rules for column resolution in ORDER BY clause",featuresConfig.isLegacyOrderBy(),false)
H-373	-0.22135546803474426	booleanSessionProperty(LEGACY_ORDER_BY,"Use legacy rules for column resolution in ORDER BY clause",true,featuresConfig.isLegacyOrderBy())
D-373	-0.22135546803474426	booleanSessionProperty(LEGACY_ORDER_BY,"Use legacy rules for column resolution in ORDER BY clause",true,featuresConfig.isLegacyOrderBy())
P-373	-0.1165 -0.0242 -0.0267 -0.0983 -0.0118 -0.0219 -0.0882 -0.1934 -0.0841 -0.0664 -0.0316 -0.0454 -0.0128 -0.4218 -0.0811 -0.0712 -0.9498 -0.0778 -0.3047 -0.0179 -0.7571 -0.0668 -0.0352 -0.0955 -1.2225 -0.0868 -0.1063 -0.0833 -0.9188 -0.7426 -0.1144 -0.1084
S-784	Status.constructStatuses(get(getBaseURL() + "statuses/user_timeline/" + id+ ".json",http.isAuthenticationEnabled()))
T-784	Status.createStatuseList(get(getBaseURL() + "statuses/user_timeline/" + id+ ".json",http.isAuthenticationEnabled()))
H-784	-0.05918440967798233	Status.createStatuseList(get(getBaseURL() + "statuses/user_timeline/" + id+ ".json",http.isAuthenticationEnabled()))
D-784	-0.05918440967798233	Status.createStatuseList(get(getBaseURL() + "statuses/user_timeline/" + id+ ".json",http.isAuthenticationEnabled()))
P-784	-0.0378 -0.1003 -0.0411 -0.0136 -0.0059 -0.0823 -0.0876 -0.0597 -0.0929 -0.0486 -0.0207 -0.0364 -0.0956 -0.1002 -0.0867 -0.0160 -0.0528 -0.0530 -0.0971 -0.0149 -0.0891 -0.0980 -0.0806 -0.0354 -0.0346 -0.0284 -0.0586 -0.0390 -0.1203 -0.0589 -0.0671 -0.0270 -0.0274 -0.1045
S-151	synchronized (this) { if (transformed == null) { transformed=initializer.initializeBroadcastVariable(data); data=null; } return transformed; }
T-151	synchronized (references) { if (transformed == null) { transformed=initializer.initializeBroadcastVariable(data); data=null; } return transformed; }
H-151	-0.06612879037857056	synchronized (references) { if (transformed == null) { transformed=initializer.initializeBroadcastVariable(data); data=null; } return transformed; }
D-151	-0.06612879037857056	synchronized (references) { if (transformed == null) { transformed=initializer.initializeBroadcastVariable(data); data=null; } return transformed; }
P-151	-0.0263 -0.0912 -0.0137 -0.0988 -0.1031 -0.0874 -0.0973 -0.0193 -0.0280 -0.0691 -0.1000 -0.1052 -0.0237 -0.0586 -0.0272 -0.1141 -0.0176 -0.0120 -0.0290 -0.1164 -0.0586 -0.0544 -0.1010 -0.0633 -0.0662 -0.0929 -0.0938 -0.0710 -0.0275 -0.0647 -0.0939 -0.0907
S-612	DiagnosticType.error("JSC_NAME_REFERENCE_IN_EXTERNS","accessing name {0} in externs has no effect")
T-612	DiagnosticType.warning("JSC_NAME_REFERENCE_IN_EXTERNS","accessing name {0} in externs has no effect")
H-612	-0.07042114436626434	DiagnosticType.warning("JSC_NAME_REFERENCE_IN_EXTERNS","accessing name {0} in externs has no effect")
D-612	-0.07042114436626434	DiagnosticType.warning("JSC_NAME_REFERENCE_IN_EXTERNS","accessing name {0} in externs has no effect")
P-612	-0.0222 -0.0513 -0.0986 -0.2131 -0.0611 -0.0214 -0.0196 -0.1061 -0.0279 -0.0901 -0.0062 -0.0737 -0.0616 -0.0811 -0.0259 -0.0365 -0.0645 -0.0673 -0.0287 -0.0557 -0.0453 -0.0270 -0.1004 -0.0535 -0.0284 -0.0446 -0.0725 -0.0610 -0.3387 -0.1060 -0.0930
S-235	!template.contains(PATH_AUTO_NODE_INDEX) && !template.contains(PATH_AUTO_RELATIONSHIP_INDEX)
T-235	!template.contains(PATH_AUTO_NODE_INDEX) && !template.contains(PATH_AUTO_RELATIONSHIP_INDEX) && !template.contains("_auto_")
H-235	-0.07099607586860657	!template.contains(PATH_AUTO_NODE_INDEX) && !template.contains(PATH_AUTO_RELATIONSHIP_INDEX) && !template.contains("_auto_")
D-235	-0.07099607586860657	!template.contains(PATH_AUTO_NODE_INDEX) && !template.contains(PATH_AUTO_RELATIONSHIP_INDEX) && !template.contains("_auto_")
P-235	-0.0209 -0.0591 -0.0950 -0.0638 -0.0875 -0.0366 -0.1061 -0.0384 -0.0907 -0.0393 -0.1068 -0.0450 -0.0986 -0.0358 -0.0273 -0.0567 -0.0929 -0.0465 -0.1054 -0.0335 -0.1015 -0.0358 -0.0887 -0.0061 -0.0445 -0.0132 -0.0173 -0.0872 -0.0301 -0.0877 -0.2296 -0.0122 -0.0296 -0.1049 -0.0588 -0.1434 -0.0180 -0.0322 -0.1097 -0.1996 -0.1750
S-470	NbPreferences.forModule(DataTableTopComponent.class).getBoolean(DATA_LABORATORY_ONLY_VISIBLE,false)
T-470	NbPreferences.forModule(DataTableTopComponent.class).getBoolean(DATA_LABORATORY_ONLY_VISIBLE,true)
H-470	-0.064591184258461	NbPreferences.forModule(DataTableTopComponent.class).getBoolean(DATA_LABORATORY_ONLY_VISIBLE,true)
D-470	-0.064591184258461	NbPreferences.forModule(DataTableTopComponent.class).getBoolean(DATA_LABORATORY_ONLY_VISIBLE,true)
P-470	-0.0603 -0.0267 -0.0337 -0.1149 -0.0661 -0.0454 -0.0850 -0.0157 -0.0685 -0.0243 -0.2045 -0.0611 -0.1098 -0.0650 -0.0403 -0.0958 -0.0404 -0.0738 -0.0148 -0.0127 -0.0305 -0.0438 -0.0802 -0.0199 -0.0861 -0.0157 -0.1286 -0.0554 -0.1050 -0.1138
S-173	new SimpleAttributeDefinition("ha",new ModelNode().set(HornetQClient.DEFAULT_HA),ModelType.BOOLEAN,false)
T-173	new SimpleAttributeDefinition("ha",new ModelNode().set(HornetQClient.DEFAULT_HA),ModelType.BOOLEAN,true)
H-173	-0.10672380775213242	new SimpleAttributeDefinition("ha",new ModelNode().set(HornetQClient.DEFAULT_HA),ModelType.BOOLEAN,true)
D-173	-0.10672380775213242	new SimpleAttributeDefinition("ha",new ModelNode().set(HornetQClient.DEFAULT_HA),ModelType.BOOLEAN,true)
P-173	-0.0752 -0.0383 -0.0339 -0.0245 -0.0615 -0.1932 -0.0321 -0.0479 -0.0146 -0.0708 -0.0474 -0.0837 -0.0601 -0.0441 -0.0462 -0.0418 -0.0511 -0.1026 -0.0443 -0.0680 -1.0023 -0.3535 -0.0404 -0.0409 -0.1052 -0.0111 -0.1033 -0.1385 -0.1158 -0.1096
S-772	GL.glCopyTexSubImage2DEXT(target,level,xoffset,yoffset,x,y,width,height)
T-772	GL.glCopyTexSubImage2D(target,level,xoffset,yoffset,x,y,width,height)
H-772	-0.06909840553998947	GL.glCopyTexSubImage2D(target,level,xoffset,yoffset,x,y,width,height)
D-772	-0.06909840553998947	GL.glCopyTexSubImage2D(target,level,xoffset,yoffset,x,y,width,height)
P-772	-0.0368 -0.0918 -0.0200 -0.0541 -0.0185 -0.0662 -0.0296 -0.1287 -0.1173 -0.0743 -0.0259 -0.0914 -0.0365 -0.1130 -0.0431 -0.0394 -0.1135 -0.0587 -0.0287 -0.1280 -0.0416 -0.1055 -0.0318 -0.1216 -0.0381 -0.0891 -0.0499 -0.1082 -0.1024
S-625	/** * Gets the key of service port. * @return key of service port */ public String getPortKey(){ return mPortKey; }
T-625	/** * Gets the key of service port. * @return key of service port */ public PropertyKey getPortKey(){ return mPortKey; }
H-625	-0.055182281881570816	/** * Gets the key of service port. * @return key of service port */ public PropertyKey getPortKey(){ return mPortKey; }
D-625	-0.055182281881570816	/** * Gets the key of service port. * @return key of service port */ public PropertyKey getPortKey(){ return mPortKey; }
P-625	-0.0268 -0.1107 -0.0433 -0.0475 -0.0788 -0.0305 -0.0570 -0.0386 -0.0519 -0.0892 -0.0604 -0.0495 -0.0327 -0.0271 -0.0340 -0.0468 -0.0773 -0.0237 -0.0642 -0.0312 -0.0280 -0.0150 -0.0715 -0.0557 -0.0981 -0.0476 -0.0306 -0.0552 -0.0619 -0.1097 -0.1163
S-494	StringUtil.in(name,"base","basefont","bgsound","command","link","meta","noframes","style","title")
T-494	StringUtil.in(name,"base","basefont","bgsound","command","link","meta","noframes","script","style","title")
H-494	-0.05418338626623154	StringUtil.in(name,"base","basefont","bgsound","command","link","meta","noframes","script","title")
D-494	-0.05418338626623154	StringUtil.in(name,"base","basefont","bgsound","command","link","meta","noframes","script","title")
P-494	-0.0276 -0.0868 -0.0836 -0.0930 -0.0350 -0.0764 -0.0257 -0.0330 -0.0269 -0.0137 -0.0593 -0.0288 -0.0372 -0.0045 -0.0445 -0.0308 -0.0592 -0.0276 -0.0567 -0.0548 -0.1026 -0.0496 -0.0491 -0.0122 -0.0661 -0.1065 -0.0909 -0.0151 -0.1206 -0.1076
S-12	test(externs,js,(String)null,ConstCheck.CONST_REASSIGNED_VALUE_ERROR,null)
T-12	test(externs,js,(String)null,null,ConstCheck.CONST_REASSIGNED_VALUE_ERROR)
H-12	-0.06415876746177673	test(externs,js,(String)null,ConstCheck.CONST_REASSIGNED_VALUE_ERROR)
D-12	-0.06415876746177673	test(externs,js,(String)null,ConstCheck.CONST_REASSIGNED_VALUE_ERROR)
P-12	-0.1518 -0.1358 -0.0162 -0.0282 -0.0468 -0.1000 -0.0272 -0.1038 -0.1088 -0.0401 -0.0854 -0.0570 -0.1085 -0.0614 -0.0561 -0.0970 -0.0149 -0.0732 -0.0381 -0.0043 -0.0195 -0.0158 -0.0933 -0.0473 -0.0815 -0.0177 -0.0533 -0.1136
S-615	LOG.debug("Retrieving location for state={} of job={} from the cache.",jobId,queryableStateName)
T-615	LOG.debug("Retrieving location for state={} of job={} from the cache.",queryableStateName,jobId)
H-615	-0.05161159113049507	LOG.debug("Retrieving location for state={} of job={} from the cache.",queryableStateName,jobId)
D-615	-0.05161159113049507	LOG.debug("Retrieving location for state={} of job={} from the cache.",queryableStateName,jobId)
P-615	-0.0527 -0.0952 -0.0253 -0.0606 -0.0216 -0.0289 -0.0425 -0.0313 -0.0853 -0.0251 -0.0288 -0.0491 -0.0302 -0.0433 -0.0401 -0.0625 -0.0543 -0.0843 -0.0402 -0.0625 -0.0201 -0.0161 -0.0471 -0.0735 -0.1130 -0.0196 -0.0588 -0.0809 -0.1040
S-271	assertTrueEventually(new AssertTask(){ @Override public void run() throws Exception { assertFalse(lock.isLocked()); } } ,5)
T-271	assertTrueEventually(new AssertTask(){ @Override public void run() throws Exception { assertFalse(lock.isLocked()); } } ,20)
H-271	-0.07758011668920517	assertTrueEventually(new AssertTask(){ @Override public void run() throws Exception { assertFalse(lock.isLocked()); } } ,20)
D-271	-0.07758011668920517	assertTrueEventually(new AssertTask(){ @Override public void run() throws Exception { assertFalse(lock.isLocked()); } } ,20)
P-271	-0.0339 -0.0417 -0.0311 -0.0960 -0.0339 -0.0441 -0.0472 -0.0553 -0.0814 -0.0478 -0.0757 -0.0592 -0.0581 -0.0989 -0.0309 -0.0751 -0.0768 -0.0311 -0.0809 -0.0358 -0.0987 -0.0681 -0.0230 -0.0284 -0.0848 -0.0615 -0.5210 -0.1248 -0.1045
S-380	new JSONParseSpec(timestampSpec,new DimensionsSpec(dimensions,dimensionExclusions,spatialDimensions),JSONParseSpec.JSON)
T-380	new JSONParseSpec(timestampSpec,new DimensionsSpec(dimensions,dimensionExclusions,spatialDimensions))
H-380	-0.054342810064554214	new JSONParseSpec(timestampSpec,new DimensionsSpec(dimensions,dimensionExclusions,spatialDimensions))
D-380	-0.054342810064554214	new JSONParseSpec(timestampSpec,new DimensionsSpec(dimensions,dimensionExclusions,spatialDimensions))
P-380	-0.0789 -0.0382 -0.0339 -0.0522 -0.1062 -0.0317 -0.0540 -0.0878 -0.0323 -0.0469 -0.0119 -0.0596 -0.1170 -0.0226 -0.0779 -0.0158 -0.0241 -0.0189 -0.0867 -0.0220 -0.0223 -0.1072 -0.1017
S-296	cache.setColor(style.fontColor == null ? color : Color.tmp.set(color).mul(style.fontColor))
T-296	cache.setColors(style.fontColor == null ? color : Color.tmp.set(color).mul(style.fontColor))
H-296	-0.14393672347068787	cache.set(style.fontColor == null ? color : Color.tmp.set(color).mul(style.fontColor))
D-296	-0.14393672347068787	cache.set(style.fontColor == null ? color : Color.tmp.set(color).mul(style.fontColor))
P-296	-0.0392 -0.0909 -0.3000 -0.2148 -0.1077 -0.0975 -0.0572 -0.1471 -0.0397 -0.0583 -0.0630 -0.4631 -0.0515 -0.0260 -0.0958 -0.0166 -0.0848 -0.0495 -0.0857 -0.0817 -0.0888 -1.0973 -0.1079 -0.0917 -0.0898 -0.0763 -0.1453 -0.2012 -0.1060
S-584	Status.constructStatuses(get(getBaseURL() + "statuses/retweets_of_me.json",null,true))
T-584	Status.createStatuseList(get(getBaseURL() + "statuses/retweets_of_me.json",null,true))
H-584	-0.058104392141103745	Status.createStatuseList(get(getBaseURL() + "statuses/retweets_of_me.json",null,true))
D-584	-0.058104392141103745	Status.createStatuseList(get(getBaseURL() + "statuses/retweets_of_me.json",null,true))
P-584	-0.0367 -0.0973 -0.0376 -0.0174 -0.0081 -0.0844 -0.0878 -0.0495 -0.0884 -0.0519 -0.0241 -0.0350 -0.0989 -0.0959 -0.0916 -0.0211 -0.0593 -0.0375 -0.0203 -0.0992 -0.0626 -0.0780 -0.0249 -0.1082 -0.0320 -0.0529 -0.0390 -0.0834 -0.0462 -0.0259 -0.1062
S-170	refreshableViewWrapper.addView(newEmptyView,ViewGroup.LayoutParams.MATCH_PARENT,ViewGroup.LayoutParams.MATCH_PARENT)
T-170	refreshableViewWrapper.addView(newEmptyView)
H-170	-0.06553025543689728	refreshableViewWrapper.addView(newEmptyView)
D-170	-0.06553025543689728	refreshableViewWrapper.addView(newEmptyView)
P-170	-0.0810 -0.0195 -0.0808 -0.0341 -0.0856 -0.0388 -0.1078 -0.0785 -0.0245 -0.0305 -0.0934 -0.0666 -0.1106
2021-10-24 19:47:04 | INFO | fairseq_cli.generate | NOTE: hypothesis and token scores are output in base 2
2021-10-24 19:47:04 | INFO | fairseq_cli.generate | Translated 827 sentences (12053 tokens) in 12.0s (69.15 sentences/s, 1007.88 tokens/s)
2021-10-24 19:47:04 | INFO | fairseq_cli.generate | Generate test with beam=5: BLEU(score=91.90439917066543, counts=[10084, 9143, 8270, 7489], totals=[10509, 9682, 8864, 8066], precisions=[95.95584736892188, 94.43296839495972, 93.29873646209386, 92.84651624101166], bp=0.9763986826486943, sys_len=10509, ref_len=10760)
