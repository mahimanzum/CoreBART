2021-10-24 19:41:56 | INFO | fairseq_cli.generate | Namespace(all_gather_list_size=16384, beam=5, bf16=False, bpe=None, broadcast_buffers=False, bucket_cap_mb=25, checkpoint_suffix='', cpu=False, criterion='cross_entropy', data='../processed_data/small/data-bin', data_buffer_size=10, dataset_impl=None, ddp_backend='c10d', decoding_format=None, device_id=0, distributed_backend='nccl', distributed_init_method=None, distributed_no_spawn=False, distributed_port=-1, distributed_rank=0, distributed_world_size=1, distributed_wrapper='DDP', diverse_beam_groups=-1, diverse_beam_strength=0.5, diversity_rate=-1.0, empty_cache_freq=0, eval_bleu=False, eval_bleu_args=None, eval_bleu_detok='space', eval_bleu_detok_args=None, eval_bleu_print_samples=False, eval_bleu_remove_bpe=None, eval_tokenized_bleu=False, fast_stat_sync=False, find_unused_parameters=False, fix_batches_to_gpus=False, force_anneal=None, fp16=False, fp16_init_scale=128, fp16_no_flatten_grads=False, fp16_scale_tolerance=0.0, fp16_scale_window=None, gen_subset='test', iter_decode_eos_penalty=0.0, iter_decode_force_max_iter=False, iter_decode_max_iter=10, iter_decode_with_beam=1, iter_decode_with_external_reranker=False, langs='java,python,en_XX', left_pad_source='True', left_pad_target='False', lenpen=1, load_alignments=False, localsgd_frequency=3, log_format=None, log_interval=100, lr_scheduler='fixed', lr_shrink=0.1, match_source_len=False, max_len_a=0, max_len_b=200, max_sentences=128, max_source_positions=1024, max_target_positions=1024, max_tokens=None, memory_efficient_bf16=False, memory_efficient_fp16=False, min_len=1, min_loss_scale=0.0001, model_overrides='{}', model_parallel_size=1, momentum=0.99, nbest=1, no_beamable_mm=False, no_early_stop=False, no_progress_bar=False, no_repeat_ngram_size=0, no_seed_provided=True, nprocs_per_node=1, num_batch_buckets=0, num_shards=1, num_workers=1, optimizer='nag', path='../models/plbart/repetition/small/checkpoint_best.pt', prefix_size=0, print_alignment=False, print_step=False, profile=False, quantization_config_path=None, quiet=False, remove_bpe='sentencepiece', replace_unk=None, required_batch_size_multiple=8, results_path=None, retain_dropout=False, retain_dropout_modules=None, retain_iter_history=False, sacrebleu=True, sampling=False, sampling_topk=-1, sampling_topp=-1.0, score_reference=False, seed=1, shard_id=0, skip_invalid_size_inputs_valid_test=False, slowmo_algorithm='LocalSGD', slowmo_momentum=None, source_lang='source', target_lang='target', task='translation_without_lang_token', temperature=1.0, tensorboard_logdir='', threshold_loss_scale=None, tokenizer=None, tpu=False, truncate_source=True, unkpen=0, unnormalized=False, upsample_primary=1, user_dir='../user_dir', warmup_updates=0, weight_decay=0.0)
2021-10-24 19:41:56 | INFO | fairseq.tasks.translation | [source] dictionary: 50001 types
2021-10-24 19:41:56 | INFO | fairseq.tasks.translation | [target] dictionary: 50001 types
2021-10-24 19:41:56 | INFO | fairseq.data.data_utils | loaded 827 examples from: ../processed_data/small/data-bin/test.source-target.source
2021-10-24 19:41:56 | INFO | fairseq.data.data_utils | loaded 827 examples from: ../processed_data/small/data-bin/test.source-target.target
2021-10-24 19:41:56 | INFO | fairseq.tasks.translation | ../processed_data/small/data-bin test source-target 827 examples
2021-10-24 19:41:56 | INFO | fairseq_cli.generate | loading model(s) from ../models/plbart/repetition/small/checkpoint_best.pt
S-378	this.originX
T-378	this.originY
H-378	-0.3127915859222412	this.originY
D-378	-0.3127915859222412	this.originY
P-378	-0.0660 -0.1161 -0.7867 -0.2690 -0.3261
S-384	EJBException nsee
T-384	IllegalStateException nsee
H-384	-0.08296278119087219	IllegalStateException nsee
D-384	-0.08296278119087219	IllegalStateException nsee
P-384	-0.0339 -0.0586 -0.2536 -0.0077 -0.0611
S-300	IllegalStateException ise
T-300	IllegalArgumentException ise
H-300	-0.16229493916034698	IllegalArgumentException ise
D-300	-0.16229493916034698	IllegalArgumentException ise
P-300	-0.4962 -0.0259 -0.1702 -0.0548 -0.0644
S-309	assertTrue(found)
T-309	assertFalse(found)
H-309	-0.062269553542137146	assertFalse(found)
D-309	-0.062269553542137146	assertFalse(found)
P-309	-0.0888 -0.0667 -0.0161 -0.0497 -0.0901
S-320	Set<Renderer>
T-320	Set<String>
H-320	-0.1877959817647934	ImmutableSet<Renderer>
D-320	-0.1877959817647934	ImmutableSet<Renderer>
P-320	-0.6091 -0.1131 -0.0861 -0.0501 -0.0805
S-357	0 - originY
T-357	0 - originX
H-357	-0.05894051864743233	0 - originX
D-357	-0.05894051864743233	0 - originX
P-357	-0.0451 -0.0489 -0.0239 -0.0913 -0.0855
S-252	group.getId()
T-252	group.id()
H-252	-0.14625349640846252	group.id()
D-252	-0.14625349640846252	group.id()
P-252	-0.3198 -0.2350 -0.0017 -0.0807 -0.0940
S-251	TIMEOUT=20000L
T-251	TIMEOUT=40000L
H-251	-0.33689308166503906	TIMEOUT=40000L
D-251	-0.33689308166503906	TIMEOUT=40000L
P-251	-0.0199 -1.4687 -0.0282 -0.0717 -0.0959
S-390	activeCount == maxActive
T-390	activeCount >= maxActive
H-390	-0.6281992793083191	activeCount <= maxActive
D-390	-0.6281992793083191	activeCount <= maxActive
P-390	-0.0943 -2.8892 -0.0300 -0.0449 -0.0826
S-418	e.getMessage()
T-418	e.toString()
H-418	-0.07301034778356552	e.toString()
D-418	-0.07301034778356552	e.toString()
P-418	-0.0677 -0.1242 -0.0139 -0.0736 -0.0857
S-515	new StringBuilder(254)
T-515	new StringBuilder(253)
H-515	-0.062124259769916534	new StringBuilder(253)
D-515	-0.062124259769916534	new StringBuilder(253)
P-515	-0.0684 -0.0416 -0.0731 -0.0556 -0.0719
S-530	idAnnotation != null
T-530	idAnnotation != null && !method.isBridge()
H-530	-0.05563042685389519	idAnnotation != null && !method.isBridge()
D-530	-0.05563042685389519	idAnnotation != null && !method.isBridge()
P-530	-0.0831 -0.0167 -0.0723 -0.0525 -0.0460 -0.0012 -0.0029 -0.0320 -0.1566 -0.0084 -0.1089 -0.0869
S-254	items[30]
T-254	items[29]
H-254	-0.27397632598876953	items[30]
D-254	-0.27397632598876953	items[30]
P-254	-0.0149 -0.0503 -1.1454 -0.0719 -0.0874
S-540	id=15801
T-540	id=10801
H-540	-0.08644232898950577	id=10801
D-540	-0.08644232898950577	id=10801
P-540	-0.0447 -0.2633 -0.0308 -0.0205 -0.0729
S-775	id=15804
T-775	id=10804
H-775	-0.13327451050281525	id=10804
D-775	-0.13327451050281525	id=10804
P-775	-0.0383 -0.3593 -0.0507 -0.0848
S-3	libDirectory="."
T-3	outputDirectory="."
H-3	-0.06855228543281555	outputDirectory="."
D-3	-0.06855228543281555	outputDirectory="."
P-3	-0.0293 -0.0211 -0.0432 -0.0276 -0.2216
S-397	id=15806
T-397	id=10806
H-397	-0.1791113317012787	id=10806
D-397	-0.1791113317012787	id=10806
P-397	-0.0373 -0.3594 -0.2228 -0.0970
S-528	id=15848
T-528	id=10995
H-528	-0.08642802387475967	id=10848
D-528	-0.08642802387475967	id=10848
P-528	-0.0428 -0.2574 -0.0254 -0.0279 -0.0786
S-648	tiled != null
T-648	drawable != null
H-648	-0.04785658046603203	drawable != null
D-648	-0.04785658046603203	drawable != null
P-648	-0.0101 -0.0257 -0.0712 -0.0844
S-658	TIMEOUT=15000
T-658	TIMEOUT=30000
H-658	-0.6339478492736816	TIMEOUT=18000
D-658	-0.6339478492736816	TIMEOUT=18000
P-658	-0.0219 -0.9290 -1.8219 -0.3061 -0.0908
S-640	writeDelaySeconds=2
T-640	writeDelaySeconds=10
H-640	-0.17905159294605255	writeDelaySeconds=3000
D-640	-0.17905159294605255	writeDelaySeconds=3000
P-640	-0.0633 -0.0183 -0.0205 -0.5346 -0.1296 -0.3079
S-198	getHttpConnectionManager()
T-198	getClientConnectionManager()
H-198	-0.11749359220266342	getClientConnectionManager()
D-198	-0.11749359220266342	getClientConnectionManager()
P-198	-0.2384 -0.0641 -0.0323 -0.1602 -0.0926
S-21	return softDepend;
T-21	return loadBefore;
H-21	-0.46002399921417236	return depends;
D-21	-0.46002399921417236	return depends;
P-21	-0.0370 -0.9826 -0.7340 -0.0865
S-134	List<String>
T-134	ImmutableList<String>
H-134	-0.12000922113656998	ImmutableList<String>
D-134	-0.12000922113656998	ImmutableList<String>
P-134	-0.2446 -0.0879 -0.1074 -0.0775 -0.0826
S-135	getRequestMethod == null
T-135	getRequestMethod != null
H-135	-0.04818651080131531	getRequestMethod != null
D-135	-0.04818651080131531	getRequestMethod != null
P-135	-0.0355 -0.0446 -0.0217 -0.0703 -0.0687
S-155	Object... pathParams
T-155	String... pathParams
H-155	-0.51218581199646	String... pathParams
D-155	-0.51218581199646	String... pathParams
P-155	-1.9514 -0.0454 -0.2683 -0.2026 -0.0932
S-534	Metric<Integer>
T-534	Metric<Long>
H-534	-0.08667320013046265	Metric<Long>
D-534	-0.08667320013046265	Metric<Long>
P-534	-0.0063 -0.0432 -0.2101 -0.0832 -0.0905
S-148	knownType != null
T-148	typeName != null
H-148	-0.17669428884983063	typeName != null
D-148	-0.17669428884983063	typeName != null
P-148	-0.0020 -0.0725 -0.0638 -0.5686
S-524	(Node)container
T-524	(Relationship)container
H-524	-0.11533981561660767	(Relationship)container
D-524	-0.11533981561660767	(Relationship)container
P-524	-0.0661 -0.3276 -0.0164 -0.0641 -0.1025
S-84	this.comparator
T-84	this.comparatorIgnoringType
H-84	-0.43616700172424316	this.comparator
D-84	-0.43616700172424316	this.comparator
P-84	-0.0537 -0.1144 -1.0358 -0.0091 -0.9679
S-324	buf.clear()
T-324	buf.discardReadBytes()
H-324	-0.05157071724534035	buf.discardReadBytes()
D-324	-0.05157071724534035	buf.discardReadBytes()
P-324	-0.0524 -0.1504 -0.0035 -0.0064 -0.0086 -0.0467 -0.0542 -0.0904
S-68	s.count()
T-68	RT.count(s)
H-68	-0.14562253654003143	RT.count(s)
D-68	-0.14562253654003143	RT.count(s)
P-68	-0.4449 -0.1749 -0.0763 -0.1603 -0.0203 -0.0601 -0.0826
S-480	s.count()
T-480	RT.count(s)
H-480	-0.14562253654003143	RT.count(s)
D-480	-0.14562253654003143	RT.count(s)
P-480	-0.4449 -0.1749 -0.0763 -0.1603 -0.0203 -0.0601 -0.0826
S-682	sb.toString()
T-682	line.toString(charset)
H-682	-0.0939408540725708	line.toString(charset)
D-682	-0.0939408540725708	line.toString(charset)
P-682	-0.1132 -0.1502 -0.0292 -0.2141 -0.0021 -0.0631 -0.0857
S-821	remoteAddressAliases != null
T-821	remoteAddressAliases != null && returnValue
H-821	-0.5468581914901733	remoteAddressAliases != null && requestURI != null
D-821	-0.5468581914901733	remoteAddressAliases != null && requestURI != null
P-821	-0.4639 -0.0338 -0.0410 -0.0502 -0.0310 -2.2820 -2.4057 -0.0257 -0.0603 -0.0748
S-573	lock.lock()
T-573	lock.unlock()
H-573	-0.07197978347539902	lock.unlock()
D-573	-0.07197978347539902	lock.unlock()
P-573	-0.0432 -0.1330 -0.0020 -0.0892 -0.0768 -0.0878
S-501	0xff << shift
T-501	0xffL << shift
H-501	-0.33229753375053406	0xffL << shift
D-501	-0.33229753375053406	0xffL << shift
P-501	-0.0949 -0.2465 -1.3415 -0.0095 -0.2294 -0.0720
S-423	SocketTimeoutException.class
T-423	RetriesExhaustedException.class
H-423	-0.7527704834938049	Exception.class
D-423	-0.7527704834938049	Exception.class
P-423	-1.8088 -1.0716 -0.0336 -0.0970
S-332	Mockito.any()
T-332	Mockito.any(ProducerRecord.class)
H-332	-0.18879206478595734	Mockito.any(WorkerNetAddress.class)
D-332	-0.18879206478595734	Mockito.any(WorkerNetAddress.class)
P-332	-0.0145 -0.1058 -0.0798 -0.0908 -0.3019 -0.0052 -0.0288 -1.2641 -0.0111 -0.0937 -0.0811
S-145	routeList == null
T-145	routeList == null || routeList.isEmpty()
H-145	-0.11933545023202896	routeList == null || routeList.isEmpty()
D-145	-0.11933545023202896	routeList == null || routeList.isEmpty()
P-145	-0.0097 -0.0792 -0.0734 -0.0706 -0.3650 -0.0124 -0.0426 -0.0479 -0.3720 -0.1078 -0.1321
S-298	propEditor != null
T-298	propEditor != null && !type.isArray()
H-298	-0.10221204161643982	propEditor != null && !type.isArray()
D-298	-0.10221204161643982	propEditor != null && !type.isArray()
P-298	-0.1118 -0.0428 -0.0662 -0.0573 -0.0433 -0.0534 -0.0044 -0.0204 -0.6603 -0.0295 -0.0450 -0.0923
S-776	new byte[10]
T-776	new byte[11]
H-776	-0.08278465270996094	new byte[12]
D-776	-0.08278465270996094	new byte[12]
P-776	-0.0639 -0.0306 -0.2125 -0.0489 -0.0578 -0.0830
S-605	environmentVariableMode=1
T-605	environmentVariableMode=2
H-605	-0.5173518657684326	environmentVariableMode=2
D-605	-0.5173518657684326	environmentVariableMode=2
P-605	-1.1594 -0.0706 -0.0296 -1.1927 -0.1344
S-86	getCurrCapacity()
T-86	getCurrCapacityUsed()
H-86	-0.05262760818004608	getCurrCapacityUsed()
D-86	-0.05262760818004608	getCurrCapacityUsed()
P-86	-0.0204 -0.0410 -0.0565 -0.0188 -0.0694 -0.1096
S-171	(AST)child
T-171	(DetailAST)child
H-171	-0.04743671789765358	(DetailAST)child
D-171	-0.04743671789765358	(DetailAST)child
P-171	-0.1135 -0.0030 -0.0017 -0.0636 -0.0317 -0.0711
S-690	y / vz
T-690	z / vz
H-690	-0.05128880590200424	z / vz
D-690	-0.05128880590200424	z / vz
P-690	-0.0473 -0.0214 -0.0824 -0.0253 -0.0801
S-701	newId > max
T-701	newId >= max
H-701	-0.044667333364486694	newId >= max
D-701	-0.044667333364486694	newId >= max
P-701	-0.0432 -0.0481 -0.0122 -0.0378 -0.0821
S-728	xAmount > 0
T-728	xAmount != 0
H-728	-0.40825822949409485	xAmount != 0 && xAmount > 0
D-728	-0.40825822949409485	xAmount != 0 && xAmount > 0
P-728	-0.1229 -0.0531 -2.0622 -0.1178 -1.4328 -0.0629 -0.0392 -0.0434 -0.0938 -0.0545
S-7	AsyncHttpClient.class
T-7	AsyncHttpClientConfig.class
H-7	-0.5116142630577087	AsyncHttpClientConfig.class
D-7	-0.5116142630577087	AsyncHttpClientConfig.class
P-7	-0.3413 -0.0136 -2.3865 -0.1854 -0.0539 -0.0889
S-688	id=15844
T-688	id=10844
H-688	-0.08154179155826569	id=10844
D-688	-0.08154179155826569	id=10844
P-688	-0.0414 -0.2637 -0.0243 -0.0150 -0.0634
S-447	getCompletePredicate()
T-447	getHandledPredicate()
H-447	-0.10643456131219864	getHandledPredicate()
D-447	-0.10643456131219864	getHandledPredicate()
P-447	-0.4165 -0.0387 -0.0003 -0.0198 -0.0705 -0.0929
S-214	cursor.retry()
T-214	cursor.shouldRetry()
H-214	-0.08471750468015671	cursor.shouldRetry()
D-214	-0.08471750468015671	cursor.shouldRetry()
P-214	-0.0479 -0.1338 -0.1409 -0.0325 -0.0617 -0.0916
S-227	path.toString()
T-227	path.getPath()
H-227	-0.3461313843727112	path.getPath()
D-227	-0.3461313843727112	path.getPath()
P-227	-0.0975 -0.1105 -1.4651 -0.1657 -0.1592 -0.0787
S-290	new StringBuilder(730)
T-290	new StringBuilder(729)
H-290	-0.05110820010304451	new StringBuilder(729)
D-290	-0.05110820010304451	new StringBuilder(729)
P-290	-0.0793 -0.0411 -0.0251 -0.0227 -0.0571 -0.0814
S-409	put(v)
T-409	putBytes(v)
H-409	-0.05988321453332901	putBytes(v)
D-409	-0.05988321453332901	putBytes(v)
P-409	-0.0584 -0.0007 -0.0812 -0.0614 -0.0670 -0.0906
S-184	bodyParts != null
T-184	status != null
H-184	-0.3846873342990875	status != null
D-184	-0.3846873342990875	status != null
P-184	-0.0764 -0.0657 -0.0697 -1.3270
S-395	version == null
T-395	version == null || version.equals("")
H-395	-0.07740487903356552	version == null || version.equals("")
D-395	-0.07740487903356552	version == null || version.equals("")
P-395	-0.0091 -0.0489 -0.0574 -0.1797 -0.0105 -0.0527 -0.0677 -0.1324 -0.1382
S-669	n <= k
T-669	n <= k && i > 0
H-669	-0.174155130982399	n < k
D-669	-0.174155130982399	n < k
P-669	-0.4728 -0.1260 -0.0218 -0.0760
S-76	contentType != null
T-76	contentType != null && charset == null
H-76	-0.043960485607385635	contentType != null && charset == null
D-76	-0.043960485607385635	contentType != null && charset == null
P-76	-0.0139 -0.0266 -0.0554 -0.0488 -0.0053 -0.0517 -0.0567 -0.0932
S-588	version == null
T-588	version == null || version.equals("")
H-588	-0.07740487903356552	version == null || version.equals("")
D-588	-0.07740487903356552	version == null || version.equals("")
P-588	-0.0091 -0.0489 -0.0574 -0.1797 -0.0105 -0.0527 -0.0677 -0.1324 -0.1382
S-54	mime == null
T-54	mime == null || mime.value().length == 0
H-54	-0.21359895169734955	mime == null || mime.value() == null
D-54	-0.21359895169734955	mime == null || mime.value() == null
P-54	-0.0043 -0.0839 -0.0563 -0.2973 -0.0579 -0.1906 -0.0190 -0.4648 -0.1650 -0.0704 -0.9401
S-379	group != null
T-379	group != null && !"0".equals(group)
H-379	-0.07752840220928192	includedGroup != null
D-379	-0.07752840220928192	includedGroup != null
P-379	-0.0868 -0.0615 -0.0807 -0.0737 -0.0849
S-505	p == null
T-505	p == null || t < -1
H-505	-0.19119793176651	p == null || t < -1
D-505	-0.19119793176651	p == null || t < -1
P-505	-0.0579 -0.0861 -0.0717 -1.1262 -0.0684 -0.0127 -0.0180 -0.0885
S-570	new StringBuilder()
T-570	new StringBuilder(256)
H-570	-0.26013243198394775	new StringBuilder(1024)
D-570	-0.26013243198394775	new StringBuilder(1024)
P-570	-0.0835 -0.0451 -1.0733 -0.0167 -0.0821
S-219	Object strongReference
T-219	WeakSafeReadWriteLock strongReference
H-219	-0.03142860159277916	WeakSafeReadWriteLock strongReference
D-219	-0.03142860159277916	WeakSafeReadWriteLock strongReference
P-219	-0.0003 -0.0001 -0.0786 -0.0157 -0.0117 -0.0211 -0.0925
S-368	group == null
T-368	includedGroup == null
H-368	-0.06163858249783516	includedGroup == null
D-368	-0.06163858249783516	includedGroup == null
P-368	-0.0405 -0.0632 -0.0408 -0.0715 -0.0922
S-41	new Date(0)
T-41	new Date(1)
H-41	-0.08810602128505707	new Date(1)
D-41	-0.08810602128505707	new Date(1)
P-41	-0.0620 -0.1045 -0.1011 -0.0848
S-273	Throwable t2
T-273	Exception t2
H-273	-0.07117845863103867	Exception t2
D-273	-0.07117845863103867	Exception t2
P-273	-0.0708 -0.0599 -0.0736 -0.0803
S-266	writeUnlock()
T-266	readUnlock()
H-266	-0.05951150134205818	readUnlock()
D-266	-0.05951150134205818	readUnlock()
P-266	-0.0053 -0.0634 -0.0744 -0.0949
S-259	return false;
T-259	return true;
H-259	-0.05189576372504234	return true;
D-259	-0.05189576372504234	return true;
P-259	-0.0349 -0.0358 -0.0361 -0.1007
S-232	c * b
T-232	c * c
H-232	-0.03222094848752022	c * c
D-232	-0.03222094848752022	c * c
P-232	-0.0240 -0.0303 -0.0198 -0.0548
S-208	count <= 0
T-208	count < 0
H-208	-0.29206711053848267	count < 0 || count <= 0
D-208	-0.29206711053848267	count < 0 || count <= 0
P-208	-0.0554 -0.1064 -0.0488 -1.2200 -0.0281 -0.7102 -0.1252 -0.0425
S-132	i > 0
T-132	i >= 0
H-132	-0.06913495808839798	i >= 0
D-132	-0.06913495808839798	i >= 0
P-132	-0.0682 -0.0333 -0.0552 -0.1199
S-164	id=50
T-164	id=48
H-164	-0.4312795102596283	id=50
D-164	-0.4312795102596283	id=50
P-164	-0.0450 -0.4206 -1.1590 -0.1006
S-283	id=42
T-283	id=40
H-283	-0.49541595578193665	id=43
D-283	-0.49541595578193665	id=43
P-283	-0.0432 -0.0551 -1.8019 -0.0814
S-53	id=21
T-53	id=19
H-53	-0.1193215623497963	id=20
D-53	-0.1193215623497963	id=20
P-53	-0.0340 -0.0902 -0.2972 -0.0558
S-299	30 * 1000
T-299	60 * 1000
H-299	-0.16788704693317413	10 * 1000
D-299	-0.16788704693317413	10 * 1000
P-299	-0.4299 -0.0203 -0.1414 -0.0799
S-39	return true;
T-39	return false;
H-39	-0.0459362231194973	return false;
D-39	-0.0459362231194973	return false;
P-39	-0.0289 -0.0278 -0.0279 -0.0992
S-35	return false;
T-35	return true;
H-35	-0.05189576372504234	return true;
D-35	-0.05189576372504234	return true;
P-35	-0.0349 -0.0358 -0.0361 -0.1007
S-740	@PATCH
T-740	@DELETE
H-740	-0.04285486787557602	@DELETE
D-740	-0.04285486787557602	@DELETE
P-740	-0.0337 -0.0171 -0.0778
S-427	nodeString()
T-427	value()
H-427	-0.05143290385603905	value()
D-427	-0.05143290385603905	value()
P-427	-0.0010 -0.0595 -0.0938
S-381	nodeString()
T-381	value()
H-381	-0.05143290385603905	value()
D-381	-0.05143290385603905	value()
P-381	-0.0010 -0.0595 -0.0938
S-281	@PATCH
T-281	@DELETE
H-281	-0.04285486787557602	@DELETE
D-281	-0.04285486787557602	@DELETE
P-281	-0.0337 -0.0171 -0.0778
S-100	IllegalStateException ex
T-100	Exception ex
H-100	-0.131456658244133	Exception ex
D-100	-0.131456658244133	Exception ex
P-100	-0.2769 -0.0340 -0.0834
S-216	name == null
T-216	key == null
H-216	-0.5682210326194763	key == null
D-216	-0.5682210326194763	key == null
P-216	-2.0690 -0.0471 -0.0632 -0.0936
S-130	!returnValue
T-130	returnValue
H-130	-0.029114598408341408	returnValue
D-130	-0.029114598408341408	returnValue
P-130	-0.0024 -0.0558
S-280	id=23
T-280	id=21
H-280	-0.16630171239376068	id=22
D-280	-0.16630171239376068	id=22
P-280	-0.0426 -0.0439 -0.4961 -0.0827
S-730	IllegalArgumentException e
T-730	ConversionException e
H-730	-0.15342457592487335	Exception e
D-730	-0.15342457592487335	Exception e
P-730	-0.3444 -0.0345 -0.0814
S-649	return 18;
T-649	return 16;
H-649	-0.19247300922870636	return 17;
D-649	-0.19247300922870636	return 17;
P-649	-0.0488 -0.5948 -0.0211 -0.1051
S-262	listeners != null
T-262	eventListeners != null
H-262	-0.36632829904556274	listeners != null && !listeners.isEmpty()
D-262	-0.36632829904556274	listeners != null && !listeners.isEmpty()
P-262	-0.6646 -0.0559 -0.0737 -0.0398 -2.2523 -0.1410 -0.1585 -0.0153 -0.1771 -0.0850
S-40	listeners != null
T-40	eventListeners != null
H-40	-0.36632829904556274	listeners != null && !listeners.isEmpty()
D-40	-0.36632829904556274	listeners != null && !listeners.isEmpty()
P-40	-0.6646 -0.0559 -0.0737 -0.0398 -2.2523 -0.1410 -0.1585 -0.0153 -0.1771 -0.0850
S-803	total=10000
T-803	total=2000
H-803	-0.6565650701522827	total=200
D-803	-0.6565650701522827	total=200
P-803	-0.1231 -0.5277 -1.8645 -0.1110
S-793	executorCount--
T-793	workerCount--
H-793	-1.1158660650253296	executorCount--
D-793	-1.1158660650253296	executorCount--
P-793	-0.0272 -0.1793 -3.9249 -0.3320
S-782	16 << 10
T-782	32 << 10
H-782	-0.43601521849632263	16 << 8
D-782	-0.43601521849632263	16 << 8
P-782	-0.0581 -0.0164 -1.5357 -0.1338
S-762	size=500
T-762	size=250
H-762	-0.43844524025917053	size=100
D-762	-0.43844524025917053	size=100
P-762	-0.0379 -1.2005 -0.0770
S-747	i >= 0
T-747	i > 0
H-747	-0.07104947417974472	i > 0
D-747	-0.07104947417974472	i > 0
P-747	-0.0952 -0.0339 -0.0744 -0.0806
S-288	attributes == null
T-288	children == null
H-288	-0.06526844948530197	children == null
D-288	-0.06526844948530197	children == null
P-288	-0.0110 -0.0283 -0.0694 -0.1524
S-714	enabled=false
T-714	enabled=true
H-714	-0.06654524803161621	enabled=true
D-714	-0.06654524803161621	enabled=true
P-714	-0.0279 -0.0464 -0.1039 -0.0880
S-350	id=17
T-350	id=20
H-350	-0.25861167907714844	id=16
D-350	-0.25861167907714844	id=16
P-350	-0.0382 -0.0950 -0.8335 -0.0678
S-642	new Date(0)
T-642	new Date(1)
H-642	-0.08810602128505707	new Date(1)
D-642	-0.08810602128505707	new Date(1)
P-642	-0.0620 -0.1045 -0.1011 -0.0848
S-633	return false;
T-633	return true;
H-633	-0.05189576372504234	return true;
D-633	-0.05189576372504234	return true;
P-633	-0.0349 -0.0358 -0.0361 -0.1007
S-468	return true;
T-468	return false;
H-468	-0.0459362231194973	return false;
D-468	-0.0459362231194973	return false;
P-468	-0.0289 -0.0278 -0.0279 -0.0992
S-467	id=40
T-467	id=38
H-467	-0.440621942281723	id=40
D-467	-0.440621942281723	id=40
P-467	-0.0478 -0.1008 -1.4064 -0.2074
S-457	timeout=120000
T-457	timeout=30000
H-457	-0.20054525136947632	timeout=150000
D-457	-0.20054525136947632	timeout=150000
P-457	-0.0459 -0.0147 -0.8015 -0.0489 -0.0916
S-407	E extends Model
T-407	T extends Model
H-407	-0.034882210195064545	T extends Model
D-407	-0.034882210195064545	T extends Model
P-407	-0.0134 -0.0177 -0.0103 -0.0981
S-356	id=14
T-356	id=16
H-356	-0.05777103453874588	id=17
D-356	-0.05777103453874588	id=17
P-356	-0.0386 -0.0436 -0.0729 -0.0759
S-43	IllegalArgumentException iae
T-43	Exception iae
H-43	-0.5800317525863647	IllegalStateException iae
D-43	-0.5800317525863647	IllegalStateException iae
P-43	-1.8879 -0.0519 -0.2948 -0.0855
S-156	Exception exception
T-156	Throwable exception
H-156	-0.37370362877845764	T exception
D-156	-0.37370362877845764	T exception
P-156	-0.9646 -0.0655 -0.0910
S-187	LinkedList<>
T-187	ArrayList<>
H-187	-0.21737781167030334	ArrayList<>
D-187	-0.21737781167030334	ArrayList<>
P-187	-0.5542 -0.0078 -0.0901
S-323	@Converter
T-323	@Deprecated
H-323	-0.08217056095600128	@Deprecated
D-323	-0.08217056095600128	@Deprecated
P-323	-0.0252 -0.1337 -0.0877
S-138	Throwable t
T-138	Exception t
H-138	-0.07132281363010406	Exception t
D-138	-0.07132281363010406	Exception t
P-138	-0.0708 -0.0739 -0.0692
S-97	Exception e
T-97	IOException e
H-97	-0.15733064711093903	Throwable e
D-97	-0.15733064711093903	Throwable e
P-97	-0.2611 -0.1203 -0.0907
S-196	IOException e
T-196	Exception e
H-196	-0.28641900420188904	Exception e
D-196	-0.28641900420188904	Exception e
P-196	-0.7346 -0.0392 -0.0855
S-361	!first
T-361	first
H-361	-0.07643252611160278	first
D-361	-0.07643252611160278	first
P-361	-0.0330 -0.1199
S-341	Object edge
T-341	E edge
H-341	-0.04263335466384888	E edge
D-341	-0.04263335466384888	E edge
P-341	-0.0188 -0.0264 -0.0828
S-426	Object edge
T-426	E edge
H-426	-0.04263335466384888	E edge
D-426	-0.04263335466384888	E edge
P-426	-0.0188 -0.0264 -0.0828
S-475	Throwable t
T-475	Exception t
H-475	-0.07132281363010406	Exception t
D-475	-0.07132281363010406	Exception t
P-475	-0.0708 -0.0739 -0.0692
S-662	@Converter
T-662	@Deprecated
H-662	-0.08217056095600128	@Deprecated
D-662	-0.08217056095600128	@Deprecated
P-662	-0.0252 -0.1337 -0.0877
S-736	return 0;
T-736	return 1;
H-736	-0.35219019651412964	return 8;
D-736	-0.35219019651412964	return 8;
P-736	-0.0362 -1.1984 -0.0741 -0.1000
S-485	services=8
T-485	services=9
H-485	-0.03764459490776062	services=9
D-485	-0.03764459490776062	services=9
P-485	-0.0053 -0.0251 -0.0427 -0.0774
S-167	getTimeout()
T-167	getConnectTimeout()
H-167	-0.043587833642959595	getConnectTimeout()
D-167	-0.043587833642959595	getConnectTimeout()
P-167	-0.0256 -0.0052 -0.0120 -0.0870 -0.0882
S-83	Exception exception
T-83	Throwable exception
H-83	-0.37370362877845764	T exception
D-83	-0.37370362877845764	T exception
P-83	-0.9646 -0.0655 -0.0910
S-609	-1
T-609	1
H-609	-0.052279286086559296	1
D-609	-0.052279286086559296	1
P-609	-0.0207 -0.0839
S-477	-1
T-477	1
H-477	-0.052279286086559296	1
D-477	-0.052279286086559296	1
P-477	-0.0207 -0.0839
S-315	T
T-315	E
H-315	-0.31015443801879883	T1
D-315	-0.31015443801879883	T1
P-315	-0.7113 -0.1364 -0.0828
S-755	-1
T-755	-2
H-755	-0.052279286086559296	1
D-755	-0.052279286086559296	1
P-755	-0.0207 -0.0839
S-799	active
T-799	!active
H-799	-0.045391954481601715	!active
D-799	-0.045391954481601715	!active
P-799	-0.0439 -0.0122 -0.0801
S-17	-1
T-17	1
H-17	-0.052279286086559296	1
D-17	-0.052279286086559296	1
P-17	-0.0207 -0.0839
S-472	allGroupingColumns.isEmpty()
T-472	groupingSets.isEmpty()
H-472	-0.2243909239768982	groupingSets == null || allGroupingColumns.isEmpty()
D-472	-0.2243909239768982	groupingSets == null || allGroupingColumns.isEmpty()
P-472	-0.5221 -0.0000 -1.4720 -0.0631 -0.0802 -0.0451 -0.0088 -0.2081 -0.0955 -0.0238 -0.0911 -0.0828
S-308	!traceIds.isEmpty()
T-308	traceIds.isEmpty()
H-308	-0.2697595953941345	traceIds == null || !traceIds.isEmpty()
D-308	-0.2697595953941345	traceIds == null || !traceIds.isEmpty()
P-308	-1.8901 -0.0864 -0.7288 -0.0931 -0.0483 -0.0678 -0.0176 -0.0357 -0.0835 -0.0428 -0.0718 -0.0711
S-483	NoopSegmentPublisher.class
T-483	DbSegmentPublisher.class
H-483	-0.3689113259315491	ServiceAnnouncingSegmentPublisher.class
D-483	-0.3689113259315491	ServiceAnnouncingSegmentPublisher.class
P-483	-2.8230 -0.0915 -0.0487 -0.0030 -0.0130 -0.1022 -0.1054 -0.0454 -0.0881
S-671	checkpointPath.getPath()
T-671	checkpointPath.toString()
H-671	-0.0993509367108345	checkpointPath.toString()
D-671	-0.0993509367108345	checkpointPath.toString()
P-671	-0.0236 -0.0522 -0.1063 -0.2637 -0.0592 -0.0912
S-661	{11,6.5f}
T-661	{11,7.0f}
H-661	-0.6635454893112183	{1 {14,6.5f}
D-661	-0.6635454893112183	{1 {14,6.5f}
P-661	-0.0629 -0.2082 -3.7559 -0.9710 -0.0867 -0.0606 -0.1207 -0.0423
S-560	SpringBootWebSecurityConfiguration.class
T-560	SecurityAutoConfiguration.class
H-560	-0.3450504541397095	SpringBootWebSecurityConfiguration.class
D-560	-0.3450504541397095	SpringBootWebSecurityConfiguration.class
P-560	-0.0067 -0.4624 -0.0399 -0.1713 -1.5289 -0.0847 -0.1214
S-176	dstPath.getPath()
T-176	dstPath.toString()
H-176	-0.3743845224380493	dstPath.getUfsPath()
D-176	-0.3743845224380493	dstPath.getUfsPath()
P-176	-0.0251 -0.0648 -0.1090 -1.4023 -1.4896 -0.0739 -0.0585 -0.0590 -0.0873
S-745	{11,6.5f}
T-745	{11,7.0f}
H-745	-0.6635454893112183	{1 {14,6.5f}
D-745	-0.6635454893112183	{1 {14,6.5f}
P-745	-0.0629 -0.2082 -3.7559 -0.9710 -0.0867 -0.0606 -0.1207 -0.0423
S-376	mapper.getJsonFactory()
T-376	mapper.getFactory()
H-376	-0.05990614742040634	mapper.getFactory()
D-376	-0.05990614742040634	mapper.getFactory()
P-376	-0.0198 -0.0842 -0.0636 -0.0334 -0.0762 -0.0822
S-169	clearFromMember.start()
T-169	clearFromMember.join()
H-169	-0.05465942993760109	clearFromMember.join()
D-169	-0.05465942993760109	clearFromMember.join()
P-169	-0.0207 -0.0556 -0.0241 -0.1120 -0.0036 -0.0758 -0.0907
S-253	UndertowServletWebServer.class
T-253	UndertowWebServer.class
H-253	-0.056423380970954895	UndertowWebServer.class
D-253	-0.056423380970954895	UndertowWebServer.class
P-253	-0.0075 -0.0034 -0.0254 -0.1436 -0.0507 -0.1080
S-231	RuntimeGlue optionalGlue
T-231	Glue optionalGlue
H-231	-0.04802948236465454	Glue optionalGlue
D-231	-0.04802948236465454	Glue optionalGlue
P-231	-0.1003 -0.0123 -0.0079 -0.0361 -0.0240 -0.1076
S-205	isTestOnBorrow()
T-205	isTestOnReturn()
H-205	-0.07110656797885895	isTestOnReturn()
D-205	-0.07110656797885895	isTestOnReturn()
P-205	-0.0826 -0.0924 -0.0282 -0.0556 -0.0771 -0.0908
S-182	ChannelBuffers.dynamicBuffer()
T-182	ChannelBuffers.buffer(2)
H-182	-0.4931815564632416	ChannelBuffers. dynamicBuffer(256)
D-182	-0.4931815564632416	ChannelBuffers. dynamicBuffer(256)
P-182	-0.0130 -0.0216 -0.1083 -2.4230 -0.0446 -0.1935 -1.4455 -0.1052 -0.0839
S-550	sizeNeeded >= items.length
T-550	sizeNeeded > items.length
H-550	-0.045645177364349365	sizeNeeded > items.length
D-550	-0.045645177364349365	sizeNeeded > items.length
P-550	-0.0318 -0.0061 -0.0218 -0.0322 -0.0903 -0.0495 -0.0877
S-748	dstPath.getPath()
T-748	dstPath.toString()
H-748	-0.3743845224380493	dstPath.getUfsPath()
D-748	-0.3743845224380493	dstPath.getUfsPath()
P-748	-0.0251 -0.0648 -0.1090 -1.4023 -1.4896 -0.0739 -0.0585 -0.0590 -0.0873
S-15	new ClobTypeHandler()
T-15	new StringTypeHandler()
H-15	-0.12323974817991257	new StringTypeHandler()
D-15	-0.12323974817991257	new StringTypeHandler()
P-15	-0.0681 -0.1572 -0.1687 -0.1291 -0.0931
S-353	acquiredChannelCount <= maxConnections
T-353	acquiredChannelCount < maxConnections
H-353	-0.17487668991088867	acquiredChannelCount <= maxConnections
D-353	-0.17487668991088867	acquiredChannelCount <= maxConnections
P-353	-0.0806 -0.0770 -0.0378 -0.8118 -0.0555 -0.0281 -0.1333
S-317	Character.toLowerCase(ch)
T-317	Character.toUpperCase(ch)
H-317	-0.053494468331336975	Character.toUpperCase(ch)
D-317	-0.053494468331336975	Character.toUpperCase(ch)
P-317	-0.0201 -0.0807 -0.0141 -0.0543 -0.0614 -0.0578 -0.0861
S-520	toHeapData(key)
T-520	toEventData(key)
H-520	-0.05519090220332146	toEventData(key)
D-520	-0.05519090220332146	toEventData(key)
P-520	-0.0884 -0.0309 -0.0238 -0.0437 -0.0504 -0.0569 -0.0922
S-439	maxPendingPersists > 0
T-439	maxPendingPersists <= 0
H-439	-0.4516699016094208	maxPendingPersists > 0
D-439	-0.4516699016094208	maxPendingPersists > 0
P-439	-0.0510 -0.1231 -0.0189 -0.0311 -0.2477 -0.0423 -2.6476
S-433	zkWorker.getWorker()
T-433	zkWorker2.getWorker()
H-433	-0.3639521300792694	zkWorker.getWorker(false)
D-433	-0.3639521300792694	zkWorker.getWorker(false)
P-433	-0.0171 -0.0390 -0.1236 -0.1256 -0.1882 -0.4770 -2.0624 -0.1426 -0.1002
S-424	idGenerator.generateId()
T-424	idGenerator.generateUuid()
H-424	-0.07888932526111603	idGenerator.generateUuid()
D-424	-0.07888932526111603	idGenerator.generateUuid()
P-424	-0.0477 -0.0539 -0.0994 -0.1036 -0.0920 -0.0691 -0.0865
S-366	request.getServletPath()
T-366	request.getPathInfo()
H-366	-0.0594637431204319	request.getPathInfo()
D-366	-0.0594637431204319	request.getPathInfo()
P-366	-0.0250 -0.0995 -0.0577 -0.0151 -0.0665 -0.0633 -0.0892
S-118	TimeUtils.nanoTime()
T-118	TimeUtils.millis()
H-118	-0.09202447533607483	TimeUtils.millis()
D-118	-0.09202447533607483	TimeUtils.millis()
P-118	-0.0365 -0.0375 -0.0978 -0.0249 -0.2759 -0.0830 -0.0886
S-322	rj.mapProgress()
T-322	rj.reduceProgress()
H-322	-0.06841018050909042	rj.reduceProgress()
D-322	-0.06841018050909042	rj.reduceProgress()
P-322	-0.0475 -0.0918 -0.0986 -0.0214 -0.0364 -0.0981 -0.0852
S-175	to("direct:foo")
T-175	sendTo("direct:foo")
H-175	-0.06374011188745499	sendTo("direct:foo")
D-175	-0.06374011188745499	sendTo("direct:foo")
P-175	-0.0944 -0.0476 -0.0212 -0.0582 -0.0412 -0.0830 -0.1007
S-223	assertEquals(2,data.size())
T-223	assertEquals(3,data.size())
H-223	-0.33952993154525757	assertEquals(4,data.size())
D-223	-0.33952993154525757	assertEquals(4,data.size())
P-223	-0.0255 -2.0215 -0.0640 -0.0950 -0.0353 -0.0487 -0.0867
S-221	new LogVersionMismatchRequest()
T-221	new VersionMismatchLogRequest()
H-221	-0.5790256857872009	new LogVersionMismatchRequest(logVersion)
D-221	-0.5790256857872009	new LogVersionMismatchRequest(logVersion)
P-221	-0.0641 -0.1112 -0.0288 -0.3040 -0.0888 -0.3043 -3.1860 -0.6696 -0.9518 -0.0817
S-217	pieces.length <= wordColumn
T-217	pieces.length <= tagColumn
H-217	-0.04797569289803505	pieces.length <= tagColumn
D-217	-0.04797569289803505	pieces.length <= tagColumn
P-217	-0.0086 -0.0770 -0.0507 -0.0683 -0.0234 -0.0178 -0.0902
S-207	lastFailureException instanceof ConnectException
T-207	lastFailureException instanceof SocketTimeoutException
H-207	-0.6878620386123657	lastFailureException instanceof IOException
D-207	-0.6878620386123657	lastFailureException instanceof IOException
P-207	-0.0682 -0.0175 -0.0500 -0.0850 -3.3407 -0.5657
S-177	start.expectedMessageCount(6)
T-177	start.expectedMessageCount(7)
H-177	-0.24474135041236877	start.expectedMessageCount(7)
D-177	-0.24474135041236877	start.expectedMessageCount(7)
P-177	-0.0357 -0.0811 -0.0293 -1.0947 -0.2821 -0.1153 -0.0751
S-712	getter.getRawReturnType()
T-712	getter.getType()
H-712	-0.0667298212647438	getter.getType()
D-712	-0.0667298212647438	getter.getType()
P-712	-0.0348 -0.1041 -0.0353 -0.0770 -0.0824
S-811	DataStream<OUT>
T-811	DataStreamSink<OUT>
H-811	-0.08933309465646744	DataStreamSink<OUT>
D-811	-0.08933309465646744	DataStreamSink<OUT>
P-811	-0.0298 -0.0496 -0.2731 -0.0694 -0.0536 -0.0630 -0.0869
S-802	event.getColumns()
T-802	event.getChangeColumns()
H-802	-0.0588192492723465	event.getChangeColumns()
D-802	-0.0588192492723465	event.getChangeColumns()
P-802	-0.0193 -0.0972 -0.0617 -0.0661 -0.0157 -0.0701 -0.0816
S-634	mock.expectedMessageCount(2)
T-634	mock.expectedMinimumMessageCount(2)
H-634	-0.04730898514389992	mock.expectedMinimumMessageCount(2)
D-634	-0.04730898514389992	mock.expectedMinimumMessageCount(2)
P-634	-0.0241 -0.1014 -0.0375 -0.0228 -0.0344 -0.0249 -0.0861
S-819	sExecutorService.shutdown()
T-819	sExecutorService.shutdownNow()
H-819	-0.0751517042517662	sExecutorService.shutdownNow()
D-819	-0.0751517042517662	sExecutorService.shutdownNow()
P-819	-0.0247 -0.0180 -0.1243 -0.1546 -0.0475 -0.0771 -0.0798
S-822	result.expectedMessageCount(3)
T-822	result.expectedMinimumMessageCount(3)
H-822	-0.062305089086294174	result.expectedMinimumMessageCount(3)
D-822	-0.062305089086294174	result.expectedMinimumMessageCount(3)
P-822	-0.0845 -0.0830 -0.0282 -0.0524 -0.0395 -0.0706 -0.0778
S-676	deletionRetentionStrategy == null
T-676	deletionRetentionStrategyConfig == null
H-676	-0.3255287706851959	deletionRetentionStrategy != null
D-676	-0.3255287706851959	deletionRetentionStrategy != null
P-676	-0.1593 -0.0058 -0.0103 -1.6299 -0.0761 -0.0717
S-147	context.reloadRequired()
T-147	context.revertReloadRequired()
H-147	-0.14132726192474365	context.revertReloadRequired()
D-147	-0.14132726192474365	context.revertReloadRequired()
P-147	-0.0518 -0.1579 -0.0772 -0.5295 -0.1402 -0.0250 -0.0597 -0.0893
S-557	address.getHostName()
T-557	address.getHostAddress()
H-557	-0.06818827241659164	address.getHostAddress()
D-557	-0.06818827241659164	address.getHostAddress()
P-557	-0.0493 -0.0927 -0.0613 -0.0276 -0.0784 -0.0777 -0.0904
S-532	result.expectedMessageCount(2)
T-532	result.expectedMinimumMessageCount(2)
H-532	-0.0535896010696888	result.expectedMinimumMessageCount(2)
D-532	-0.0535896010696888	result.expectedMinimumMessageCount(2)
P-532	-0.0786 -0.0844 -0.0324 -0.0244 -0.0418 -0.0262 -0.0873
S-511	new Entry[0xff]
T-511	new Entry[2048]
H-511	-0.6186147332191467	new Entry[0xffL]
D-511	-0.6186147332191467	new Entry[0xffL]
P-511	-0.0630 -0.0512 -1.0629 -0.9096 -2.0784 -0.0780 -0.0873
S-473	DataStream<OUT>
T-473	DataStreamSink<OUT>
H-473	-0.08933309465646744	DataStreamSink<OUT>
D-473	-0.08933309465646744	DataStreamSink<OUT>
P-473	-0.0298 -0.0496 -0.2731 -0.0694 -0.0536 -0.0630 -0.0869
S-450	node.getNodeName()
T-450	node.getLocalName()
H-450	-0.06975813210010529	node.getLocalName()
D-450	-0.06975813210010529	node.getLocalName()
P-450	-0.0422 -0.1088 -0.0619 -0.0555 -0.0654 -0.0676 -0.0868
S-435	result.expectedMessageCount(3)
T-435	result.expectedMinimumMessageCount(3)
H-435	-0.062305089086294174	result.expectedMinimumMessageCount(3)
D-435	-0.062305089086294174	result.expectedMinimumMessageCount(3)
P-435	-0.0845 -0.0830 -0.0282 -0.0524 -0.0395 -0.0706 -0.0778
S-61	BlockMasterClient.class
T-61	RetryHandlingBlockMasterClient.class
H-61	-0.056329306215047836	RetryHandlingBlockMasterClient.class
D-61	-0.056329306215047836	RetryHandlingBlockMasterClient.class
P-61	-0.0004 -0.0085 -0.0310 -0.0901 -0.0586 -0.0927 -0.0737 -0.0957
S-355	result.expectedMessageCount(3)
T-355	result.expectedMinimumMessageCount(3)
H-355	-0.062305089086294174	result.expectedMinimumMessageCount(3)
D-355	-0.062305089086294174	result.expectedMinimumMessageCount(3)
P-355	-0.0845 -0.0830 -0.0282 -0.0524 -0.0395 -0.0706 -0.0778
S-815	expectedMinimumCount == -1
T-815	expectedMinimumCount == -1 && expectedCount <= 0
H-815	-0.41458162665367126	expectedMinimumCount == -1 || expectedMinimumCount == 0
D-815	-0.41458162665367126	expectedMinimumCount == -1 || expectedMinimumCount == 0
P-815	-0.1345 -0.0158 -0.0640 -0.1257 -0.1230 -0.4315 -0.2779 -0.0138 -0.0500 -1.9852 -1.4249 -0.3287
S-764	typeSerializer.getClass()
T-764	typeSerializer.getDeserializedType()
H-764	-0.09564491361379623	typeSerializer.getDeserializedType()
D-764	-0.09564491361379623	typeSerializer.getDeserializedType()
P-764	-0.1498 -0.0142 -0.2115 -0.3101 -0.0190 -0.0012 -0.0304 -0.0676 -0.0767 -0.0759
S-284	mapJoinTables != null
T-284	(this.getExecContext().getLocalWork() != null && this.getExecContext().getLocalWork().getInputFileChangeSensitive()) && mapJoinTables != null
H-284	-0.23416736721992493	mapJoinTables != null && !mapJoinTables.isEmpty()
D-284	-0.23416736721992493	mapJoinTables != null && !mapJoinTables.isEmpty()
P-284	-0.5477 -0.2870 -0.0783 -0.0651 -0.0473 -0.0505 -1.4375 -0.5236 -0.0367 -0.0179 -0.0200 -0.0065 -0.0929 -0.0674
S-487	new NotSupportedException()
T-487	new NotSupportedException("getResultSetInfo() is not supported by this resource adapter as per spec 15.11.3")
H-487	-0.2880823612213135	new NotSupportedException(getClass().getName())
D-487	-0.2880823612213135	new NotSupportedException(getClass().getName())
P-487	-0.0775 -1.2190 -0.0307 -0.0064 -1.0652 -0.0628 -0.0585 -0.1186 -0.1518 -0.0904
S-537	type != EventType.QUERY
T-537	type != EventType.QUERY && type != EventType.INSERT && type != EventType.UPDATE && type != EventType.DELETE
H-537	-0.7221000790596008	type == EventType.QUERY
D-537	-0.7221000790596008	type == EventType.QUERY
P-537	-0.0569 -1.4927 -0.2567 -0.0858 -1.9962 -0.4444
S-331	new ASMClassLoader()
T-331	new ASMClassLoader(ASMSerializerFactory.class.getClassLoader())
H-331	-0.7068389058113098	new ASMClassLoader(false)
D-331	-0.7068389058113098	new ASMClassLoader(false)
P-331	-0.0900 -0.8465 -0.0597 -0.0344 -0.4809 -3.5615 -0.4853 -0.0963
S-636	patientExitObs != null
T-636	patientExitObs != null && patientExitObs.size() > 0
H-636	-0.33708932995796204	patientExitObs != null && !patientExitObs.isEmpty()
D-636	-0.33708932995796204	patientExitObs != null && !patientExitObs.isEmpty()
P-636	-0.0346 -2.7732 -0.0130 -0.0725 -0.0324 -0.0339 -1.0568 -0.0855 -0.3832 -0.0144 -0.0371 -0.0161 -0.0813 -0.0853
S-436	AnimationAdapter<T>
T-436	PropertyValuesAnimationAdapter<T>
H-436	-0.056889280676841736	PropertyValuesAnimationAdapter<T>
D-436	-0.056889280676841736	PropertyValuesAnimationAdapter<T>
P-436	-0.0748 -0.0604 -0.0310 -0.0393 -0.0468 -0.0632 -0.0507 -0.0889
S-498	return sinkMaxBufferSize;
T-498	return maxPagePartitioningBufferSize;
H-498	-0.46527430415153503	return sinkStreamBufferSize;
D-498	-0.46527430415153503	return sinkStreamBufferSize;
P-498	-0.0256 -1.1796 -1.1615 -0.2645 -0.0643 -0.0961
S-405	new UnsupportedOperationException()
T-405	new UnsupportedOperationException(getClass().getName())
H-405	-0.06782431900501251	new UnsupportedOperationException(getClass().getName())
D-405	-0.06782431900501251	new UnsupportedOperationException(getClass().getName())
P-405	-0.0700 -0.0283 -0.0596 -0.0515 -0.0424 -0.0182 -0.0861 -0.0494 -0.1770 -0.0958
S-496	new Notification(notification)
T-496	new Notification(notification,nodeService)
H-496	-0.9934852719306946	new Notification(notification,true)
D-496	-0.9934852719306946	new Notification(notification,true)
P-496	-0.0607 -0.1329 -0.2590 -2.9024 -0.7578 -3.6369 -0.1091 -0.0890
S-67	findDelegate(name)
T-67	findDelegateForNewObject(name)
H-67	-0.05605365335941315	findDelegateForNewObject(name)
D-67	-0.05605365335941315	findDelegateForNewObject(name)
P-67	-0.0563 -0.0442 -0.0062 -0.0350 -0.1259 -0.0540 -0.0266 -0.0752 -0.0811
S-59	findDelegate(name)
T-59	findDelegateForNewObject(name)
H-59	-0.05605365335941315	findDelegateForNewObject(name)
D-59	-0.05605365335941315	findDelegateForNewObject(name)
P-59	-0.0563 -0.0442 -0.0062 -0.0350 -0.1259 -0.0540 -0.0266 -0.0752 -0.0811
S-689	page.getSizeInBytes()
T-689	page.getRetainedSizeInBytes()
H-689	-0.06027667596936226	page.getLogicalSizeInBytes()
D-689	-0.06027667596936226	page.getLogicalSizeInBytes()
P-689	-0.0376 -0.1120 -0.0664 -0.0176 -0.0244 -0.0774 -0.0864
S-386	result.expectedMessageCount(2)
T-386	result.expectedMinimumMessageCount(2)
H-386	-0.0535896010696888	result.expectedMinimumMessageCount(2)
D-386	-0.0535896010696888	result.expectedMinimumMessageCount(2)
P-386	-0.0786 -0.0844 -0.0324 -0.0244 -0.0418 -0.0262 -0.0873
S-327	Thread.sleep(500)
T-327	Thread.sleep(500L)
H-327	-0.15703392028808594	Thread.sleep(800)
D-327	-0.15703392028808594	Thread.sleep(800)
P-327	-0.0670 -0.0933 -0.0453 -0.6632 -0.0609 -0.0777 -0.0918
S-336	DEFAULT_MAX=1024
T-336	DEFAULT_MAX=4096
H-336	-0.3590244948863983	DEFAULT_MAX=4096
D-336	-0.3590244948863983	DEFAULT_MAX=4096
P-336	-0.0197 -0.0882 -0.0279 -1.0012 -1.0718 -0.1725 -0.1319
S-150	this(type,0);
T-150	this(type,1);
H-150	-0.06406262516975403	this(type,1);
D-150	-0.06406262516975403	this(type,1);
P-150	-0.0619 -0.0915 -0.0591 -0.0680 -0.0128 -0.0910
S-158	lockForRegularUsage()
T-158	lockForRescale()
H-158	-0.204271599650383	unlockForRescale()
D-158	-0.204271599650383	unlockForRescale()
P-158	-0.8176 -0.0685 -0.1289 -0.0684 -0.0482 -0.0939
S-85	view.getCurrentMode()
T-85	view.getMode()
H-85	-0.8834041953086853	view.getCurrentMode(false)
D-85	-0.8834041953086853	view.getCurrentMode(false)
P-85	-0.1227 -0.1484 -0.4980 -0.8502 -1.8322 -3.4541 -0.0660 -0.0957
S-96	activeFrom.getTime()
T-96	expiresOn.getTime()
H-96	-0.10088777542114258	expiresOn.getTime()
D-96	-0.10088777542114258	expiresOn.getTime()
P-96	-0.2227 -0.0767 -0.1002 -0.0390 -0.0810 -0.0857
S-107	exchange.getOut()
T-107	exchange.getIn()
H-107	-0.055752646178007126	exchange.getIn()
D-107	-0.055752646178007126	exchange.getIn()
P-107	-0.0152 -0.1003 -0.0528 -0.0036 -0.0776 -0.0849
S-119	new StringBuilder(247)
T-119	new StringBuilder(246)
H-119	-0.17035478353500366	new StringBuilder(246)
D-119	-0.17035478353500366	new StringBuilder(246)
P-119	-0.0643 -0.0533 -0.5340 -0.0421 -0.2451 -0.0833
S-58	RawUDPInput.class
T-58	RawTCPInput.class
H-58	-0.15317530930042267	RawTCPInput.class
D-58	-0.15317530930042267	RawTCPInput.class
P-58	-0.0918 -0.5514 -0.0254 -0.0949 -0.0527 -0.1029
S-33	Thread.sleep(50)
T-33	Thread.sleep(100)
H-33	-0.08508577942848206	Thread.sleep(100)
D-33	-0.08508577942848206	Thread.sleep(100)
P-33	-0.0379 -0.0817 -0.0257 -0.2183 -0.0680 -0.0789
S-159	new StringBuilder(561)
T-159	new StringBuilder(560)
H-159	-0.09857725352048874	new StringBuilder(560)
D-159	-0.09857725352048874	new StringBuilder(560)
P-159	-0.0768 -0.0377 -0.3257 -0.0616 -0.0070 -0.0826
S-168	32 * 1024 * 1024
T-168	10 * 1024 * 1024
H-168	-0.05800493061542511	10 * 1024 * 1024
D-168	-0.05800493061542511	10 * 1024 * 1024
P-168	-0.1697 -0.0204 -0.0379 -0.0148 -0.0230 -0.0823
S-264	error.expectedMessageCount(2)
T-264	error.expectedMinimumMessageCount(2)
H-264	-0.05342823266983032	error.expectedMinimumMessageCount(2)
D-264	-0.05342823266983032	error.expectedMinimumMessageCount(2)
P-264	-0.0792 -0.0920 -0.0443 -0.0098 -0.0373 -0.0264 -0.0851
S-234	System.currentTimeMillis()
T-234	System.nanoTime()
H-234	-0.24352949857711792	System.nanoTime()
D-234	-0.24352949857711792	System.nanoTime()
P-234	-1.0224 -0.1228 -0.1214 -0.0288 -0.0765 -0.0894
S-77	Thread.sleep(2000)
T-77	Thread.sleep(5000)
H-77	-0.37984684109687805	Thread.sleep(3000)
D-77	-0.37984684109687805	Thread.sleep(3000)
P-77	-0.0423 -0.0843 -0.0297 -2.0265 -0.0116 -0.0846
S-190	view.getCurrentMode()
T-190	view.getMode()
H-190	-0.8834041953086853	view.getCurrentMode(false)
D-190	-0.8834041953086853	view.getCurrentMode(false)
P-190	-0.1227 -0.1484 -0.4980 -0.8502 -1.8322 -3.4541 -0.0660 -0.0957
S-518	closeCode < 1002
T-518	closeCode < 1001
H-518	-0.4936995804309845	closeCode <= 1002
D-518	-0.4936995804309845	closeCode <= 1002
P-518	-0.0177 -0.0232 -2.5559 -0.2273 -0.0457 -0.0925
S-533	id=15842
T-533	id=10842
H-533	-0.12298602610826492	id=10842
D-533	-0.12298602610826492	id=10842
P-533	-0.0411 -0.3945 -0.0502 -0.0566 -0.0726
S-189	size * 1.75f
T-189	size * 1.8f
H-189	-0.05362749472260475	size * 1.8f
D-189	-0.05362749472260475	size * 1.8f
P-189	-0.0346 -0.0396 -0.0516 -0.0438 -0.0985
S-277	id=15873
T-277	id=10873
H-277	-0.1543664038181305	id=10873
D-277	-0.1543664038181305	id=10873
P-277	-0.0428 -0.5451 -0.0577 -0.0524 -0.0738
S-287	id=15872
T-287	id=10872
H-287	-0.15895956754684448	id=10872
D-287	-0.15895956754684448	id=10872
P-287	-0.0400 -0.5279 -0.0790 -0.0720 -0.0758
S-404	id=15802
T-404	id=10802
H-404	-0.16132302582263947	id=10802
D-404	-0.16132302582263947	id=10802
P-404	-0.0411 -0.3261 -0.3281 -0.0361 -0.0753
S-306	Gauge<Object>
T-306	Gauge<Integer>
H-306	-0.06293831020593643	Gauge<Integer>
D-306	-0.06293831020593643	Gauge<Integer>
P-306	-0.0320 -0.0441 -0.0365 -0.1303 -0.0512 -0.0835
S-22	constructor.getTypeParameters()
T-22	constructor.getParameterTypes()
H-22	-0.054152753204107285	constructor.getParameterTypes()
D-22	-0.054152753204107285	constructor.getParameterTypes()
P-22	-0.0339 -0.1063 -0.0314 -0.0165 -0.0588 -0.0780
S-749	STANADALONE
T-749	STANDALONE
H-749	-0.3480779826641083	STANADALONE
D-749	-0.3480779826641083	STANADALONE
P-749	-0.5777 -0.0172 -0.0844 -0.0397 -1.1879 -0.1817
S-750	id=15841
T-750	id=10841
H-750	-0.11622973531484604	id=10841
D-750	-0.11622973531484604	id=10841
P-750	-0.0431 -0.3728 -0.0478 -0.0427 -0.0748
S-2	existing.getState()
T-2	server.getState()
H-2	-0.06884098798036575	server.getState()
D-2	-0.06884098798036575	server.getState()
P-2	-0.0549 -0.0874 -0.0564 -0.0486 -0.0777 -0.0880
S-20	monochrome=false
T-20	monochrome=true
H-20	-0.06029711663722992	monochrome=true
D-20	-0.06029711663722992	monochrome=true
P-20	-0.0075 -0.0307 -0.0320 -0.0399 -0.1497 -0.1019
S-243	this.supervisors
T-243	this.hostToId
H-243	-0.2628919780254364	this.supervisors
D-243	-0.2628919780254364	this.supervisors
P-243	-0.0642 -0.1335 -0.5336 -0.3190 -0.0209 -0.5061
S-507	getApprovalParameters()
T-507	getRequestParameters()
H-507	-0.2010088413953781	getRequestParameters()
D-507	-0.2010088413953781	getRequestParameters()
P-507	-0.5150 -0.1503 -0.0615 -0.0773
S-805	next.getField(0)
T-805	next.getField(1)
H-805	-0.05750136822462082	next.getField(1)
D-805	-0.05750136822462082	next.getField(1)
P-805	-0.0515 -0.0791 -0.0719 -0.0234 -0.0360 -0.0831
S-36	"Stream " + importer
T-36	"Stream " + importerName
H-36	-0.047198131680488586	"Stream " + importerName
D-36	-0.047198131680488586	"Stream " + importerName
P-36	-0.0417 -0.0124 -0.0394 -0.0325 -0.0649 -0.0599 -0.0797
S-663	new StringBuilder(561)
T-663	new StringBuilder(560)
H-663	-0.09857725352048874	new StringBuilder(560)
D-663	-0.09857725352048874	new StringBuilder(560)
P-663	-0.0768 -0.0377 -0.3257 -0.0616 -0.0070 -0.0826
S-703	bits2[1] == false
T-703	bits2[1] == true
H-703	-0.06634219735860825	bits2[1] == true
D-703	-0.06634219735860825	bits2[1] == true
P-703	-0.0044 -0.1388 -0.0302 -0.0991 -0.0496 -0.0759
S-760	private CSVFilter filter;
T-760	private CsvFilter filter;
H-760	-0.0549330972135067	private CsvFilter filter;
D-760	-0.0549330972135067	private CsvFilter filter;
P-760	-0.0494 -0.0111 -0.0349 -0.0766 -0.0616 -0.0960
S-795	getTablename().getBytes()
T-795	getTablename().getName()
H-795	-0.08158398419618607	getTablename().getName()
D-795	-0.08158398419618607	getTablename().getName()
P-795	-0.0255 -0.0102 -0.0785 -0.1775 -0.1154 -0.0824
S-639	new StringBuilder(561)
T-639	new StringBuilder(560)
H-639	-0.09857725352048874	new StringBuilder(560)
D-639	-0.09857725352048874	new StringBuilder(560)
P-639	-0.0768 -0.0377 -0.3257 -0.0616 -0.0070 -0.0826
S-599	quoteMatcher.group(0)
T-599	quoteMatcher.group(1)
H-599	-0.12661981582641602	quoteMatcher.group(1)
D-599	-0.12661981582641602	quoteMatcher.group(1)
P-599	-0.4609 -0.0273 -0.1120 -0.0454 -0.0256 -0.0885
S-56	mock.expectedMessageCount(1)
T-56	mock.expectedMinimumMessageCount(1)
H-56	-0.048904985189437866	mock.expectedMinimumMessageCount(1)
D-56	-0.048904985189437866	mock.expectedMinimumMessageCount(1)
P-56	-0.0250 -0.1023 -0.0311 -0.0201 -0.0401 -0.0398 -0.0840
S-73	element.getNodeName()
T-73	element.getLocalName()
H-73	-0.06520285457372665	element.getLocalName()
D-73	-0.06520285457372665	element.getLocalName()
P-73	-0.0513 -0.1015 -0.0651 -0.0242 -0.0730 -0.0545 -0.0869
S-87	LOG.isInfoEnabled()
T-87	LOG.isDebugEnabled()
H-87	-0.07312191277742386	LOG.isDebugEnabled()
D-87	-0.07312191277742386	LOG.isDebugEnabled()
P-87	-0.0216 -0.1614 -0.0904 -0.0771 -0.0217 -0.0535 -0.0861
S-116	Thread.sleep(200)
T-116	Thread.sleep(300)
H-116	-0.14449799060821533	Thread.sleep(500)
D-116	-0.14449799060821533	Thread.sleep(500)
P-116	-0.0415 -0.0841 -0.0337 -0.5669 -0.0584 -0.0824
S-653	this.getLimit()
T-653	other.getLimit()
H-653	-0.7399600148200989	this.getLimitUsed()
D-653	-0.7399600148200989	this.getLimitUsed()
P-653	-0.1115 -0.1017 -1.0990 -0.9949 -2.7065 -0.0804 -0.0857
S-304	context.getContextPath()
T-304	request.getContextPath()
H-304	-0.15863244235515594	request.getContextPath()
D-304	-0.15863244235515594	request.getContextPath()
P-304	-0.6256 -0.1101 -0.0226 -0.0595 -0.0480 -0.0860
S-451	future.isCancelled()
T-451	future.isDone()
H-451	-0.07761852443218231	future.isDone()
D-451	-0.07761852443218231	future.isDone()
P-451	-0.0089 -0.2072 -0.0604 -0.0153 -0.0763 -0.0977
S-452	stackTrace.length < depth
T-452	stackTrace.length <= depth
H-452	-0.3016752302646637	stackTrace.length <= depth
D-452	-0.3016752302646637	stackTrace.length <= depth
P-452	-0.1297 -0.2904 -0.0643 -0.7814 -0.4858 -0.0585
S-334	activeFrom.getTime()
T-334	expiresOn.getTime()
H-334	-0.10088777542114258	expiresOn.getTime()
D-334	-0.10088777542114258	expiresOn.getTime()
P-334	-0.2227 -0.0767 -0.1002 -0.0390 -0.0810 -0.0857
S-349	in.readInt()
T-349	in.readLong()
H-349	-0.21509525179862976	in.readUShort()
D-349	-0.21509525179862976	in.readUShort()
P-349	-0.0757 -0.0828 -0.0356 -0.7458 -0.4170 -0.0667 -0.0821
S-410	{14,3.0f}
T-410	{14,3.5f}
H-410	-0.5436195135116577	{8,3.0f}
D-410	-0.5436195135116577	{8,3.0f}
P-410	-0.1727 -2.3957 -0.3866 -0.0540 -0.1873 -0.0655
S-448	System.nanoTime()
T-448	System.currentTimeMillis()
H-448	-0.10860887914896011	System.currentTimeMillis()
D-448	-0.10860887914896011	System.currentTimeMillis()
P-448	-0.2412 -0.1145 -0.0385 -0.0997 -0.0696 -0.0882
S-313	littleEndian.order()
T-313	bigEndian.order()
H-313	-0.05019233375787735	bigEndian.order()
D-313	-0.05019233375787735	bigEndian.order()
P-313	-0.0064 -0.0168 -0.0898 -0.0392 -0.0672 -0.0818
S-589	new StringBuilder(246)
T-589	new StringBuilder(245)
H-589	-0.08106230199337006	new StringBuilder(245)
D-589	-0.08106230199337006	new StringBuilder(245)
P-589	-0.0612 -0.0508 -0.2161 -0.0682 -0.0181 -0.0721
S-458	CompletableFuture<Boolean>
T-458	CompletableFuture<Void>
H-458	-0.04848099499940872	CompletableFuture<Void>
D-458	-0.04848099499940872	CompletableFuture<Void>
P-458	-0.0133 -0.0248 -0.0681 -0.0349 -0.0572 -0.0926
S-488	callTimeoutMs=5000
T-488	callTimeoutMs=10000
H-488	-0.19138436019420624	callTimeoutMs=10000
D-488	-0.19138436019420624	callTimeoutMs=10000
P-488	-0.0277 -0.0212 -0.0120 -0.6645 -0.3293 -0.0936
S-510	args.length != 2
T-510	args.length != 3
H-510	-0.19963057339191437	args != null && args.length != 2
D-510	-0.19963057339191437	args != null && args.length != 2
P-510	-0.0365 -1.5712 -0.0154 -0.0511 -0.0285 -0.0833 -0.0289 -0.0973 -0.0172 -0.0669
S-551	new StringBuilder(239)
T-551	new StringBuilder(238)
H-551	-0.06573842465877533	new StringBuilder(238)
D-551	-0.06573842465877533	new StringBuilder(238)
P-551	-0.0557 -0.0449 -0.0883 -0.0695 -0.0493 -0.0868
S-136	id=15863
T-136	id=10863
H-136	-0.1274600625038147	id=10863
D-136	-0.1274600625038147	id=10863
P-136	-0.0469 -0.4305 -0.0442 -0.0412 -0.0745
S-442	rowsRet <= 0
T-442	rowsRet <= 0 || work.getLimit() == totalRows
H-442	-0.12164775282144547	rowsRet <= 0 || work.getLimit() == totalRows
D-442	-0.12164775282144547	rowsRet <= 0 || work.getLimit() == totalRows
P-442	-0.0181 -0.0595 -0.0938 -0.0265 -0.4860 -0.0151 -0.0655 -0.1000 -0.0047 -0.4057 -0.1311 -0.0744 -0.0067 -0.2160
S-94	bindings.get()
T-94	bindings.or(ImmutableMap.<ColumnHandle,Object>of())
H-94	-0.5344465970993042	bindings.get(key)
D-94	-0.5344465970993042	bindings.get(key)
P-94	-0.2814 -0.1223 -1.2089 -0.6267 -1.3879 -0.0382 -0.0757
S-255	serialVersionUID=1L
T-255	serialVersionUID=1975269372645791816L
H-255	-0.47172337770462036	serialVersionUID=2L
D-255	-0.47172337770462036	serialVersionUID=2L
P-255	-0.0320 -0.0122 -2.0737 -0.1485 -0.0922
S-655	sendMessage() == false
T-655	currentStage != NodeStage.DONE && sendMessage() == false
H-655	-0.2421683520078659	sendMessage() == true
D-655	-0.2421683520078659	sendMessage() == true
P-655	-0.6893 -0.0646 -0.1604 -0.2055 -0.0910
S-242	elementClass != null
T-242	elementClass != null && Modifier.isPublic(elementClass.getModifiers())
H-242	-0.6223632097244263	elementClass != null && Modifier.isPublic()
D-242	-0.6223632097244263	elementClass != null && Modifier.isPublic()
P-242	-0.5167 -0.1197 -0.0295 -0.0595 -0.0826 -0.0564 -0.0168 -0.1646 -0.0109 -5.6849 -0.1042
S-503	detailNode != null
T-503	detailNode != null && detailNode.getNodeType().equals(JsonNodeType.OBJECT)
H-503	-0.5280637741088867	detailNode != null && detailNode != null
D-503	-0.5280637741088867	detailNode != null && detailNode != null
P-503	-1.1950 -0.0181 -0.1148 -0.0653 -0.0566 -1.7453 -0.0142 -1.8439 -0.1056 -0.1220
S-44	new BadRequestException()
T-44	new BadRequestException("Field " + field + " is not of a numeric type and the cardinality could not be calculated either.",e1)
H-44	-0.33959776163101196	new BadRequestException("Result is already complete: failed")
D-44	-0.33959776163101196	new BadRequestException("Result is already complete: failed")
P-44	-0.0630 -1.8767 -0.2058 -0.2681 -0.3578 -0.6292 -0.3528 -0.0653 -0.0358 -0.0516 -0.0892 -0.0798
S-726	new IllegalArgumentException()
T-726	new IllegalArgumentException("'level' cannot be null")
H-726	-0.10011006891727448	new IllegalArgumentException("Cannot determine if commit is consistent")
D-726	-0.10011006891727448	new IllegalArgumentException("Cannot determine if commit is consistent")
P-726	-0.0661 -0.3321 -0.0204 -0.0657 -0.1062 -0.0136 -0.0793 -0.0030 -0.3460 -0.0752 -0.0161 -0.0776
S-239	cacheConfig.isPopulateCache()
T-239	cacheConfig.isUseCache()
H-239	-0.4097798764705658	cacheConfig.isPopulateCache(false)
D-239	-0.4097798764705658	cacheConfig.isPopulateCache(false)
P-239	-0.0193 -0.0630 -0.1621 -0.1956 -0.7377 -0.0557 -0.2010 -2.8208 -0.0756 -0.0678 -0.1089
S-149	new RuntimeException(msg.getMessage())
T-149	new IllegalStateException(msg.getMessage())
H-149	-0.21062448620796204	new IllegalStateException(msg.getMessage())
D-149	-0.21062448620796204	new IllegalStateException(msg.getMessage())
P-149	-0.0594 -1.4151 -0.0178 -0.1091 -0.0106 -0.0890 -0.0651 -0.0472 -0.0823
S-133	runningTasks.get(assignedTask)
T-133	runningTasks.remove(assignedTask)
H-133	-0.39628279209136963	runningTasks.getOrDefault(task,0)
D-133	-0.39628279209136963	runningTasks.getOrDefault(task,0)
P-133	-0.7843 -0.0631 -0.0958 -0.0824 -1.7611 -0.1016 -0.0303 -0.4014 -0.3774 -0.5828 -0.0789
S-74	websocketComponent.setMaxThreads(11)
T-74	websocketComponent.setMaxThreads(20)
H-74	-0.04708915576338768	websocketComponent.setMaxThreads(20)
D-74	-0.04708915576338768	websocketComponent.setMaxThreads(20)
P-74	-0.0085 -0.0259 -0.0859 -0.0593 -0.0285 -0.0293 -0.0489 -0.0495 -0.0879
S-617	authentication.hasDefined(USERS)
T-617	authentication.has(USERS)
H-617	-0.06037227436900139	authentication.has(USERS)
D-617	-0.06037227436900139	authentication.has(USERS)
P-617	-0.0326 -0.0996 -0.0378 -0.1430 -0.0271 -0.0258 -0.0342 -0.0828
S-178	CONCURRENT_THREAD_COUNT=300
T-178	CONCURRENT_THREAD_COUNT=30
H-178	-0.2151961475610733	CONCURRENT_THREAD_COUNT=200
D-178	-0.2151961475610733	CONCURRENT_THREAD_COUNT=200
P-178	-0.0393 -0.0394 -0.0725 -0.0396 -0.0843 -0.0243 -0.7470 -0.7817 -0.1087
S-758	status().isMovedTemporarily()
T-758	status().isFound()
H-758	-0.06215820088982582	status().isFound()
D-758	-0.06215820088982582	status().isFound()
P-758	-0.0435 -0.0934 -0.1028 -0.0028 -0.0383 -0.0922
S-270	getFirstByType(type,withProxy)
T-270	getFirstByType(type)
H-270	-0.3985060751438141	getFirstByType(type,withProxy,true)
D-270	-0.3985060751438141	getFirstByType(type,withProxy,true)
P-270	-0.6656 -0.0392 -0.0606 -0.0822 -0.0652 -0.4826 -0.0429 -0.3434 -2.3763 -0.1418 -0.0838
S-553	Integer.valueOf(tokens[3])
T-553	Integer.parseInt(tokens[3])
H-553	-0.044131264090538025	Integer.parseInt(tokens[3])
D-553	-0.044131264090538025	Integer.parseInt(tokens[3])
P-553	-0.0256 -0.0935 -0.0138 -0.0595 -0.0255 -0.0387 -0.0133 -0.0832
S-604	conf.getSearchBaseURL()
T-604	conf.getRestBaseURL()
H-604	-0.06505347043275833	conf.getRestBaseURL()
D-604	-0.06505347043275833	conf.getRestBaseURL()
P-604	-0.0159 -0.0986 -0.0730 -0.0305 -0.0702 -0.0612 -0.0828 -0.0882
S-527	simple.getFromSentDate()
T-527	simple.getToReceivedDate()
H-527	-0.13175161182880402	simple.getFromReceivedDate()
D-527	-0.13175161182880402	simple.getFromReceivedDate()
P-527	-0.0346 -0.1032 -0.0868 -0.4101 -0.1522 -0.0929 -0.0950 -0.0792
S-10	globalExecutionStats.getSplits()
T-10	globalExecutionStats.getStartedSplits()
H-10	-0.045344870537519455	globalExecutionStats.getStartedSplits()
D-10	-0.045344870537519455	globalExecutionStats.getStartedSplits()
P-10	-0.0257 -0.0480 -0.0159 -0.0902 -0.0510 -0.0091 -0.0036 -0.0712 -0.0933
S-597	setPin(file,false)
T-597	setPin(file,true)
H-597	-0.19477413594722748	setPin(file,true)
D-597	-0.19477413594722748	setPin(file,true)
P-597	-0.9536 -0.1293 -0.0325 -0.0458 -0.0574 -0.1714 -0.0763 -0.0919
S-482	messageHandler.serverAcceptor()
T-482	messageHandler.serverResponder()
H-482	-0.05689839646220207	messageHandler.serverResponder()
D-482	-0.05689839646220207	messageHandler.serverResponder()
P-482	-0.0424 -0.0411 -0.1039 -0.0903 -0.0010 -0.0266 -0.0622 -0.0877
S-620	config.getInputShipStrategy(0)
T-620	config.getInputShipStrategy(1)
H-620	-0.21290574967861176	config.getInputShipStrategy(1)
D-620	-0.21290574967861176	config.getInputShipStrategy(1)
P-620	-0.0602 -0.0782 -0.0440 -0.0294 -0.8678 -0.0282 -0.5180 -0.0775
S-650	assertFalse(dr.isFailure())
T-650	assertTrue(dr.isFailure())
H-650	-0.05405156686902046	assertTrue(dr.isFailure())
D-650	-0.05405156686902046	assertTrue(dr.isFailure())
P-650	-0.0249 -0.0720 -0.0148 -0.0939 -0.0501 -0.0301 -0.0543 -0.0921
S-725	bar.setResultWaitTime(3000)
T-725	bar.setResultWaitTime(1000)
H-725	-0.09817096590995789	bar.setResultWaitTime(4000)
D-725	-0.09817096590995789	bar.setResultWaitTime(4000)
P-725	-0.0596 -0.0801 -0.0618 -0.0470 -0.0158 -0.4161 -0.0185 -0.0865
S-752	visitNode(node,context)
T-752	visitStatement(node,context)
H-752	-0.05557567626237869	visitStatement(node,context)
D-752	-0.05557567626237869	visitStatement(node,context)
P-752	-0.0574 -0.0242 -0.0598 -0.0282 -0.0640 -0.0311 -0.0823 -0.0977
S-400	maxSize > (used / total)
T-400	maxSize < (used / total)
H-400	-0.044286392629146576	maxSize < (used / total)
D-400	-0.044286392629146576	maxSize < (used / total)
P-400	-0.0051 -0.0465 -0.0775 -0.0274 -0.0152 -0.0391 -0.0466 -0.0970
S-493	10 * Constants.SECOND_MS
T-493	300 * Constants.SECOND_MS
H-493	-0.17315350472927094	300 * Constants.SECOND_MS
D-493	-0.17315350472927094	300 * Constants.SECOND_MS
P-493	-1.0249 -0.0191 -0.0248 -0.0954 -0.0320 -0.0707 -0.0138 -0.1044
S-202	beansXml.createAlternatives()
T-202	beansXml.getOrCreateAlternatives()
H-202	-0.05269090086221695	beansXml.getOrCreateAlternatives()
D-202	-0.05269090086221695	beansXml.getOrCreateAlternatives()
P-202	-0.0186 -0.0457 -0.0954 -0.0382 -0.0182 -0.0394 -0.0553 -0.0781 -0.0854
S-456	Integer.MIN_VALUE + 11
T-456	Integer.MIN_VALUE + 9
H-456	-0.255942165851593	Integer.MIN_VALUE + 20
D-456	-0.255942165851593	Integer.MIN_VALUE + 20
P-456	-0.0226 -0.0724 -0.0399 -0.1145 -0.0744 -0.0579 -1.5823 -0.0836
S-318	TestSuiteEnvironment.getServerAddress()
T-318	TestSuiteEnvironment.getHttpAddress()
H-318	-0.07500308752059937	TestSuiteEnvironment.getServerAddressNode1()
D-318	-0.07500308752059937	TestSuiteEnvironment.getServerAddressNode1()
P-318	-0.0101 -0.0265 -0.1005 -0.0760 -0.2624 -0.0365 -0.0228 -0.0541 -0.0863
S-374	conf.getSearchBaseURL()
T-374	conf.getRestBaseURL()
H-374	-0.06505347043275833	conf.getRestBaseURL()
D-374	-0.06505347043275833	conf.getRestBaseURL()
P-374	-0.0159 -0.0986 -0.0730 -0.0305 -0.0702 -0.0612 -0.0828 -0.0882
S-188	header.writeBytes(mask)
T-188	out.writeBytes(mask)
H-188	-0.05062859505414963	out.writeBytes(mask)
D-188	-0.05062859505414963	out.writeBytes(mask)
P-188	-0.0227 -0.0850 -0.0309 -0.0211 -0.0529 -0.0273 -0.0754 -0.0898
S-233	out.writeObject(function)
T-233	out.writeData(function)
H-233	-0.05720400810241699	out.writeData(function)
D-233	-0.05720400810241699	out.writeData(function)
P-233	-0.0454 -0.0868 -0.0280 -0.0370 -0.0492 -0.0511 -0.0669 -0.0933
S-236	name="java:/TransactionManager"
T-236	lookup="java:/TransactionManager"
H-236	-0.060869645327329636	lookup="java:/TransactionManager"
D-236	-0.060869645327329636	lookup="java:/TransactionManager"
P-236	-0.0032 -0.0484 -0.0415 -0.0658 -0.0492 -0.0441 -0.1348 -0.0998
S-294	name="java:/ConnectionFactory"
T-294	lookup="java:/ConnectionFactory"
H-294	-0.05990276113152504	lookup="java:/ConnectionFactory"
D-294	-0.05990276113152504	lookup="java:/ConnectionFactory"
P-294	-0.0031 -0.0461 -0.0457 -0.0423 -0.0627 -0.0470 -0.1295 -0.1029
S-455	Integer.valueOf(tokens[3])
T-455	Integer.parseInt(tokens[3])
H-455	-0.044131264090538025	Integer.parseInt(tokens[3])
D-455	-0.044131264090538025	Integer.parseInt(tokens[3])
P-455	-0.0256 -0.0935 -0.0138 -0.0595 -0.0255 -0.0387 -0.0133 -0.0832
S-429	mCurrentBlockLeftByte > tLen
T-429	mCurrentBlockLeftByte >= tLen
H-429	-0.08573523908853531	mCurrentBlockLeftByte >= tLen
D-429	-0.08573523908853531	mCurrentBlockLeftByte >= tLen
P-429	-0.1986 -0.0208 -0.2201 -0.0272 -0.0158 -0.0724 -0.0548 -0.0762
S-383	assertEquals(12,tokens.size())
T-383	assertEquals(9,tokens.size())
H-383	-0.291584312915802	assertEquals(10,tokens.size())
D-383	-0.291584312915802	assertEquals(10,tokens.size())
P-383	-0.0367 -1.7171 -0.0135 -0.1035 -0.0378 -0.0477 -0.0848
S-391	buffer.readableBytes() < 4
T-391	buffer.readableBytes() < 8
H-391	-0.07953492552042007	buffer.readableBytes() < 8
D-391	-0.07953492552042007	buffer.readableBytes() < 8
P-391	-0.0136 -0.1942 -0.0081 -0.0382 -0.0408 -0.1240 -0.0330 -0.1844
S-519	@IntMethodAnnotation(-44)
T-519	@InputIntMethodAnnotation(-44)
H-519	-0.09214463829994202	@InputIntMethodAnnotation(-44)
D-519	-0.09214463829994202	@InputIntMethodAnnotation(-44)
P-519	-0.0281 -0.0617 -0.2802 -0.0336 -0.0286 -0.0505 -0.2226 -0.0419 -0.0820
S-425	registered.add(objectName)
T-425	registered.remove(objectName)
H-425	-0.18129964172840118	registered.add(0,objectName)
D-425	-0.18129964172840118	registered.add(0,objectName)
P-425	-0.0901 -0.0688 -0.1439 -0.8309 -0.1267 -0.0348 -0.0697 -0.0855
S-114	BiMap<Integer,String>
T-114	ImmutableBiMap<Integer,String>
H-114	-0.17164883017539978	BiMap<String,Object>
D-114	-0.17164883017539978	BiMap<String,Object>
P-114	-0.6257 -0.0503 -0.0665 -0.0319 -0.0428 -0.4207 -0.0465 -0.0889
S-102	ps.createRelationship(rel)
T-102	ps.saveRelationship(rel)
H-102	-0.06434524059295654	ps.saveRelationship(rel)
D-102	-0.06434524059295654	ps.saveRelationship(rel)
P-102	-0.0120 -0.0955 -0.1770 -0.0176 -0.0414 -0.0220 -0.0583 -0.0912
S-556	group.shutdownGracefully()
T-556	group.shutdownGracefully(0,10,TimeUnit.SECONDS)
H-556	-0.21029655635356903	group.shutdownGracefully(0,10,TimeUnit.SECONDS)
D-556	-0.21029655635356903	group.shutdownGracefully(0,10,TimeUnit.SECONDS)
P-556	-0.2411 -0.1057 -1.2058 -0.4203 -0.0111 -0.0166 -0.1617 -0.0756 -0.0273 -0.0133 -0.4947 -0.0268 -0.0620 -0.0822
S-131	body.endsWith("6")
T-131	body.endsWith("6") || body.endsWith("10")
H-131	-0.15975244343280792	body.endsWith("6")
D-131	-0.15975244343280792	body.endsWith("6")
P-131	-0.0154 -0.0854 -0.0133 -0.0222 -0.0704 -0.6685 -0.0649 -0.3379
S-212	scrollbarsOnTop && scrollX
T-212	!fadeScrollBars && scrollbarsOnTop && scrollX
H-212	-0.3765140473842621	scrollbarsOnTop && scrollY == 0
D-212	-0.3765140473842621	scrollbarsOnTop && scrollY == 0
P-212	-0.2987 -0.1232 -0.0267 -0.0852 -0.0728 -0.5713 -0.0242 -2.0981 -0.2923 -0.1726
S-240	configList.size() == 0
T-240	configList == null || configList.size() == 0
H-240	-0.07856347411870956	configList == null || configList.size() == 0
D-240	-0.07856347411870956	configList == null || configList.size() == 0
P-240	-0.0410 -0.0685 -0.1040 -0.0555 -0.0203 -0.0226 -0.0324 -0.1191 -0.0348 -0.0825 -0.0339 -0.0528 -0.3539
S-337	c.getPath() == null
T-337	c.getPath() == null && getPath() != null
H-337	-0.10529720783233643	c.getPath() == null && getPath() != null
D-337	-0.10529720783233643	c.getPath() == null && getPath() != null
P-337	-0.0385 -0.1559 -0.0578 -0.0963 -0.0951 -0.1326 -0.0566 -0.3008 -0.0508 -0.0851 -0.1417 -0.0811 -0.0766
S-647	new HashSet<RecordReplicationInfo>()
T-647	new HashSet<RecordReplicationInfo>(recordStore.size())
H-647	-0.10598722845315933	new HashSet<RecordReplicationInfo>()
D-647	-0.10598722845315933	new HashSet<RecordReplicationInfo>()
P-647	-0.0705 -0.0201 -0.2188 -0.1157 -0.0537 -0.0571 -0.2107 -0.1013
S-113	String pattern=this.prefix;
T-113	StringBuffer pattern=new StringBuffer(this.prefix);
H-113	-0.2373819798231125	String pattern=this.prefix;
D-113	-0.2373819798231125	String pattern=this.prefix;
P-113	-0.9161 -0.0661 -0.0978 -0.1678 -0.1088 -0.2967 -0.0802 -0.1656
S-340	stopwatch.elapsedMillis()
T-340	stopwatch.elapsed(MILLISECONDS)
H-340	-0.08258744329214096	stopwatch.elapsed(MILLISECONDS)
D-340	-0.08258744329214096	stopwatch.elapsed(MILLISECONDS)
P-340	-0.0486 -0.0097 -0.1042 -0.0369 -0.0224 -0.1432 -0.1058 -0.2221 -0.0452 -0.0877
S-413	user.getSystemId() == null
T-413	user.getSystemId() == null || user.getSystemId().equals("")
H-413	-0.30324333906173706	user.getSystemId() == null || user.getSystemId().isEmpty()
D-413	-0.30324333906173706	user.getSystemId() == null || user.getSystemId().isEmpty()
P-413	-0.0404 -0.3681 -0.0636 -0.0119 -0.1054 -0.2201 -0.0611 -0.5554 -0.0510 -0.1185 -0.1043 -0.0068 -0.4893 -2.4791 -0.0505 -0.1262
S-289	new java.util.Date()
T-289	new java.util.Date(System.currentTimeMillis() - 3600 * 24)
H-289	-0.8203617334365845	new java.util.Date()
D-289	-0.8203617334365845	new java.util.Date()
P-289	-0.0845 -0.0819 -0.0711 -0.1786 -0.0852 -0.1315 -5.8361 -0.0941
S-517	"LEVEL".equalsIgnoreCase(ident)
T-517	"LEVEL".equalsIgnoreCase(ident) || "CONNECT_BY_ISCYCLE".equalsIgnoreCase(ident)
H-517	-0.4872303605079651	"LEVEL".equalsIgnoreCase(ident) || "true".equalsIgnoreCase(ident)
D-517	-0.4872303605079651	"LEVEL".equalsIgnoreCase(ident) || "true".equalsIgnoreCase(ident)
P-517	-0.0954 -0.0274 -0.0292 -0.0080 -0.0645 -0.2108 -0.0840 -0.2007 -0.2245 -5.1309 -0.7710 -0.0332 -0.0728 -0.6665 -0.0428 -0.1339
S-562	processInstanceArray.size() == 0
T-562	processInstanceArray.size() == 0 && StringUtils.isNotEmpty(callActivityBehavior.getProcessDefinitonKey())
H-562	-0.08268661051988602	processInstanceArray == null || processInstanceArray.size() == 0
D-562	-0.08268661051988602	processInstanceArray == null || processInstanceArray.size() == 0
P-562	-0.0036 -0.1119 -0.4950 -0.0456 -0.0327 -0.0031 -0.0201 -0.0745 -0.0465 -0.0724 -0.0419 -0.0411 -0.0866
S-197	this.referenceId == referenceId
T-197	!transactional && this.referenceId == referenceId
H-197	-0.31479474902153015	!this.referenceId == referenceId
D-197	-0.31479474902153015	!this.referenceId == referenceId
P-197	-1.5939 -0.0161 -0.0621 -0.5962 -0.0725 -0.2276 -0.0511 -0.0686 -0.1450
S-261	SLEEP_TIME=500
T-261	SLEEP_TIME=1500
H-261	-0.3444358706474304	SLEEP_TIME=100
D-261	-0.3444358706474304	SLEEP_TIME=100
P-261	-0.0392 -0.0625 -0.0703 -0.1155 -0.0726 -1.9651 -0.0857
S-715	ExprEval.of(null)
T-715	ExprEval.ofLong(null)
H-715	-0.14876514673233032	ExprEval.ofDouble(null)
D-715	-0.14876514673233032	ExprEval.ofDouble(null)
P-715	-0.0102 -0.0323 -0.0783 -0.1172 -0.8709 -0.0603 -0.0328 -0.0501 -0.0868
S-737	ImmutableList.of(interceptors)
T-737	ImmutableList.copyOf(interceptors)
H-737	-0.057860009372234344	ImmutableList.copyOf(interceptors)
D-737	-0.057860009372234344	ImmutableList.copyOf(interceptors)
P-737	-0.0999 -0.0973 -0.0276 -0.0142 -0.0795 -0.0259 -0.0228 -0.0658 -0.0878
S-392	logger.info("Strip code")
T-392	logger.fine("Strip code")
H-392	-0.06425363570451736	logger.fine("Strip code")
D-392	-0.06425363570451736	logger.fine("Strip code")
P-392	-0.0482 -0.1007 -0.0700 -0.0632 -0.0579 -0.0084 -0.0900 -0.0474 -0.0925
S-486	TestSuiteEnvironment.getServerAddress()
T-486	TestSuiteEnvironment.getServerAddressNode1()
H-486	-0.07500308752059937	TestSuiteEnvironment.getServerAddressNode1()
D-486	-0.07500308752059937	TestSuiteEnvironment.getServerAddressNode1()
P-486	-0.0101 -0.0265 -0.1005 -0.0760 -0.2624 -0.0365 -0.0228 -0.0541 -0.0863
S-592	FSImageFormatProtobuf.class
T-592	FSImageFormatPBINode.class
H-592	-0.3475281000137329	FSImageFormatProtobuf.class
D-592	-0.3475281000137329	FSImageFormatProtobuf.class
P-592	-1.0536 -0.1794 -0.0699 -0.0388 -0.0120 -1.1895 -0.0950 -0.1420
S-601	TestSuiteEnvironment.getServerAddress()
T-601	TestSuiteEnvironment.getServerAddressNode1()
H-601	-0.07500308752059937	TestSuiteEnvironment.getServerAddressNode1()
D-601	-0.07500308752059937	TestSuiteEnvironment.getServerAddressNode1()
P-601	-0.0101 -0.0265 -0.1005 -0.0760 -0.2624 -0.0365 -0.0228 -0.0541 -0.0863
S-268	logger.info("Normalizing")
T-268	logger.fine("Normalizing")
H-268	-0.07565004378557205	logger.fine("Normalizing")
D-268	-0.07565004378557205	logger.fine("Normalizing")
P-268	-0.0450 -0.0984 -0.0257 -0.2070 -0.0606 -0.0430 -0.0463 -0.0620 -0.0930
S-303	stopwatch.elapsedMillis()
T-303	stopwatch.elapsed(MILLISECONDS)
H-303	-0.08258744329214096	stopwatch.elapsed(MILLISECONDS)
D-303	-0.08258744329214096	stopwatch.elapsed(MILLISECONDS)
P-303	-0.0486 -0.0097 -0.1042 -0.0369 -0.0224 -0.1432 -0.1058 -0.2221 -0.0452 -0.0877
S-763	executionJobVertex.getParallelism()
T-763	executionJobVertex.getMaxParallelism()
H-763	-0.6384264826774597	executionJobVertex.getParallelismUsed()
D-763	-0.6384264826774597	executionJobVertex.getParallelismUsed()
P-763	-0.0256 -0.0286 -0.0545 -0.0948 -0.0543 -0.2660 -5.0878 -0.0437 -0.0906
S-783	ExprEval.of(null)
T-783	ExprEval.ofDouble(null)
H-783	-0.14876514673233032	ExprEval.ofDouble(null)
D-783	-0.14876514673233032	ExprEval.ofDouble(null)
P-783	-0.0102 -0.0323 -0.0783 -0.1172 -0.8709 -0.0603 -0.0328 -0.0501 -0.0868
S-37	camelContext.getComponent(component)
T-37	camelContext.getComponent(component,false)
H-37	-0.31481820344924927	camelContext.getComponent(component)
D-37	-0.31481820344924927	camelContext.getComponent(component)
P-37	-0.0082 -0.0943 -0.0577 -0.6555 -0.0586 -1.3156 -0.2274 -0.1011
S-128	NoopChatHandlerProvider.class
T-128	ServiceAnnouncingChatHandlerProvider.class
H-128	-0.04621201008558273	ServiceAnnouncingChatHandlerProvider.class
D-128	-0.04621201008558273	ServiceAnnouncingChatHandlerProvider.class
P-128	-0.1173 -0.0301 -0.0303 -0.0033 -0.0019 -0.0259 -0.0250 -0.0809 -0.0595 -0.0879
S-153	name="java:/ConnectionFactory"
T-153	lookup="java:/ConnectionFactory"
H-153	-0.05990276113152504	lookup="java:/ConnectionFactory"
D-153	-0.05990276113152504	lookup="java:/ConnectionFactory"
P-153	-0.0031 -0.0461 -0.0457 -0.0423 -0.0627 -0.0470 -0.1295 -0.1029
S-38	Thread.currentThread().isInterrupted()
T-38	Thread.currentThread().interrupted()
H-38	-0.06081220507621765	Thread.currentThread().interrupted()
D-38	-0.06081220507621765	Thread.currentThread().interrupted()
P-38	-0.0731 -0.1079 -0.0141 -0.1037 -0.0029 -0.0692 -0.0280 -0.0876
S-89	edge.setType(type)
T-89	edge.setDirection(type)
H-89	-0.06749098002910614	edge.setDirection(type)
D-89	-0.06749098002910614	edge.setDirection(type)
P-89	-0.0316 -0.0763 -0.0917 -0.0966 -0.0498 -0.0377 -0.0659 -0.0903
S-62	new TelnetServerPipelineFactory()
T-62	new TelnetServerInitializer()
H-62	-0.24810302257537842	new TelnetServerPipelineFactory()
D-62	-0.24810302257537842	new TelnetServerPipelineFactory()
P-62	-0.0979 -0.0739 -0.0303 -0.0996 -0.1282 -0.0808 -1.3807 -0.0933
S-544	ufsPath.getPath()
T-544	ufsPath.toString()
H-544	-0.09461856633424759	ufsPath.toString()
D-544	-0.09461856633424759	ufsPath.toString()
P-544	-0.0356 -0.0250 -0.0513 -0.1088 -0.2775 -0.0776 -0.0865
S-464	this.isDefaultAutoCommit()
T-464	this.getDefaultReadOnly()
H-464	-0.17989590764045715	this.getDefaultReadOnly()
D-464	-0.17989590764045715	this.getDefaultReadOnly()
P-464	-0.1049 -0.1331 -0.7016 -0.0063 -0.0368 -0.0966
S-559	this.isDefaultAutoCommit()
T-559	this.getDefaultReadOnly()
H-559	-0.17989590764045715	this.getDefaultReadOnly()
D-559	-0.17989590764045715	this.getDefaultReadOnly()
P-559	-0.1049 -0.1331 -0.7016 -0.0063 -0.0368 -0.0966
S-25	HashMap<String,ASTNode>
T-25	LinkedHashMap<String,ASTNode>
H-25	-0.05042634531855583	LinkedHashMap<String,ASTNode>
D-25	-0.05042634531855583	LinkedHashMap<String,ASTNode>
P-25	-0.0185 -0.0885 -0.0413 -0.0510 -0.0101 -0.0282 -0.0802 -0.0855
S-180	tempBlock.getCommitPath()
T-180	tempBlock.getPath()
H-180	-0.11387335509061813	tempBlock.getPath()
D-180	-0.11387335509061813	tempBlock.getPath()
P-180	-0.0628 -0.0335 -0.0942 -0.0950 -0.1593 -0.2665 -0.0859
S-513	!segments.add(segment)
T-513	segments.add(segment)
H-513	-0.3089323341846466	segments.add(segment)
D-513	-0.3089323341846466	segments.add(segment)
P-513	-1.7209 -0.1173 -0.0361 -0.1044 -0.0146 -0.0701 -0.0991
S-536	lineageInfo.getParents()
T-536	lineageInfo.getChildren()
H-536	-0.06088363006711006	lineageInfo.getChildren()
D-536	-0.06088363006711006	lineageInfo.getChildren()
P-536	-0.0790 -0.0231 -0.0590 -0.1047 -0.0149 -0.0608 -0.0847
S-90	HazelcastInstanceFactory.terminateAll()
T-90	factory.terminateAll()
H-90	-0.07924938201904297	factory.terminateAll()
D-90	-0.07924938201904297	factory.terminateAll()
P-90	-0.1521 -0.1098 -0.0329 -0.0395 -0.0555 -0.0857
S-542	obj.getAcceptableTokens()
T-542	obj.getRequiredTokens()
H-542	-0.06355731934309006	obj.getRequiredTokens()
D-542	-0.06355731934309006	obj.getRequiredTokens()
P-542	-0.0534 -0.1107 -0.0634 -0.0476 -0.0168 -0.0725 -0.0806
S-598	Bukkit.getOfflinePlayers()
T-598	Bukkit.getOperators()
H-598	-0.13063448667526245	Bukkit.getOperators()
D-598	-0.13063448667526245	Bukkit.getOperators()
P-598	-0.0698 -0.0135 -0.0945 -0.0619 -0.0436 -0.5560 -0.0752
S-616	ctx.alloc().heapBuffer()
T-616	ctx.alloc().buffer()
H-616	-0.534196674823761	ctx.alloc().heapBuffer(false)
D-616	-0.534196674823761	ctx.alloc().heapBuffer(false)
P-616	-0.0171 -0.0985 -0.0133 -0.1135 -1.4886 -0.1165 -0.6596 -2.6269 -0.1206 -0.0874
S-664	assertEquals(9,set.size())
T-664	assertEquals(10,set.size())
H-664	-0.15934203565120697	assertEquals(10,set.size())
D-664	-0.15934203565120697	assertEquals(10,set.size())
P-664	-0.0364 -0.7541 -0.0492 -0.0966 -0.0418 -0.0500 -0.0873
S-722	!segments.add(segment)
T-722	segments.add(segment)
H-722	-0.3089323341846466	segments.add(segment)
D-722	-0.3089323341846466	segments.add(segment)
P-722	-1.7209 -0.1173 -0.0361 -0.1044 -0.0146 -0.0701 -0.0991
S-767	ctx.alloc().heapBuffer()
T-767	ctx.alloc().buffer()
H-767	-0.534196674823761	ctx.alloc().heapBuffer(false)
D-767	-0.534196674823761	ctx.alloc().heapBuffer(false)
P-767	-0.0171 -0.0985 -0.0133 -0.1135 -1.4886 -0.1165 -0.6596 -2.6269 -0.1206 -0.0874
S-0	expectedValue.equals(oldValue)
T-0	expectedValue.equals(oldObject)
H-0	-0.36326053738594055	expectedValue.equalsIgnoreCase(oldValue)
D-0	-0.36326053738594055	expectedValue.equalsIgnoreCase(oldValue)
P-0	-0.9015 -0.2100 -1.3840 -0.0618 -0.0751 -0.0326 -0.0544 -0.1867
S-260	this.isDefaultAutoCommit()
T-260	this.getDefaultReadOnly()
H-260	-0.17989590764045715	this.getDefaultReadOnly()
D-260	-0.17989590764045715	this.getDefaultReadOnly()
P-260	-0.1049 -0.1331 -0.7016 -0.0063 -0.0368 -0.0966
S-826	connections.get(address)
T-826	connections.get(target)
H-826	-0.06617499142885208	connections.get(target)
D-826	-0.06617499142885208	connections.get(target)
P-826	-0.0326 -0.0999 -0.0625 -0.0510 -0.0713 -0.0581 -0.0878
S-765	preDestroys != null
T-765	prePassivates != null
H-765	-0.06414992362260818	prePassivates != null
D-765	-0.06414992362260818	prePassivates != null
P-765	-0.0028 -0.1579 -0.0020 -0.1265 -0.0276 -0.0467 -0.0854
S-778	left.getQualifierLength()
T-778	left.getRowLength()
H-778	-0.0730336606502533	left.getRowLength()
D-778	-0.0730336606502533	left.getRowLength()
P-778	-0.0304 -0.0947 -0.0903 -0.0879 -0.0423 -0.0809 -0.0848
S-717	is("/home/source")
T-717	endsWith("/home/source")
H-717	-0.04669220745563507	endsWith("/home/source")
D-717	-0.04669220745563507	endsWith("/home/source")
P-717	-0.0254 -0.0149 -0.0173 -0.0531 -0.0353 -0.0860 -0.0949
S-82	fields.contains(name)
T-82	!fields.contains(name)
H-82	-0.0618547648191452	!fields.contains(name)
D-82	-0.0618547648191452	!fields.contains(name)
P-82	-0.0503 -0.0831 -0.0964 -0.0432 -0.0433 -0.0381 -0.0726 -0.0678
S-126	grammar.getTokenNames()
T-126	grammar.getTokenDisplayNames()
H-126	-0.06019633635878563	grammar.getTokenDisplayNames()
D-126	-0.06019633635878563	grammar.getTokenDisplayNames()
P-126	-0.0111 -0.1125 -0.0962 -0.0227 -0.0239 -0.0557 -0.0790 -0.0805
S-229	boundary.startsWith("\"")
T-229	boundary.endsWith("\"")
H-229	-0.06126314401626587	boundary.endsWith("\"")
D-229	-0.06126314401626587	boundary.endsWith("\"")
P-229	-0.0293 -0.1695 -0.0144 -0.0348 -0.0801 -0.0340 -0.0392 -0.0887
S-245	entries.remove(key)
T-245	entries.remove(timeKey)
H-245	-0.2232024371623993	entries.get(key)
D-245	-0.2232024371623993	entries.get(key)
P-245	-0.1869 -0.0978 -0.9805 -0.0424 -0.0563 -0.1088 -0.0897
S-578	sizeNeeded >= items.length
T-578	sizeNeeded > items.length
H-578	-0.045644983649253845	sizeNeeded > items.length
D-578	-0.045644983649253845	sizeNeeded > items.length
P-578	-0.0318 -0.0061 -0.0218 -0.0322 -0.0903 -0.0495 -0.0877
S-751	Character.toLowerCase(ch)
T-751	Character.toUpperCase(ch)
H-751	-0.053494468331336975	Character.toUpperCase(ch)
D-751	-0.053494468331336975	Character.toUpperCase(ch)
P-751	-0.0201 -0.0807 -0.0141 -0.0543 -0.0614 -0.0578 -0.0861
S-432	CxfEndpointBean.class
T-432	CxfSpringEndpointBean.class
H-432	-0.20880305767059326	CxfEndpointBean.class
D-432	-0.20880305767059326	CxfEndpointBean.class
P-432	-0.2071 -0.0610 -0.0072 -0.0652 -0.8888 -0.1003 -0.1320
S-602	NettyAsyncHttpProvider.class
T-602	JDKAsyncHttpProvider.class
H-602	-0.09726719558238983	NettyConnectionsPool.class
D-602	-0.09726719558238983	NettyConnectionsPool.class
P-602	-0.0318 -0.0123 -0.0037 -0.3870 -0.0575 -0.0913
S-603	time.put(delta)
T-603	time.put(current)
H-603	-0.4790284335613251	time.put(delta,0)
D-603	-0.4790284335613251	time.put(delta,0)
P-603	-0.0884 -0.0832 -0.1624 -0.7483 -0.2949 -0.5242 -1.8347 -0.0961
S-577	coreThreads.asString()
T-577	queueLength.asString()
H-577	-0.08520158380270004	queueLength.asString()
D-577	-0.08520158380270004	queueLength.asString()
P-577	-0.0476 -0.1344 -0.1119 -0.0931 -0.0466 -0.0805 -0.0823
S-117	assertClusterSize(2,h2)
T-117	assertClusterSizeEventually(2,h2)
H-117	-0.07643092423677444	assertClusterSizeEventually(2,h2)
D-117	-0.07643092423677444	assertClusterSizeEventually(2,h2)
P-117	-0.0497 -0.0232 -0.0705 -0.0170 -0.3151 -0.0252 -0.0598 -0.0449 -0.0824
S-595	toHeapData(key)
T-595	toEventData(key)
H-595	-0.055191103368997574	toEventData(key)
D-595	-0.055191103368997574	toEventData(key)
P-595	-0.0884 -0.0309 -0.0238 -0.0437 -0.0504 -0.0569 -0.0922
S-716	queue.size() < 100000
T-716	queue.size() > 100000
H-716	-0.23150162398815155	queue.size() < 10000
D-716	-0.23150162398815155	queue.size() < 10000
P-716	-0.0207 -0.4201 -0.0345 -0.0828 -0.1070 -0.8557 -0.0997
S-707	message.getFormattedFields()
T-707	message.getFilteredFields()
H-707	-0.06824999302625656	message.getFilteredFields()
D-707	-0.06824999302625656	message.getFilteredFields()
P-707	-0.0508 -0.1037 -0.0821 -0.0022 -0.0772 -0.0779 -0.0838
S-623	toHeapData(key)
T-623	toEventData(key)
H-623	-0.055191103368997574	toEventData(key)
D-623	-0.055191103368997574	toEventData(key)
P-623	-0.0884 -0.0309 -0.0238 -0.0437 -0.0504 -0.0569 -0.0922
S-667	client.getBulkReply()
T-667	client.getStatusCodeReply()
H-667	-0.0661574974656105	client.getStatusCodeReply()
D-667	-0.0661574974656105	client.getStatusCodeReply()
P-667	-0.0487 -0.0995 -0.0421 -0.0466 -0.0086 -0.1359 -0.0817
S-699	val.get(key)
T-699	val.get(k)
H-699	-0.33200180530548096	val.get(key)
D-699	-0.33200180530548096	val.get(key)
P-699	-0.1668 -0.0956 -0.0670 -0.5120 -0.3222 -1.0665 -0.0940
S-347	sectionStartToken.word()
T-347	sectionStartTagToken.word()
H-347	-0.11742356419563293	sectionStartTagToken.word()
D-347	-0.11742356419563293	sectionStartTagToken.word()
P-347	-0.0222 -0.0663 -0.4040 -0.1378 -0.0941 -0.0522 -0.0664 -0.0963
S-572	is("/home/source")
T-572	endsWith("/home/source")
H-572	-0.04669220745563507	endsWith("/home/source")
D-572	-0.04669220745563507	endsWith("/home/source")
P-572	-0.0254 -0.0149 -0.0173 -0.0531 -0.0353 -0.0860 -0.0949
S-548	grammar.getTokenNames()
T-548	grammar.getTokenDisplayNames()
H-548	-0.06019633635878563	grammar.getTokenDisplayNames()
D-548	-0.06019633635878563	grammar.getTokenDisplayNames()
P-548	-0.0111 -0.1125 -0.0962 -0.0227 -0.0239 -0.0557 -0.0790 -0.0805
S-593	assertClusterSize(2,h2)
T-593	assertClusterSizeEventually(2,h2)
H-593	-0.07643092423677444	assertClusterSizeEventually(2,h2)
D-593	-0.07643092423677444	assertClusterSizeEventually(2,h2)
P-593	-0.0497 -0.0232 -0.0705 -0.0170 -0.3151 -0.0252 -0.0598 -0.0449 -0.0824
S-345	assertClusterSize(2,nodes[0])
T-345	assertClusterSizeEventually(2,nodes[0])
H-345	-0.08699999004602432	assertClusterSizeEventually(2,nodes[0])
D-345	-0.08699999004602432	assertClusterSizeEventually(2,nodes[0])
P-345	-0.0482 -0.0195 -0.0742 -0.0157 -0.4785 -0.0271 -0.0216 -0.0173 -0.0809
S-387	new GenerationException(e)
T-387	new GenerationException("Couldn't parse type: " + typeDefinition,e)
H-387	-0.1742234230041504	new GenerationException("Couldn't parse type: " + typeDefinition,e)
D-387	-0.1742234230041504	new GenerationException("Couldn't parse type: " + typeDefinition,e)
P-387	-0.0561 -0.0076 -0.0297 -0.1909 -1.3828 -0.0944 -0.0310 -0.0023 -0.1617 -0.0096 -0.2080 -0.4481 -0.0327 -0.0362 -0.0533 -0.3867 -0.0511 -0.0564 -0.0717
S-808	configuredScriptEngineNames == null
T-808	configuredScriptEngineNames == null || configuredScriptEngineNames.isEmpty()
H-808	-0.20498719811439514	configuredScriptEngineNames == null || configuredScriptEngineNames.isEmpty()
D-808	-0.20498719811439514	configuredScriptEngineNames == null || configuredScriptEngineNames.isEmpty()
P-808	-0.0109 -0.0162 -0.0093 -0.0459 -0.2370 -0.0505 -0.7330 -0.0334 -0.0268 -0.0109 -0.0635 -0.0647 -1.5678 -0.0954 -0.1096
S-681	toBeRemovedKeys.clear()
T-681	toBeRemovedKeys.removeAll(keysToDelete)
H-681	-0.1717006117105484	toBeRemovedKeys.remove()
D-681	-0.1717006117105484	toBeRemovedKeys.remove()
P-681	-0.1444 -0.0772 -0.0751 -0.1331 -0.5023 -0.1882 -0.0816
S-629	row.size() == 0
T-629	row == null || row.size() == 0
H-629	-0.07682234048843384	row == null || row.size() == 0
D-629	-0.07682234048843384	row == null || row.size() == 0
P-629	-0.0913 -0.0112 -0.0910 -0.0178 -0.0354 -0.1456 -0.0320 -0.0735 -0.0399 -0.0481 -0.2592
S-607	newroot.length == 1
T-607	shift > 0 && newroot.length == 1
H-607	-0.22508379817008972	newroot == null || newroot.length == 1
D-607	-0.22508379817008972	newroot == null || newroot.length == 1
P-607	-0.0433 -0.0929 -2.0972 -0.0287 -0.0149 -0.0646 -0.0490 -0.0708 -0.0627 -0.0710 -0.0237 -0.0821
S-342	analysis.getType(aggregate)
T-342	analysis.getTypeWithCoercions(aggregate)
H-342	-0.05225858837366104	analysis.getTypeWithCoercions(aggregate)
D-342	-0.05225858837366104	analysis.getTypeWithCoercions(aggregate)
P-342	-0.0130 -0.1020 -0.1627 -0.0761 -0.0030 -0.0072 -0.0012 -0.0561 -0.0216 -0.0496 -0.0824
S-88	new JobConf(config_)
T-88	new JobConf(config_,StreamJob.class)
H-88	-0.9342696070671082	new JobConf(config)
D-88	-0.9342696070671082	new JobConf(config)
P-88	-0.0733 -0.0419 -0.1607 -0.4482 -4.7851 -0.0965
S-31	analysis.getType(expression)
T-31	analysis.getTypeWithCoercions(expression)
H-31	-0.039692845195531845	analysis.getTypeWithCoercions(expression)
D-31	-0.039692845195531845	analysis.getTypeWithCoercions(expression)
P-31	-0.0105 -0.0977 -0.0716 -0.0170 -0.0016 -0.0084 -0.0010 -0.0524 -0.0389 -0.0573 -0.0803
S-608	ImmutableSet.of(modules)
T-608	ImmutableSet.copyOf(modules)
H-608	-0.04727940633893013	ImmutableSet.copyOf(modules)
D-608	-0.04727940633893013	ImmutableSet.copyOf(modules)
P-608	-0.0141 -0.1025 -0.0153 -0.0159 -0.0805 -0.0122 -0.0496 -0.0882
S-367	visitor.visit(this)
T-367	visitor.visitTypeLiteral(this)
H-367	-0.07760101556777954	visitor.visitTypeLiteral(this)
D-367	-0.07760101556777954	visitor.visitTypeLiteral(this)
P-367	-0.0687 -0.0912 -0.0549 -0.0832 -0.1026 -0.0951 -0.0603 -0.0540 -0.0884
S-611	executionStats.getSplits()
T-611	executionStats.getStartedSplits()
H-611	-0.04560033977031708	executionStats.getStartedSplits()
D-611	-0.04560033977031708	executionStats.getStartedSplits()
P-611	-0.0318 -0.0240 -0.0909 -0.0372 -0.0105 -0.0037 -0.0776 -0.0890
S-333	new ModelNode().set(15000)
T-333	new ModelNode().set(15000L)
H-333	-0.6205940246582031	new ModelNode().set(15000)
D-333	-0.6205940246582031	new ModelNode().set(15000)
P-333	-0.0480 -0.0098 -0.0659 -0.0507 -1.0454 -3.0463 -0.0780
S-256	Gdx.input.getX()
T-256	Gdx.input.getX(i)
H-256	-0.3094192147254944	Gdx.input.getY()
D-256	-0.3094192147254944	Gdx.input.getY()
P-256	-0.0222 -0.0819 -0.0552 -0.1051 -1.7278 -0.0888 -0.0849
S-804	AsyncIOWriterAdapter.class
T-804	AtmosphereInterceptorWriter.class
H-804	-0.16774873435497284	AsyncIOWriterAdapter.class
D-804	-0.16774873435497284	AsyncIOWriterAdapter.class
P-804	-0.3185 -0.1206 -0.2485 -0.0141 -0.2241 -0.0910 -0.1574
S-788	context.var("double")
T-788	context.var("double",2)
H-788	-0.05884317681193352	context.var("double",2)
D-788	-0.05884317681193352	context.var("double",2)
P-788	-0.0446 -0.0854 -0.0464 -0.0545 -0.0197 -0.1066 -0.0311 -0.0825
S-779	config.getMaxRedirects()
T-779	clusterProperties.getMaxRedirects()
H-779	-0.07145345956087112	clusterProperties.getMaxRedirects()
D-779	-0.07145345956087112	clusterProperties.getMaxRedirects()
P-779	-0.1100 -0.0847 -0.0787 -0.0562 -0.0240 -0.0324 -0.0938 -0.0918
S-738	grammar.getTokenNames()
T-738	grammar.getTokenDisplayNames()
H-738	-0.06019633635878563	grammar.getTokenDisplayNames()
D-738	-0.06019633635878563	grammar.getTokenDisplayNames()
P-738	-0.0111 -0.1125 -0.0962 -0.0227 -0.0239 -0.0557 -0.0790 -0.0805
S-685	put.writeToWAL()
T-685	put.getWriteToWAL()
H-685	-0.06971660256385803	put.getWriteToWAL()
D-685	-0.06971660256385803	put.getWriteToWAL()
P-685	-0.0680 -0.1173 -0.0166 -0.0999 -0.0654 -0.0027 -0.0988 -0.0891
S-678	document.tokens().get(10)
T-678	document.tokens().get(9)
H-678	-0.29237425327301025	document.tokens().get(10)
D-678	-0.29237425327301025	document.tokens().get(10)
P-678	-0.6462 -0.0886 -0.0412 -0.0831 -0.1242 -0.9783 -0.0851
S-558	clearFromMember.start()
T-558	clearFromMember.join()
H-558	-0.05465942993760109	clearFromMember.join()
D-558	-0.05465942993760109	clearFromMember.join()
P-558	-0.0207 -0.0556 -0.0241 -0.1120 -0.0036 -0.0758 -0.0907
S-108	LOG.error("Async Kafka commit failed.",cause)
T-108	LOG.warn("Async Kafka commit failed.",cause)
H-108	-0.06585077941417694	LOG.warn("Async Kafka commit failed.",cause)
D-108	-0.06585077941417694	LOG.warn("Async Kafka commit failed.",cause)
P-108	-0.0331 -0.0988 -0.1406 -0.0828 -0.0336 -0.0224 -0.0767 -0.0239 -0.1129 -0.0195 -0.0611 -0.0848
S-111	LOG.warn("Exception while fetching metrics.",e)
T-111	LOG.debug("Exception while fetching metrics.",e)
H-111	-0.06553719937801361	LOG.debug("Exception while fetching metrics.",e)
D-111	-0.06553719937801361	LOG.debug("Exception while fetching metrics.",e)
P-111	-0.0250 -0.0982 -0.1281 -0.1000 -0.0440 -0.0433 -0.0272 -0.0323 -0.0766 -0.0571 -0.0689 -0.0857
S-139	GL.glBindTextureEXT(target,texture)
T-139	GL.glBindTexture(target,texture)
H-139	-0.07424947619438171	GL.glBindTexture(target,texture)
D-139	-0.07424947619438171	GL.glBindTexture(target,texture)
P-139	-0.0144 -0.0867 -0.0112 -0.2494 -0.0639 -0.0617 -0.0444 -0.1136 -0.0200 -0.0601 -0.0913
S-694	!tableLayoutHandle.getPartitions().isPresent()
T-694	tableLayoutHandle.getPartitions().isPresent()
H-694	-0.36169683933258057	!tableLayoutHandle.getPartitions().isPresent()
D-694	-0.36169683933258057	!tableLayoutHandle.getPartitions().isPresent()
P-694	-3.0423 -0.0445 -0.0400 -0.0103 -0.1220 -0.1276 -0.0177 -0.0932 -0.1121 -0.2218 -0.0324 -0.4764
S-416	DEFAULT_USER_AS_DEFAULT_QUEUE=false
T-416	DEFAULT_USER_AS_DEFAULT_QUEUE=true
H-416	-0.07287558168172836	DEFAULT_USER_AS_DEFAULT_QUEUE=true
D-416	-0.07287558168172836	DEFAULT_USER_AS_DEFAULT_QUEUE=true
P-416	-0.0167 -0.0844 -0.0187 -0.0856 -0.0877 -0.0830 -0.0571 -0.0951 -0.0793 -0.0696 -0.1039 -0.0934
S-773	ImmutableSet.Builder<ImplemetationMethodDescriptor>
T-773	ImmutableSet.Builder<ImplementationMethodDescriptor>
H-773	-0.07069786638021469	ImmutableSet.Builder<ImplementationMethodDescriptor>
D-773	-0.07069786638021469	ImmutableSet.Builder<ImplementationMethodDescriptor>
P-773	-0.0251 -0.0920 -0.2371 -0.0999 -0.0072 -0.0128 -0.0130 -0.0674 -0.0817
S-6	reg.put("localhost:" + port,env)
T-6	reg.bind("localhost:" + port,env)
H-6	-0.056945979595184326	reg.bind("localhost:" + port,env)
D-6	-0.056945979595184326	reg.bind("localhost:" + port,env)
P-6	-0.0160 -0.0852 -0.0148 -0.0735 -0.0429 -0.0585 -0.0615 -0.0495 -0.0701 -0.0396 -0.0782 -0.0936
S-166	minZ != 0f && maxZ != 0f
T-166	minZ != 0f || maxZ != 0f
H-166	-0.10333371162414551	minZ != 0f && maxZ != 0f
D-166	-0.10333371162414551	minZ != 0f && maxZ != 0f
P-166	-0.0346 -0.2915 -0.0521 -0.0653 -0.0472 -0.3537 -0.0380 -0.0732 -0.0421 -0.0478 -0.0577 -0.1368
S-348	public Integer getOlderThan(){ return olderThan; }
T-348	public Long getOlderThan(){ return olderThan; }
H-348	-0.04897802323102951	public Long getOlderThan(){ return olderThan; }
D-348	-0.04897802323102951	public Long getOlderThan(){ return olderThan; }
P-348	-0.0336 -0.1021 -0.0539 -0.0317 -0.0163 -0.0739 -0.0601 -0.0180 -0.0184 -0.0369 -0.0430 -0.0999
S-402	LOGGER.debug("Unable to process JSON",exception)
T-402	LOGGER.warn("Unable to process JSON",exception)
H-402	-0.1091146245598793	LOGGER.warn("Unable to process JSON",exception)
D-402	-0.1091146245598793	LOGGER.warn("Unable to process JSON",exception)
P-402	-0.0272 -0.0988 -0.5962 -0.0693 -0.0132 -0.0592 -0.0534 -0.0444 -0.0888 -0.1020 -0.0680 -0.0889
S-420	entry.getValue().getManagementInterfaceMinorVersion()
T-420	entry.getValue().getManagementInterfaceMicroVersion()
H-420	-0.05106371268630028	entry.getValue().getManagementInterfaceMicroVersion()
D-420	-0.05106371268630028	entry.getValue().getManagementInterfaceMicroVersion()
P-420	-0.0154 -0.0811 -0.0116 -0.0764 -0.0520 -0.0126 -0.1162 -0.0076 -0.0385 -0.0679 -0.0822
S-285	assertTrue(jmsTemplate.isPubSubDomain())
T-285	assertFalse(jmsTemplate.isPubSubDomain())
H-285	-0.06387760490179062	assertFalse(jmsTemplate.isPubSubDomain())
D-285	-0.06387760490179062	assertFalse(jmsTemplate.isPubSubDomain())
P-285	-0.1584 -0.0888 -0.0129 -0.0322 -0.0949 -0.0743 -0.0118 -0.0474 -0.0270 -0.0626 -0.0923
S-581	assertFalse(runtimeOptions.isMonochrome())
T-581	assertTrue(runtimeOptions.isMonochrome())
H-581	-0.060673732310533524	assertTrue(runtimeOptions.isMonochrome())
D-581	-0.060673732310533524	assertTrue(runtimeOptions.isMonochrome())
P-581	-0.0470 -0.0845 -0.0043 -0.0434 -0.0966 -0.1076 -0.0922 -0.0246 -0.0215 -0.0602 -0.0855
S-596	Assert.assertEquals(select.size(),1)
T-596	Assert.assertEquals(select.size(),0)
H-596	-0.2128792554140091	Assert.assertEquals(select.size(),0)
D-596	-0.2128792554140091	Assert.assertEquals(select.size(),0)
P-596	-0.0264 -0.0816 -0.0349 -0.0413 -1.8057 -0.0029 -0.1032 -0.0247 -0.0959 -0.0502 -0.0749
S-463	!dynamicState.changingBlobs.isEmpty()
T-463	dynamicState.changingBlobs.isEmpty()
H-463	-0.24904753267765045	DynamicState.changingBlobs.isEmpty()
D-463	-0.24904753267765045	DynamicState.changingBlobs.isEmpty()
P-463	-1.3643 -0.1210 -0.1197 -0.3265 -0.0878 -0.0524 -0.1750 -0.0784 -0.0786 -0.0868
S-312	assertEquals(expectedResponse,orig.getResponse())
T-312	assertEquals(orig.getResponse(),expectedResponse)
H-312	-0.07770751416683197	assertEquals(orig.getResponse(),expectedResponse)
D-312	-0.07770751416683197	assertEquals(orig.getResponse(),expectedResponse)
P-312	-0.0470 -0.1331 -0.0008 -0.0802 -0.0611 -0.0784 -0.1687 -0.0136 -0.0767 -0.1059 -0.0893
S-637	compare(leftValue,rightValue) < 0
T-637	compare(leftValue,rightValue) >= 0
H-637	-0.20837204158306122	compare(leftValue,rightValue) <= 0
D-637	-0.20837204158306122	compare(leftValue,rightValue) <= 0
P-637	-0.0251 -0.0675 -0.0982 -0.0533 -0.0610 -0.0344 -0.0685 -0.9837 -0.7796 -0.0258 -0.0950
S-279	Mockito.verify(mRMClient).start()
T-279	Mockito.verify(mRMClient).stop()
H-279	-0.06396829336881638	Mockito.verify(mRMClient).stop()
D-279	-0.06396829336881638	Mockito.verify(mRMClient).stop()
P-279	-0.0165 -0.0766 -0.0311 -0.0805 -0.0405 -0.0164 -0.0593 -0.2102 -0.0286 -0.0559 -0.0880
S-163	spanEvent.getNextSpanId() == -1
T-163	spanEvent.getNextSpanId() != -1
H-163	-0.23902355134487152	spanEvent.getNextSpanId() == -1 || spanEvent.getNextSpanId() == null
D-163	-0.23902355134487152	spanEvent.getNextSpanId() == -1 || spanEvent.getNextSpanId() == null
P-163	-0.3288 -0.0329 -0.1641 -0.0478 -0.0197 -0.4271 -0.0845 -0.0770 -0.2256 -0.0974 -0.5368 -0.2107 -0.0340 -0.0893 -0.0432 -0.1042 -0.4030 -0.1651 -0.2608 -0.1996 -1.3129 -0.3941
S-109	Math.min(1000L,connectionTimeout)
T-109	Math.max(1000L,connectionTimeout)
H-109	-0.047053828835487366	Math.max(1000L,connectionTimeout)
D-109	-0.047053828835487366	Math.max(1000L,connectionTimeout)
P-109	-0.0192 -0.0784 -0.0184 -0.0689 -0.0186 -0.0580 -0.0612 -0.0277 -0.0243 -0.0668 -0.0761
S-34	level <= RF_STATUS_HIGH_SIGNAL
T-34	level < RF_STATUS_HIGH_SIGNAL
H-34	-0.050841324031353	level < RF_STATUS_HIGH_SIGNAL
D-34	-0.050841324031353	level < RF_STATUS_HIGH_SIGNAL
P-34	-0.0200 -0.0845 -0.0094 -0.1050 -0.0326 -0.1046 -0.0110 -0.0777 -0.0037 -0.0101 -0.1007
S-541	zController.sendData(doRequestStop())
T-541	zController.enqueue(doRequestStop())
H-541	-0.051816582679748535	zController.enqueue(doRequestStop())
D-541	-0.051816582679748535	zController.enqueue(doRequestStop())
P-541	-0.0313 -0.0458 -0.0837 -0.0042 -0.0641 -0.0745 -0.0381 -0.0249 -0.0553 -0.0962
S-160	isNodeHealing(node.getNodeId())
T-160	!isNodeHealing(node.getNodeId())
H-160	-0.35025709867477417	!isNodeHealing(node.getNodeId())
D-160	-0.35025709867477417	!isNodeHealing(node.getNodeId())
P-160	-2.3175 -0.0441 -0.0901 -1.3110 -0.0392 -0.0643 -0.0246 -0.0774 -0.0510 -0.0185 -0.0871 -0.0781
S-358	@ConditionalOnEnablednHealthIndicator("mongo")
T-358	@ConditionalOnEnabledHealthIndicator("mongo")
H-358	-0.0353178046643734	@ConditionalOnEnabledHealthIndicator("mongo")
D-358	-0.0353178046643734	@ConditionalOnEnabledHealthIndicator("mongo")
P-358	-0.0269 -0.0148 -0.0455 -0.0065 -0.0293 -0.0182 -0.0562 -0.0125 -0.0570 -0.0862
S-610	responseCode < OK && MULTIPLE_CHOICES <= responseCode
T-610	responseCode < OK || MULTIPLE_CHOICES <= responseCode
H-610	-0.2300882786512375	responseCode < OK && MULTIPLE_CHOICES <= responseCode
D-610	-0.2300882786512375	responseCode < OK && MULTIPLE_CHOICES <= responseCode
P-610	-0.0923 -0.2570 -1.1883 -0.1725 -0.2442 -0.0288 -0.1020 -0.0482 -0.0296 -0.1056 -0.2624
S-614	new JmxEndpointProperties(this.environment)
T-614	new JmxEndpointProperties()
H-614	-0.3005417585372925	new JmxEndpointProperties()
D-614	-0.3005417585372925	new JmxEndpointProperties()
P-614	-0.0694 -0.0793 -0.0431 -0.0357 -0.0904 -1.7065 -0.0794
S-504	dis.read(serializedData,0,length)
T-504	dis.readFully(serializedData,0,length)
H-504	-0.04420504346489906	dis.readFully(serializedData,0,length)
D-504	-0.04420504346489906	dis.readFully(serializedData,0,length)
P-504	-0.0418 -0.0892 -0.0483 -0.0153 -0.0548 -0.0236 -0.0399 -0.0460 -0.0142 -0.0187 -0.0628 -0.0758
S-346	reg.getCounters(transformFilter(filter))
T-346	reg.getHistograms(transformFilter(filter))
H-346	-0.05512869358062744	reg.getMeters(transformFilter(filter))
D-346	-0.05512869358062744	reg.getMeters(transformFilter(filter))
P-346	-0.0188 -0.0844 -0.0898 -0.0891 -0.0010 -0.0743 -0.0182 -0.0416 -0.0618 -0.0520 -0.0460 -0.0846
S-792	dbSqlSessionFactory.getDatabaseCatalog() != null
T-792	dbSqlSessionFactory.getDatabaseCatalog() != null && dbSqlSessionFactory.getDatabaseCatalog().length() > 0
H-792	-0.12012320756912231	dbSqlSessionFactory != null && dbSqlSessionFactory.getDatabaseCatalog() != null
D-792	-0.12012320756912231	dbSqlSessionFactory != null && dbSqlSessionFactory.getDatabaseCatalog() != null
P-792	-0.0323 -0.0207 -0.0110 -1.3348 -0.0573 -0.0990 -0.0220 -0.0200 -0.0211 -0.1028 -0.0645 -0.0350 -0.0222 -0.0524 -0.0299 -0.0517 -0.0654
S-161	Arrays.asList("Java","CSharp")
T-161	Arrays.asList("Java","CSharp","Cpp")
H-161	-0.19502268731594086	Arrays.asList("Java","CSharp")
D-161	-0.19502268731594086	Arrays.asList("Java","CSharp")
P-161	-0.0324 -0.0712 -0.0155 -0.0540 -0.0962 -0.1041 -0.0363 -0.0709 -0.0109 -1.5536 -0.1002
S-321	ObjectHelper.isEmpty(configuration.getClusterService())
T-321	ObjectHelper.isNotEmpty(configuration.getClusterService())
H-321	-0.0694892480969429	ObjectHelper.isNotEmpty(configuration.getClusterService())
D-321	-0.0694892480969429	ObjectHelper.isNotEmpty(configuration.getClusterService())
P-321	-0.0484 -0.0907 -0.2786 -0.0095 -0.0348 -0.0721 -0.0284 -0.0747 -0.0587 -0.0200 -0.0565 -0.0487 -0.0823
S-310	inner.innerSetException(new TimeoutException())
T-310	inner.innerSetException(new TimeoutException(),false)
H-310	-0.20546311140060425	inner.innerSetException(new TimeoutException())
D-310	-0.20546311140060425	inner.innerSetException(new TimeoutException())
P-310	-0.0372 -0.0956 -0.0619 -0.0772 -0.1360 -0.2034 -0.0839 -1.1435 -0.0760 -0.2436 -0.1020
S-569	subProperties.put(subName,value)
T-569	subProperties.putIfAbsent(subName,value)
H-569	-0.06312910467386246	subProperties.putIfAbsent(subName,value)
D-569	-0.06312910467386246	subProperties.putIfAbsent(subName,value)
P-569	-0.0854 -0.0954 -0.0752 -0.0558 -0.0121 -0.0595 -0.0417 -0.0516 -0.0803 -0.0335 -0.0736 -0.0936
S-403	stats.getLastUpdateTime() > lastUpdateTime
T-403	stats.getLastUpdateTime() >= lastUpdateTime
H-403	-0.06733065098524094	stats.getLastUpdateTime() >= lastUpdateTime
D-403	-0.06733065098524094	stats.getLastUpdateTime() >= lastUpdateTime
P-403	-0.0187 -0.1026 -0.0914 -0.0679 -0.1008 -0.0453 -0.0567 -0.1231 -0.0043 -0.0379 -0.0919
S-365	className.indexOf("org.openmrs.")
T-365	className.lastIndexOf("org.openmrs.")
H-365	-0.06817839294672012	className.lastIndexOf("org.openmrs.")
D-365	-0.06817839294672012	className.lastIndexOf("org.openmrs.")
P-365	-0.0398 -0.0851 -0.0105 -0.0338 -0.0614 -0.0425 -0.0826 -0.0416 -0.0517 -0.0200 -0.2622 -0.0868
S-700	postAgg.getName().equals(metricName)
T-700	postAgg.getName().equalsIgnoreCase(metricName)
H-700	-0.0718659833073616	postAgg.getName().equalsIgnoreCase(metricName)
D-700	-0.0718659833073616	postAgg.getName().equalsIgnoreCase(metricName)
P-700	-0.0550 -0.0188 -0.0945 -0.0595 -0.1059 -0.1377 -0.0705 -0.0310 -0.0352 -0.0667 -0.1157
S-295	reg.getCounters(transformFilter(filter))
T-295	reg.getMeters(transformFilter(filter))
H-295	-0.05512869358062744	reg.getMeters(transformFilter(filter))
D-295	-0.05512869358062744	reg.getMeters(transformFilter(filter))
P-295	-0.0188 -0.0844 -0.0898 -0.0891 -0.0010 -0.0743 -0.0182 -0.0416 -0.0618 -0.0520 -0.0460 -0.0846
S-818	assertFalse(runtimeOptions.isMonochrome())
T-818	assertTrue(runtimeOptions.isMonochrome())
H-818	-0.060673732310533524	assertTrue(runtimeOptions.isMonochrome())
D-818	-0.060673732310533524	assertTrue(runtimeOptions.isMonochrome())
P-818	-0.0470 -0.0845 -0.0043 -0.0434 -0.0966 -0.1076 -0.0922 -0.0246 -0.0215 -0.0602 -0.0855
S-91	mock.expectedBodiesReceived("Hello World 2")
T-91	mock.expectedBodiesReceivedInAnyOrder("Hello World 2")
H-91	-0.04560544341802597	mock.expectedBodiesReceivedInAnyOrder("Hello World 2")
D-91	-0.04560544341802597	mock.expectedBodiesReceivedInAnyOrder("Hello World 2")
P-91	-0.0366 -0.0880 -0.0300 -0.0312 -0.0244 -0.0460 -0.0492 -0.0280 -0.0134 -0.0458 -0.0645 -0.0901
S-659	rsWrap.getMobFileCacheAccessCount()
T-659	rsWrap.getMobFileCacheMissCount()
H-659	-0.06705434620380402	rsWrap.getMobFileCacheMissCount()
D-659	-0.06705434620380402	rsWrap.getMobFileCacheMissCount()
P-659	-0.0130 -0.0302 -0.0769 -0.0803 -0.0346 -0.0466 -0.1956 -0.0107 -0.0696 -0.0977 -0.0824
S-727	Color.fromRGB(0x434343)
T-727	Color.fromRGB(0xABABAB)
H-727	-0.24706104397773743	Color.fromRGB(0x4343)
D-727	-0.24706104397773743	Color.fromRGB(0x4343)
P-727	-0.0147 -0.1047 -0.0613 -0.0340 -0.0275 -0.0747 -0.7826 -0.2990 -0.9914 -0.0808
S-269	lookupService.lookupPrincipalByGroupName(user)
T-269	lookupService.lookupPrincipalByName(user)
H-269	-0.06226762384176254	lookupService.lookupPrincipalByName(user)
D-269	-0.06226762384176254	lookupService.lookupPrincipalByName(user)
P-269	-0.0095 -0.0675 -0.0948 -0.1068 -0.0354 -0.0281 -0.0548 -0.0642 -0.0747 -0.0869
S-816	Assert.assertEquals(2,json.size())
T-816	Assert.assertEquals(3,json.size())
H-816	-0.1956290304660797	Assert.assertEquals(3,json.size())
D-816	-0.1956290304660797	Assert.assertEquals(3,json.size())
P-816	-0.0221 -0.0855 -0.0425 -0.0608 -1.4621 -0.0139 -0.1038 -0.0440 -0.0428 -0.0788
S-172	new PoolBagEntry(null,pool)
T-172	new PoolBagEntry(null,0,pool)
H-172	-0.04569460079073906	new PoolBagEntry(null,0,pool)
D-172	-0.04569460079073906	new PoolBagEntry(null,0,pool)
P-172	-0.0665 -0.0226 -0.0143 -0.0516 -0.0796 -0.0296 -0.0493 -0.0039 -0.0211 -0.0808 -0.0834
S-71	mListView.getChildAt(index)
T-71	mListView.getListChildAt(index)
H-71	-0.06492538750171661	mListView.getListChildAt(index)
D-71	-0.06492538750171661	mListView.getListChildAt(index)
P-71	-0.0333 -0.0234 -0.1157 -0.0956 -0.0745 -0.0494 -0.0321 -0.0495 -0.1032 -0.0536 -0.0838
S-278	mListView.getChildAt(index)
T-278	mListView.getListChildAt(index)
H-278	-0.06492538750171661	mListView.getListChildAt(index)
D-278	-0.06492538750171661	mListView.getListChildAt(index)
P-278	-0.0333 -0.0234 -0.1157 -0.0956 -0.0745 -0.0494 -0.0321 -0.0495 -0.1032 -0.0536 -0.0838
S-810	response.set(ROLLED_BACK)
T-810	response.get(ROLLED_BACK)
H-810	-0.0548211894929409	response.get(ROLLED_BACK)
D-810	-0.0548211894929409	response.get(ROLLED_BACK)
P-810	-0.0542 -0.0989 -0.0252 -0.0780 -0.0148 -0.0158 -0.0901 -0.0354 -0.0496 -0.0862
S-673	"Using bind address: " + publicAddress
T-673	"Using bind address: " + bindAddress
H-673	-0.05892854928970337	"Using bind address: " + bindAddress
D-673	-0.05892854928970337	"Using bind address: " + bindAddress
P-673	-0.0623 -0.0111 -0.0682 -0.0757 -0.0571 -0.0582 -0.0556 -0.0503 -0.0567 -0.0940
S-624	distinctValues.put(distinct,distinct)
T-624	distinctValues.put(slice,distinct)
H-624	-0.5187524557113647	distinctValues.putIfAbsent(distinct,distinct)
D-624	-0.5187524557113647	distinctValues.putIfAbsent(distinct,distinct)
P-624	-0.7725 -0.1196 -0.0633 -0.0078 -3.3814 -0.0585 -0.6475 -0.0691 -0.4142 -0.0845 -0.0878
S-619	hz1.getLifecycleService().terminate()
T-619	hz1.getLifecycleService().shutdown()
H-619	-0.04971867427229881	hz1.getLifecycleService().shutdown()
D-619	-0.04971867427229881	hz1.getLifecycleService().shutdown()
P-619	-0.0234 -0.0248 -0.0385 -0.0542 -0.0149 -0.0602 -0.0910 -0.0235 -0.0754 -0.0914
S-257	StatBuckets.prettyUptime(secs)
T-257	StatBuckets.prettyUptimeStr(secs)
H-257	-0.04273374751210213	StatBuckets.prettyUptimeStr(secs)
D-257	-0.04273374751210213	StatBuckets.prettyUptimeStr(secs)
P-257	-0.0089 -0.0152 -0.0949 -0.0123 -0.0584 -0.0308 -0.0179 -0.0535 -0.0270 -0.0695 -0.0818
S-561	assertRemoveSubsystemResources(servicesA)
T-561	assertRemoveSubsystemResources(servicesB)
H-561	-0.04829603433609009	assertRemoveSubsystemResources(servicesB)
D-561	-0.04829603433609009	assertRemoveSubsystemResources(servicesB)
P-561	-0.0509 -0.0470 -0.0331 -0.0244 -0.0137 -0.0640 -0.0502 -0.0399 -0.0706 -0.0891
S-654	key.equals(OAuthConstants.SCOPE)
T-654	!key.equals(OAuthConstants.SCOPE)
H-654	-0.10897596925497055	!key.equals(OAuthConstants.SCOPE)
D-654	-0.10897596925497055	!key.equals(OAuthConstants.SCOPE)
P-654	-0.6526 -0.0948 -0.0878 -0.0360 -0.0557 -0.0208 -0.0310 -0.0677 -0.0147 -0.0582 -0.0794
S-757	engine.execute(cypher).toString()
T-757	engine.execute(cypher).dumpToString()
H-757	-0.049969904124736786	engine.execute(cypher).dumpToString()
D-757	-0.049969904124736786	engine.execute(cypher).dumpToString()
P-757	-0.0387 -0.0904 -0.0168 -0.0642 -0.0327 -0.0111 -0.0740 -0.0076 -0.0573 -0.0744 -0.0827
S-406	new HashMap<>(queryMemoryReservations)
T-406	new HashMap<>(queryMemoryRevocableReservations)
H-406	-0.37899088859558105	new HashMap<>()
D-406	-0.37899088859558105	new HashMap<>()
P-406	-0.0609 -0.7418 -0.9353 -0.0728 -0.0843
S-538	Calendar.getInstance(JSON.defaultLocale)
T-538	Calendar.getInstance(JSON.defaultTimeZone,JSON.defaultLocale)
H-538	-0.06386720389127731	Calendar.getInstance(JSON.defaultTimeZone,JSON.defaultLocale)
D-538	-0.06386720389127731	Calendar.getInstance(JSON.defaultTimeZone,JSON.defaultLocale)
P-538	-0.0404 -0.0969 -0.0570 -0.0866 -0.0507 -0.0759 -0.0349 -0.0154 -0.0797 -0.0426 -0.0760 -0.0452 -0.0291 -0.1462 -0.0815
S-711	autoCommit != conn.getAutoCommit()
T-711	autoCommit != null && autoCommit != conn.getAutoCommit()
H-711	-0.34859368205070496	autoCommit != conn.getAutoCommit()
D-711	-0.34859368205070496	autoCommit != conn.getAutoCommit()
P-711	-0.1125 -0.0450 -0.3909 -0.0429 -0.1108 -0.0698 -0.1457 -0.0470 -0.2707 -2.2506
S-5	"false".equals(showRelationships)
T-5	"false".equals(showRelationships) || result.hasErrors()
H-5	-0.1637679785490036	"false".equals(showRelationships) || result.hasErrors()
D-5	-0.1637679785490036	"false".equals(showRelationships) || result.hasErrors()
P-5	-0.1085 -0.3502 -0.0287 -0.1590 -0.0491 -0.3390 -0.0279 -0.0027 -0.0887 -0.2650 -0.3980 -0.2437 -0.0158 -0.1398 -0.3070 -0.0974
S-495	config().getSoLinger() > 0
T-495	javaChannel().isOpen() && config().getSoLinger() > 0
H-495	-0.12684215605258942	config().getSoLinger() > 0
D-495	-0.12684215605258942	config().getSoLinger() > 0
P-495	-0.0520 -0.0891 -0.0448 -0.0422 -0.0367 -0.0194 -0.0718 -0.2476 -0.1044 -0.5604
S-789	Flux.create(camelSink::set)
T-789	Flux.create(camelSink::set,FluxSink.OverflowStrategy.IGNORE)
H-789	-0.6939287185668945	Flux.create((camelSink::set,camelSink::get())
D-789	-0.6939287185668945	Flux.create((camelSink::set,camelSink::get())
P-789	-0.1749 -0.1195 -0.3149 -1.5716 -0.6923 -0.0219 -0.2293 -0.3190 -0.7703 -1.8330 -0.0401 -0.6854 -2.0020 -1.5433 -0.0915
S-335	new UnderFileStatus("dummy",isDirectory)
T-335	new UnderFileStatus("dummy",0L,isDirectory,0L,"owner","group",(short)077)
H-335	-0.1671726405620575	new UnderFileStatus("dummy",isDir)
D-335	-0.1671726405620575	new UnderFileStatus("dummy",isDir)
P-335	-0.0701 -0.0183 -0.3126 -0.0562 -0.0459 -0.0994 -0.1443 -0.6350 -0.2000 -0.0898
S-230	options.checkProvides.isOn()
T-230	options.checkProvides.isOn() || options.enables(DiagnosticGroups.MISSING_PROVIDE)
H-230	-0.3969064950942993	options.checkProvides.isOn()
D-230	-0.3969064950942993	options.checkProvides.isOn()
P-230	-0.0338 -0.1056 -0.1892 -0.8070 -0.0594 -0.2088 -0.1307 -0.0754 -0.4705 -1.8887
S-564	len % (1024 * 1024) / 10
T-564	len % (1024 * 1024) / 10000
H-564	-0.04184805601835251	len % (1024 * 1024) / 10000
D-564	-0.04184805601835251	len % (1024 * 1024) / 10000
P-564	-0.0324 -0.0745 -0.0405 -0.0189 -0.0231 -0.0292 -0.0497 -0.0384 -0.0559 -0.0559
S-461	RestartStrategies.fixedDelayRestart(3,0)
T-461	RestartStrategies.fixedDelayRestart(1,0)
H-461	-0.062339168041944504	RestartStrategies.fixedDelayRestart(1,0)
D-461	-0.062339168041944504	RestartStrategies.fixedDelayRestart(1,0)
P-461	-0.0131 -0.0153 -0.0140 -0.0928 -0.0190 -0.0559 -0.0224 -0.2843 -0.0292 -0.0774
S-521	future1.get(1,TimeUnit.SECONDS)
T-521	future1.get(2,TimeUnit.SECONDS)
H-521	-0.32453498244285583	future2.get(1,TimeUnit.SECONDS)
D-521	-0.32453498244285583	future2.get(1,TimeUnit.SECONDS)
P-521	-0.0166 -2.3425 -0.0608 -0.4611 -0.0785 -0.0160 -0.0864 -0.0281 -0.0651 -0.0903
S-590	new GZIPOutputStream(outputStream,true)
T-590	new GZIPOutputStream(outputStream)
H-590	-0.06960584968328476	new GZIPOutputStream(outputStream)
D-590	-0.06960584968328476	new GZIPOutputStream(outputStream)
P-590	-0.0702 -0.0057 -0.0419 -0.0680 -0.1256 -0.0477 -0.0976 -0.1002
S-771	mWorkerId + BASE_FILE_NUMBER
T-771	pId + BASE_FILE_NUMBER
H-771	-0.04821828007698059	pId + BASE_FILE_NUMBER
D-771	-0.04821828007698059	pId + BASE_FILE_NUMBER
P-771	-0.0328 -0.0246 -0.0582 -0.0114 -0.0851 -0.0168 -0.0924 -0.0298 -0.0827
S-274	implemetationMethodDescriptors.build()
T-274	implementationMethodDescriptors.build()
H-274	-0.04823042079806328	implementationMethodDescriptors.build()
D-274	-0.04823042079806328	implementationMethodDescriptors.build()
P-274	-0.0095 -0.0100 -0.0038 -0.0928 -0.0496 -0.0854 -0.0865
S-631	ImmutableSet<ImplemetationMethodDescriptor>
T-631	ImmutableSet<ImplementationMethodDescriptor>
H-631	-0.04415197670459747	ImmutableSet<ImplementationMethodDescriptor>
D-631	-0.04415197670459747	ImmutableSet<ImplementationMethodDescriptor>
P-631	-0.0189 -0.1000 -0.0048 -0.0135 -0.0131 -0.0762 -0.0826
S-307	new IntRangeValidator(1,true,true)
T-307	new IntRangeValidator(0,true,true)
H-307	-0.16482789814472198	new IntRangeValidator(1,true,true)
D-307	-0.16482789814472198	new IntRangeValidator(1,true,true)
P-307	-0.0669 -0.0225 -0.0526 -0.0160 -0.9534 -0.0793 -0.0835 -0.0797 -0.2099 -0.0845
S-127	ReferenceCountUtil.safeRelease(holder)
T-127	ReferenceCountUtil.release(holder)
H-127	-0.045593902468681335	ReferenceCountUtil.release(holder)
D-127	-0.045593902468681335	ReferenceCountUtil.release(holder)
P-127	-0.0122 -0.0521 -0.0348 -0.0889 -0.0218 -0.0461 -0.0057 -0.0590 -0.0897
S-272	mWorkerId + BASE_FILE_NUMBER
T-272	pId + BASE_FILE_NUMBER
H-272	-0.04821828007698059	pId + BASE_FILE_NUMBER
D-272	-0.04821828007698059	pId + BASE_FILE_NUMBER
P-272	-0.0328 -0.0246 -0.0582 -0.0114 -0.0851 -0.0168 -0.0924 -0.0298 -0.0827
S-587	IR.name(TMP_ERROR)
T-587	IR.thisNode()
H-587	-0.2864631116390228	IR.error(TMP_ERROR)
D-587	-0.2864631116390228	IR.error(TMP_ERROR)
P-587	-0.0076 -0.0880 -2.0289 -0.1402 -0.2486 -0.0173 -0.0885 -0.0276 -0.1344 -0.0835
S-698	ReferenceCountUtil.safeRelease(holder)
T-698	ReferenceCountUtil.release(holder)
H-698	-0.045593902468681335	ReferenceCountUtil.release(holder)
D-698	-0.045593902468681335	ReferenceCountUtil.release(holder)
P-698	-0.0122 -0.0521 -0.0348 -0.0889 -0.0218 -0.0461 -0.0057 -0.0590 -0.0897
S-344	field.set(instanceRef,value)
T-344	field.set(instance,value)
H-344	-0.248762309551239	field.put(instanceRef,value)
D-344	-0.248762309551239	field.put(instanceRef,value)
P-344	-0.0179 -0.0850 -1.7087 -0.1005 -0.2922 -0.0274 -0.0556 -0.0291 -0.0760 -0.0952
S-51	setNetworkTimeout(connection,networkTimeout)
T-51	setNetworkTimeout(connection,originalTimeout)
H-51	-0.3124921917915344	setNetworkTimeout(connection,networkTimeout)
D-51	-0.3124921917915344	setNetworkTimeout(connection,networkTimeout)
P-51	-0.1184 -0.1465 -0.0291 -0.0771 -0.1372 -0.0782 -1.6902 -0.0400 -0.7111 -0.0971
S-99	DEFAULT_ALLOW_SPILLING=false
T-99	DEFAULT_ALLOW_SPILLING=true
H-99	-0.06374186277389526	DEFAULT_ALLOW_SPILLING=true
D-99	-0.06374186277389526	DEFAULT_ALLOW_SPILLING=true
P-99	-0.0208 -0.0844 -0.0092 -0.0932 -0.0463 -0.0240 -0.1074 -0.0614 -0.0967 -0.0940
S-165	"unable to parse " + abstractOption
T-165	"unable to parse " + optionStr
H-165	-0.03850223496556282	"unable to parse " + optionStr
D-165	-0.03850223496556282	"unable to parse " + optionStr
P-165	-0.0428 -0.0114 -0.0266 -0.0439 -0.0703 -0.0476 -0.0319 -0.0036 -0.0074 -0.0995
S-222	out.writeObject(entry.getValue())
T-222	out.writeData(entry.getValue())
H-222	-0.05916299298405647	out.writeData(entry.getValue())
D-222	-0.05916299298405647	out.writeData(entry.getValue())
P-222	-0.0883 -0.0893 -0.0277 -0.0404 -0.0615 -0.0293 -0.0785 -0.0276 -0.0586 -0.0903
S-225	DEFAULT_LABEL_MIPMAP=true
T-225	DEFAULT_LABEL_MIPMAP=false
H-225	-0.05150027573108673	DEFAULT_LABEL_MIPMAP=false
D-225	-0.05150027573108673	DEFAULT_LABEL_MIPMAP=false
P-225	-0.0116 -0.0997 -0.0378 -0.0870 -0.0289 -0.0432 -0.0323 -0.0684 -0.0151 -0.0910
S-11	cached.get(walCacheLock)
T-11	cached.get(group)
H-11	-0.4164057672023773	cached.get( walCacheLock)
D-11	-0.4164057672023773	cached.get( walCacheLock)
P-11	-0.0362 -0.0846 -0.0935 -0.1714 -3.1026 -0.0267 -0.0191 -0.1273 -0.0863
S-30	patientState.getState().getId()
T-30	patientState.getState().getUuid()
H-30	-0.06731566041707993	patientState.getState().getUuid()
D-30	-0.06731566041707993	patientState.getState().getUuid()
P-30	-0.0128 -0.0469 -0.0824 -0.0719 -0.0931 -0.0864 -0.1101 -0.0016 -0.0860 -0.0820
S-787	eventJournalConfig.getMapName()
T-787	eventJournalConfig.getCacheName()
H-787	-0.07674798369407654	eventJournalConfig.getCacheName()
D-787	-0.07674798369407654	eventJournalConfig.getCacheName()
P-787	-0.0351 -0.0326 -0.0589 -0.1130 -0.0871 -0.1353 -0.0540 -0.0925 -0.0822
S-790	name="java:jboss/mail"
T-790	lookup="java:jboss/mail"
H-790	-0.05258174240589142	lookup="java:jboss/mail"
D-790	-0.05258174240589142	lookup="java:jboss/mail"
P-790	-0.0031 -0.0396 -0.0500 -0.0716 -0.0145 -0.0380 -0.0806 -0.0827 -0.0932
S-672	Math.min(clientCount,1)
T-672	Math.max(clientCount,1)
H-672	-0.05005444213747978	Math.max(clientCount,1)
D-672	-0.05005444213747978	Math.max(clientCount,1)
P-672	-0.0200 -0.0832 -0.0404 -0.0497 -0.0366 -0.0268 -0.0630 -0.0465 -0.0844
S-203	mTestStream.getBytesFlushed()
T-203	mTestStream.getFlushedBytes()
H-203	-0.05500789359211922	mTestStream.getFlushedBytes()
D-203	-0.05500789359211922	mTestStream.getFlushedBytes()
P-203	-0.0413 -0.0770 -0.0224 -0.1097 -0.0586 -0.0015 -0.0784 -0.0098 -0.0712 -0.0802
S-329	engine.execute(query).toString()
T-329	engine.execute(query).dumpToString()
H-329	-0.06804390251636505	engine.execute(query).dumpToString()
D-329	-0.06804390251636505	engine.execute(query).dumpToString()
P-329	-0.0481 -0.0882 -0.0190 -0.0623 -0.0263 -0.0603 -0.0136 -0.2170 -0.0643 -0.0813
S-360	@IntMethodAnnotation(value=-45)
T-360	@InputIntMethodAnnotation(value=-45)
H-360	-0.06819318234920502	@InputIntMethodAnnotation(value=-45)
D-360	-0.06819318234920502	@InputIntMethodAnnotation(value=-45)
P-360	-0.0315 -0.0835 -0.2812 -0.0228 -0.0256 -0.0437 -0.0389 -0.0508 -0.0231 -0.0808
S-531	mTestStream.getBytesFlushed()
T-531	mTestStream.getFlushedBytes()
H-531	-0.05500789359211922	mTestStream.getFlushedBytes()
D-531	-0.05500789359211922	mTestStream.getFlushedBytes()
P-531	-0.0413 -0.0770 -0.0224 -0.1097 -0.0586 -0.0015 -0.0784 -0.0098 -0.0712 -0.0802
S-362	case REPLACE_IS_SAME:
T-362	case REPLACE_IF_SAME:
H-362	-0.45529550313949585	case REPLACE_IS_SAME_BACKUP:
D-362	-0.45529550313949585	case REPLACE_IS_SAME_BACKUP:
P-362	-0.0098 -0.2249 -0.0613 -0.0972 -0.0238 -0.6593 -0.1690 -0.7982 -2.7016 -0.3609 -0.2091 -0.1484
S-759	final StringBuffer result=new StringBuffer(20);
T-759	final StringBuilder result=new StringBuilder(20);
H-759	-0.4237687587738037	final StringBuilder sb=new StringBuilder(20);
D-759	-0.4237687587738037	final StringBuilder sb=new StringBuilder(20);
P-759	-0.0206 -0.5726 -2.4689 -0.0884 -0.0339 -0.0467 -0.4375 -0.0557 -0.0898
S-613	getSslStoreProvider().getKeyStore()
T-613	getSslStoreProvider().getTrustStore()
H-613	-0.8979507088661194	getSslStoreProvider().TrustStore()
D-613	-0.8979507088661194	getSslStoreProvider().TrustStore()
P-613	-0.0490 -0.0163 -0.0277 -0.0244 -0.1102 -7.6307 -0.0586 -0.0793 -0.0852
S-627	assertEquals(2,conceptStopWords.size())
T-627	assertEquals(1,conceptStopWords.size())
H-627	-0.13436217606067657	assertEquals(2,conceptStopWords.size())
D-627	-0.13436217606067657	assertEquals(2,conceptStopWords.size())
P-627	-0.0211 -0.8310 -0.0112 -0.0288 -0.0324 -0.1043 -0.0386 -0.0579 -0.0839
S-393	instance2.getLifecycleService().terminate()
T-393	instance2.getLifecycleService().shutdown()
H-393	-0.05626171454787254	instance2.getLifecycleService().shutdown()
D-393	-0.05626171454787254	instance2.getLifecycleService().shutdown()
P-393	-0.0338 -0.0654 -0.0541 -0.0124 -0.0468 -0.0927 -0.0325 -0.0771 -0.0915
S-394	node.getLifecycleService().terminate()
T-394	node.getLifecycleService().shutdown()
H-394	-0.06070544198155403	node.getLifecycleService().shutdown()
D-394	-0.06070544198155403	node.getLifecycleService().shutdown()
P-394	-0.0229 -0.0920 -0.0488 -0.0125 -0.0411 -0.1114 -0.0289 -0.0981 -0.0906
S-275	S3DataSegmentKiller.class
T-275	S3DataSegmentMover.class
H-275	-0.2266712188720703	S3DataSegmentKillerConfig.class
D-275	-0.2266712188720703	S3DataSegmentKillerConfig.class
P-275	-0.0321 -0.0194 -0.0995 -0.0257 -0.1776 -0.0156 -1.5764 -0.1556 -0.0639 -0.1010
S-343	assertFalse(user.isGeoEnabled())
T-343	assertTrue(user.isGeoEnabled())
H-343	-0.05681236833333969	assertTrue(user.isGeoEnabled())
D-343	-0.05681236833333969	assertTrue(user.isGeoEnabled())
P-343	-0.0325 -0.0647 -0.0311 -0.1027 -0.0643 -0.0454 -0.0190 -0.0636 -0.0880
S-302	assertEquals(expectedPlan,actualPlan)
T-302	assertPlanEquals(expectedPlan,actualPlan)
H-302	-0.06433852016925812	assertPlanEquals(expectedPlan,actualPlan)
D-302	-0.06433852016925812	assertPlanEquals(expectedPlan,actualPlan)
P-302	-0.0204 -0.0189 -0.2208 -0.0771 -0.0674 -0.0111 -0.0514 -0.0586 -0.0124 -0.0760 -0.0936
S-576	attribute.getDefinition().getAttributeMarshaller()
T-576	attribute.getDefinition().getMarshaller()
H-576	-0.05680396035313606	attribute.getDefinition().getMarshaller()
D-576	-0.05680396035313606	attribute.getDefinition().getMarshaller()
P-576	-0.0458 -0.0875 -0.0475 -0.0240 -0.0738 -0.0572 -0.0157 -0.0778 -0.0820
S-522	connectPromise.setFailure(t)
T-522	connectPromise.tryFailure(t)
H-522	-0.04635704681277275	connectPromise.tryFailure(t)
D-522	-0.04635704681277275	connectPromise.tryFailure(t)
P-522	-0.0296 -0.0289 -0.0816 -0.0033 -0.0271 -0.0538 -0.0437 -0.0627 -0.0865
S-396	websocketComponent.setMaxThreads(11)
T-396	websocketComponent.setMaxThreads(20)
H-396	-0.04708900675177574	websocketComponent.setMaxThreads(20)
D-396	-0.04708900675177574	websocketComponent.setMaxThreads(20)
P-396	-0.0085 -0.0259 -0.0859 -0.0594 -0.0285 -0.0293 -0.0489 -0.0495 -0.0879
S-415	websocketComponent.setMaxThreads(11)
T-415	websocketComponent.setMaxThreads(20)
H-415	-0.04708900675177574	websocketComponent.setMaxThreads(20)
D-415	-0.04708900675177574	websocketComponent.setMaxThreads(20)
P-415	-0.0085 -0.0259 -0.0859 -0.0594 -0.0285 -0.0293 -0.0489 -0.0495 -0.0879
S-479	removeQuote(timestring.trim())
T-479	removeQuotes(timestring.trim())
H-479	-0.062019236385822296	removeQuotes(timestring.trim())
D-479	-0.062019236385822296	removeQuotes(timestring.trim())
P-479	-0.0900 -0.0298 -0.0767 -0.0889 -0.0118 -0.0780 -0.0472 -0.0492 -0.0865
S-591	LogUtils.initializeDefaultConsoleLogger()
T-591	LogUtils.initializeDefaultTestConsoleLogger()
H-591	-0.2118215411901474	LogUtils.initializeDefaultTestConsoleLogger()
D-591	-0.2118215411901474	LogUtils.initializeDefaultTestConsoleLogger()
P-591	-0.0570 -0.0367 -0.1148 -0.0437 -0.2176 -0.2931 -1.0833 -0.0564 -0.1239 -0.0919
S-247	ctx.sendDownstream(e)
T-247	ctx.sendUpstream(e)
H-247	-0.07524401694536209	ctx.sendUpstream(e)
D-247	-0.07524401694536209	ctx.sendUpstream(e)
P-247	-0.0144 -0.1010 -0.1828 -0.0436 -0.0306 -0.0618 -0.0804 -0.0757 -0.0870
S-555	ImmutableSet.of("testStringRepresentation")
T-555	ImmutableSet.of("testStringRepresentation","testDataTypeValidationOnProperties")
H-555	-0.2064298540353775	ImmutableSet.of("testStringRepresentation","testDataTypeValidationOnPropertiesOnProperties")
D-555	-0.2064298540353775	ImmutableSet.of("testStringRepresentation","testDataTypeValidationOnPropertiesOnProperties")
P-555	-0.0342 -0.0972 -0.0366 -0.0642 -0.0590 -0.0784 -0.0134 -0.1596 -0.1780 -0.0007 -0.0064 -0.0139 -0.1649 -0.6516 -0.1154 -1.7524 -0.0835
S-57	jarName.endsWith(".jar")
T-57	jarName.endsWith(".jar") || jarName.endsWith(".war")
H-57	-0.07600731402635574	jarName.endsWith(".jar") || jarName.endsWith(".war")
D-57	-0.07600731402635574	jarName.endsWith(".jar") || jarName.endsWith(".war")
P-57	-0.0073 -0.0633 -0.1157 -0.0043 -0.0110 -0.0192 -0.0455 -0.0411 -0.7081 -0.0202 -0.0327 -0.0968 -0.0020 -0.0135 -0.0071 -0.0456 -0.0241 -0.1107
S-459	ast.getNextSibling() != null
T-459	ast != null && ast.getNextSibling() != null
H-459	-0.10948489606380463	ast != null && ast.getNextSibling() != null
D-459	-0.10948489606380463	ast != null && ast.getNextSibling() != null
P-459	-0.0145 -0.2959 -0.0595 -0.0791 -0.0253 -0.1367 -0.0603 -0.0246 -0.4854 -0.0628 -0.0453 -0.0716 -0.0623
S-794	ModuleFactory.stopModule(mod)
T-794	ModuleFactory.stopModule(mod,true,true)
H-794	-0.12887248396873474	ModuleFactory.stopModule(mod)
D-794	-0.12887248396873474	ModuleFactory.stopModule(mod)
P-794	-0.0168 -0.0484 -0.1047 -0.2540 -0.0532 -0.0585 -0.0150 -0.5114 -0.0978
S-492	type == VertexDataType.VertexBufferObject
T-492	type == VertexDataType.VertexBufferObject || Mesh.forceVBO
H-492	-0.2356138676404953	type == VertexDataType.VertexBufferObject || Mesh.forceVBO
D-492	-0.2356138676404953	type == VertexDataType.VertexBufferObject || Mesh.forceVBO
P-492	-0.0704 -0.0496 -0.0074 -0.0314 -0.0886 -0.0623 -0.0466 -0.1108 -0.1120 -2.0181 -0.1664 -0.0887 -0.3557 -0.0025 -0.3237
S-546	hazelcastFactory.newHazelcastClient()
T-546	hazelcastFactory.newHazelcastClient(newClientConfig())
H-546	-0.053916558623313904	hazelcastFactory.newHazelcastClient(newClientConfig())
D-546	-0.053916558623313904	hazelcastFactory.newHazelcastClient(newClientConfig())
P-546	-0.0081 -0.0433 -0.0951 -0.0518 -0.0630 -0.0111 -0.1322 -0.0946 -0.0014 -0.0298 -0.0236 -0.0930
S-453	Preconditions.checkNotNull(blockIds)
T-453	Preconditions.checkNotNull(blockIds,"blockIds")
H-453	-0.04075152054429054	Preconditions.checkNotNull(blockIds,"blockIds")
D-453	-0.04075152054429054	Preconditions.checkNotNull(blockIds,"blockIds")
P-453	-0.0223 -0.0759 -0.0309 -0.0181 -0.0725 -0.0586 -0.0227 -0.0461 -0.0180 -0.0341 -0.0128 -0.0770
S-801	getTaskWriterCount(session) > 1
T-801	getTaskWriterCount(session) > 1 && !node.getPartitioningScheme().isPresent()
H-801	-0.21296069025993347	getTaskWriterCount(session) > 0
D-801	-0.21296069025993347	getTaskWriterCount(session) > 0
P-801	-0.8295 -0.0506 -0.0572 -0.1341 -0.0395 -0.0715 -0.3182 -0.3475 -0.0685
S-215	lexer.token == Token.HINT
T-215	lexer.token == Token.HINT && !lexer.isEnabled(SQLParserFeature.StrictForWall)
H-215	-0.2157542109489441	lexer.token == Token.HINT || lexer.token == Token.DOUBLE
D-215	-0.2157542109489441	lexer.token == Token.HINT || lexer.token == Token.DOUBLE
P-215	-0.0133 -0.2954 -0.0261 -0.0759 -0.0300 -0.0986 -0.1094 -0.1318 -0.2991 -0.0084 -0.0862 -0.0334 -0.0178 -0.0260 -0.0941 -1.6115 -0.7109
S-144	type == TokenTypes.CLASS_DEF
T-144	type == TokenTypes.CLASS_DEF || type == TokenTypes.ENUM_DEF || type == TokenTypes.INTERFACE_DEF
H-144	-0.2540012001991272	type == TokenTypes.CLASS_DEF || type == TokenTypes.ENUM_DEF || type == TokenTypes.INTERFACE_DEF
D-144	-0.2540012001991272	type == TokenTypes.CLASS_DEF || type == TokenTypes.ENUM_DEF || type == TokenTypes.INTERFACE_DEF
P-144	-0.0370 -0.0618 -0.0323 -0.0388 -0.0903 -0.1110 -0.0859 -0.1148 -0.0507 -0.0542 -0.0354 -0.0303 -0.0446 -0.0823 -0.0831 -0.0806 -0.0533 -0.1770 -0.0382 -0.0452 -0.0315 -0.0562 -0.1020 -3.7055 -0.0515 -0.1283 -1.4361
S-105	CHECK_TEXT.get("Properties")
T-105	CHECK_TEXT.computeIfAbsent("Properties",unused -> "")
H-105	-0.5919079780578613	CHECK_TEXT.getOrDefault("Properties","")
D-105	-0.5919079780578613	CHECK_TEXT.getOrDefault("Properties","")
P-105	-0.1243 -0.0992 -3.0904 -0.0842 -0.1816 -0.5468 -0.0083 -0.2845 -0.1029 -1.4195 -1.0840 -0.0771
S-618	Byte.valueOf(value.toString())
T-618	Byte.parseByte(value.toString())
H-618	-0.1530655175447464	Byte.parseByte(value.toString())
D-618	-0.1530655175447464	Byte.parseByte(value.toString())
P-618	-0.6602 -0.1036 -0.2643 -0.1635 -0.0587 -0.0374 -0.0811 -0.0246 -0.0510 -0.0863
S-142	Arrays.asList("ls","pwd")
T-142	Arrays.asList("cmd","ls","pwd")
H-142	-0.09549552947282791	Arrays.asList("cmd","ls","pwd")
D-142	-0.09549552947282791	Arrays.asList("cmd","ls","pwd")
P-142	-0.0286 -0.0729 -0.0152 -0.0519 -0.4224 -0.1964 -0.0215 -0.0370 -0.0364 -0.0859 -0.0823
S-210	assertEquals(expectedPlan,actualPlan)
T-210	assertPlanEquals(expectedPlan,actualPlan)
H-210	-0.06433852016925812	assertPlanEquals(expectedPlan,actualPlan)
D-210	-0.06433852016925812	assertPlanEquals(expectedPlan,actualPlan)
P-210	-0.0204 -0.0189 -0.2208 -0.0771 -0.0674 -0.0111 -0.0514 -0.0586 -0.0124 -0.0760 -0.0936
S-724	new ModelNode().set(17500)
T-724	new ModelNode().set(17500L)
H-724	-0.38571855425834656	new ModelNode().set(16500)
D-724	-0.38571855425834656	new ModelNode().set(16500)
P-724	-0.0529 -0.0092 -0.0601 -0.0415 -1.5034 -1.5105 -0.1147 -0.0884 -0.0907
S-29	IOConverter.toInputStream(s)
T-29	IOConverter.toInputStream(s,null)
H-29	-0.07578781247138977	IOConverter.toInputStream(s,null)
D-29	-0.07578781247138977	IOConverter.toInputStream(s,null)
P-29	-0.0141 -0.0367 -0.1144 -0.0442 -0.0588 -0.0608 -0.0823 -0.1898 -0.0292 -0.1175 -0.0858
S-106	new StormClientHandler(client)
T-106	new StormClientErrorHandler(client.name())
H-106	-0.16704224050045013	new StormClientHandler(client)
D-106	-0.16704224050045013	new StormClientHandler(client)
P-106	-0.0706 -0.1311 -0.0896 -0.0743 -0.0238 -0.1059 -0.0885 -0.8216 -0.0979
S-621	stat.st_size.get()
T-621	stat.st_size.longValue()
H-621	-0.07320792227983475	stat.st_size.longValue()
D-621	-0.07320792227983475	stat.st_size.longValue()
P-621	-0.0216 -0.0740 -0.0613 -0.1138 -0.0405 -0.0829 -0.1479 -0.0282 -0.0831 -0.0788
S-465	assertEquals(expectedPlan,actualPlan)
T-465	assertPlanEquals(expectedPlan,actualPlan)
H-465	-0.06433852016925812	assertPlanEquals(expectedPlan,actualPlan)
D-465	-0.06433852016925812	assertPlanEquals(expectedPlan,actualPlan)
P-465	-0.0204 -0.0189 -0.2208 -0.0771 -0.0674 -0.0111 -0.0514 -0.0586 -0.0124 -0.0760 -0.0936
S-244	assertEquals(expectedPlan,actualPlan)
T-244	assertPlanEquals(expectedPlan,actualPlan)
H-244	-0.06433852016925812	assertPlanEquals(expectedPlan,actualPlan)
D-244	-0.06433852016925812	assertPlanEquals(expectedPlan,actualPlan)
P-244	-0.0204 -0.0189 -0.2208 -0.0771 -0.0674 -0.0111 -0.0514 -0.0586 -0.0124 -0.0760 -0.0936
S-319	oldOverride.removeParameter("enabled")
T-319	oldOverride.addParameter("enabled","enabled")
H-319	-0.19087597727775574	oldOverride.removeParameter("enabled")
D-319	-0.19087597727775574	oldOverride.removeParameter("enabled")
P-319	-0.0774 -0.0216 -0.0772 -0.4010 -0.0873 -0.0537 -0.1306 -0.7772 -0.0920
S-445	assertEquals(expectedPlan,actualPlan)
T-445	assertPlanEquals(expectedPlan,actualPlan)
H-445	-0.06433852016925812	assertPlanEquals(expectedPlan,actualPlan)
D-445	-0.06433852016925812	assertPlanEquals(expectedPlan,actualPlan)
P-445	-0.0204 -0.0189 -0.2208 -0.0771 -0.0674 -0.0111 -0.0514 -0.0586 -0.0124 -0.0760 -0.0936
S-201	mesh.getNumVertices() / 2
T-201	mesh.getNumVertices() / 4
H-201	-0.22069181501865387	mesh.getNumVertices() / 4
D-201	-0.22069181501865387	mesh.getNumVertices() / 4
P-201	-1.0999 -0.0836 -0.0563 -0.0574 -0.0153 -0.0853 -0.0285 -0.4278 -0.1322
S-363	GatherGettersAndSetterProperties.gather(compiler,mainRoot)
T-363	GatherGetterAndSetterProperties.gather(compiler,mainRoot)
H-363	-0.04656574875116348	GatherGetterAndSetterProperties.gather(compiler,mainRoot)
D-363	-0.04656574875116348	GatherGetterAndSetterProperties.gather(compiler,mainRoot)
P-363	-0.0427 -0.0291 -0.0098 -0.0165 -0.0291 -0.0329 -0.0971 -0.0241 -0.0778 -0.0357 -0.0684 -0.0253 -0.0567 -0.0656 -0.0877
S-26	LOG.info("Storage directory " + rootPath + " does not exist")
T-26	LOG.warn("Storage directory " + rootPath + " does not exist")
H-26	-0.053543444722890854	LOG.warn("Storage directory " + rootPath + " does not exist")
D-26	-0.053543444722890854	LOG.warn("Storage directory " + rootPath + " does not exist")
P-26	-0.0217 -0.0953 -0.0933 -0.0440 -0.0144 -0.0549 -0.0703 -0.0628 -0.0055 -0.0591 -0.0763 -0.0406 -0.0469 -0.0296 -0.0529 -0.0891
S-338	LOGGER.error("no property for " + type + ", "+ format)
T-338	LOGGER.debug("no property for " + type + ", "+ format)
H-338	-0.05941922962665558	LOGGER.debug("no property for " + type + ", "+ format)
D-338	-0.05941922962665558	LOGGER.debug("no property for " + type + ", "+ format)
P-338	-0.0273 -0.0996 -0.0978 -0.0734 -0.1007 -0.0343 -0.0603 -0.0702 -0.0719 -0.0285 -0.0530 -0.0191 -0.0310 -0.0337 -0.0617 -0.0883
S-152	statistics.addGetTimeNano(System.nanoTime() - start)
T-152	statistics.addGetTimeNanos(System.nanoTime() - start)
H-152	-0.05166909098625183	statistics.addGetTimeNanos(System.nanoTime() - start)
D-152	-0.05166909098625183	statistics.addGetTimeNanos(System.nanoTime() - start)
P-152	-0.0161 -0.0832 -0.0431 -0.0764 -0.0592 -0.0080 -0.0677 -0.0146 -0.0939 -0.0349 -0.0201 -0.0628 -0.0609 -0.0467 -0.0553 -0.0839
S-129	Assert.assertEquals(1145,details.get(1).getAbsolutePosition())
T-129	Assert.assertEquals(1144,details.get(1).getAbsolutePosition())
H-129	-0.34037360548973083	Assert.assertEquals(1145,details.get(1).getAbsolutePosition())
D-129	-0.34037360548973083	Assert.assertEquals(1145,details.get(1).getAbsolutePosition())
P-129	-0.0213 -0.0798 -0.0364 -0.0329 -0.8449 -1.8103 -2.1300 -0.0213 -0.0842 -0.0618 -0.0588 -0.0603 -0.0208 -0.0284 -0.0689 -0.0859
S-79	LOG.error("OpenTracing: Failed to capture tracing data",t)
T-79	LOG.warn("OpenTracing: Failed to capture tracing data",t)
H-79	-0.04827088490128517	LOG.warn("OpenTracing: Failed to capture tracing data",t)
D-79	-0.04827088490128517	LOG.warn("OpenTracing: Failed to capture tracing data",t)
P-79	-0.0214 -0.1032 -0.0175 -0.0555 -0.0461 -0.0180 -0.0642 -0.0154 -0.0652 -0.0383 -0.0184 -0.0708 -0.0607 -0.0332 -0.0610 -0.0833
S-422	Foundation.NSLog("[info] " + tag + ": "+ message)
T-422	Foundation.log("[info] " + tag + ": "+ message)
H-422	-0.051466841250658035	Foundation.log("[info] " + tag + ": "+ message)
D-422	-0.051466841250658035	Foundation.log("[info] " + tag + ": "+ message)
P-422	-0.0106 -0.0996 -0.0113 -0.0269 -0.0789 -0.0572 -0.0603 -0.0720 -0.0479 -0.0599 -0.0214 -0.0258 -0.0438 -0.0697 -0.0867
S-516	Foundation.NSLog("[debug] " + tag + ": "+ message)
T-516	Foundation.log("[debug] " + tag + ": "+ message)
H-516	-0.0499420203268528	Foundation.log("[debug] " + tag + ": "+ message)
D-516	-0.0499420203268528	Foundation.log("[debug] " + tag + ": "+ message)
P-516	-0.0100 -0.0997 -0.0135 -0.0252 -0.0242 -0.0847 -0.0653 -0.0657 -0.0531 -0.0559 -0.0207 -0.0269 -0.0431 -0.0741 -0.0870
S-500	Foundation.NSLog("[error] " + tag + ": "+ message)
T-500	Foundation.log("[error] " + tag + ": "+ message)
H-500	-0.05155232921242714	Foundation.log("[error] " + tag + ": "+ message)
D-500	-0.05155232921242714	Foundation.log("[error] " + tag + ": "+ message)
P-500	-0.0103 -0.1023 -0.0103 -0.0308 -0.0553 -0.0734 -0.0604 -0.0663 -0.0518 -0.0614 -0.0226 -0.0264 -0.0390 -0.0763 -0.0867
S-469	logger.debug("AtmosphereResource {} is resuming",uuid())
T-469	logger.trace("AtmosphereResource {} is resuming",uuid())
H-469	-0.06016417220234871	logger.trace("AtmosphereResource {} is resuming",uuid())
D-469	-0.06016417220234871	logger.trace("AtmosphereResource {} is resuming",uuid())
P-469	-0.0378 -0.0979 -0.2365 -0.0513 -0.0735 -0.0187 -0.0118 -0.0274 -0.0307 -0.0728 -0.0833 -0.0047 -0.0454 -0.0300 -0.0589 -0.0821
S-250	hashFunction.newHasher().putBytes(littleEndian)
T-250	hashFunction.newHasher().putBytes(bigEndian)
H-250	-0.05275533348321915	hashFunction.newHasher().putBytes(bigEndian)
D-250	-0.05275533348321915	hashFunction.newHasher().putBytes(bigEndian)
P-250	-0.0191 -0.0343 -0.0869 -0.0732 -0.0201 -0.0470 -0.0703 -0.0207 -0.0195 -0.1285 -0.0703 -0.0069 -0.0595 -0.0823
S-628	Assert.notNull(jarScanner,"Patterns must not be null")
T-628	Assert.notNull(patterns,"Patterns must not be null")
H-628	-0.04533639922738075	Assert.notNull(patterns,"Patterns must not be null")
D-628	-0.04533639922738075	Assert.notNull(patterns,"Patterns must not be null")
P-628	-0.0162 -0.0966 -0.0469 -0.0233 -0.0639 -0.0204 -0.0097 -0.0134 -0.0392 -0.0629 -0.0648 -0.0271 -0.0661 -0.0843
S-563	doMethod("GET","/books/" + bookId,null)
T-563	getResponse("GET","/books/" + bookId,null)
H-563	-0.06109433248639107	getResponse("GET","/books/" + bookId,null)
D-563	-0.06109433248639107	getResponse("GET","/books/" + bookId,null)
P-563	-0.1429 -0.0894 -0.0215 -0.0340 -0.0845 -0.0227 -0.0297 -0.0420 -0.0309 -0.0475 -0.1080 -0.0318 -0.0751 -0.0954
S-263	this.registry.getValue().addXAResourceRecovery(recovery)
T-263	this.registry.getValue().removeXAResourceRecovery(recovery)
H-263	-0.05297653004527092	this.registry.getValue().removeXAResourceRecovery(recovery)
D-263	-0.05297653004527092	this.registry.getValue().removeXAResourceRecovery(recovery)
P-263	-0.0506 -0.0794 -0.0125 -0.0787 -0.0188 -0.0942 -0.0467 -0.0307 -0.0295 -0.0343 -0.0807 -0.0181 -0.0814 -0.0541 -0.0851
S-733	testClass.getMethod(SUITE_METHODNAME,new Class[0])
T-733	testClass.getMethod(SUITE_METHODNAME)
H-733	-0.20075780153274536	testClass.getMethod(SUITE_METHODNAME,new Class[0])
D-733	-0.20075780153274536	testClass.getMethod(SUITE_METHODNAME,new Class[0])
P-733	-0.1951 -0.0844 -0.0602 -0.0809 -0.4146 -1.1149 -0.0061 -0.1131 -0.0331 -0.0673 -0.3568 -0.0898 -0.0223 -0.2926 -0.0801
S-181	getOrCreateContainer().unlock(dataKey,caller,threadId)
T-181	getOrCreateContainer().forceUnlock(dataKey)
H-181	-0.054862331598997116	getOrCreateContainer().forceUnlock(dataKey)
D-181	-0.054862331598997116	getOrCreateContainer().forceUnlock(dataKey)
P-181	-0.0095 -0.0439 -0.0927 -0.0099 -0.0087 -0.1026 -0.0627 -0.0679 -0.0631 -0.0876
S-162	getOrCreateContainer().unlock(dataKey,caller,threadId)
T-162	getOrCreateContainer().forceUnlock(dataKey)
H-162	-0.054862331598997116	getOrCreateContainer().forceUnlock(dataKey)
D-162	-0.054862331598997116	getOrCreateContainer().forceUnlock(dataKey)
P-162	-0.0095 -0.0439 -0.0927 -0.0099 -0.0087 -0.1026 -0.0627 -0.0679 -0.0631 -0.0876
S-695	waitForJobExecutorToProcessAllJobsAndExecutableTimerJobs(10000,200)
T-695	executeJobExecutorForTime(10000,200)
H-695	-0.09479454904794693	waitForJobExecutorToProcessAllJobsAndExecutableTimerJobs(20000,200)
D-695	-0.09479454904794693	waitForJobExecutorToProcessAllJobsAndExecutableTimerJobs(20000,200)
P-695	-0.0984 -0.0791 -0.0316 -0.1312 -0.0292 -0.0500 -0.0271 -0.0355 -0.0203 -0.0493 -0.0323 -0.6423 -0.0776 -0.0404 -0.0778
S-27	waitForJobExecutorToProcessAllJobsAndExecutableTimerJobs(10000,200)
T-27	executeJobExecutorForTime(10000,200)
H-27	-0.09479454904794693	waitForJobExecutorToProcessAllJobsAndExecutableTimerJobs(20000,200)
D-27	-0.09479454904794693	waitForJobExecutorToProcessAllJobsAndExecutableTimerJobs(20000,200)
P-27	-0.0984 -0.0791 -0.0316 -0.1312 -0.0292 -0.0500 -0.0271 -0.0355 -0.0203 -0.0493 -0.0323 -0.6423 -0.0776 -0.0404 -0.0778
S-238	client.getVertx().setTimer(1,id -> checkExpired())
T-238	client.getVertx().setTimer(1000,id -> checkExpired())
H-238	-0.18264368176460266	client.getVertx().setTimer(1000,id -> checkExpired())
D-238	-0.18264368176460266	client.getVertx().setTimer(1000,id -> checkExpired())
P-238	-0.0419 -0.0804 -0.0525 -0.0294 -0.0562 -0.0620 -0.1650 -0.0700 -1.4387 -0.6189 -0.0634 -0.0205 -0.0691 -0.0173 -0.0544 -0.0825
S-401	public Integer getRequestRequiredAcks(){ return requestRequiredAcks; }
T-401	public String getRequestRequiredAcks(){ return requestRequiredAcks; }
H-401	-0.04042362794280052	public String getRequestRequiredAcks(){ return requestRequiredAcks; }
D-401	-0.04042362794280052	public String getRequestRequiredAcks(){ return requestRequiredAcks; }
P-401	-0.0395 -0.0395 -0.0645 -0.0333 -0.0254 -0.0491 -0.0607 -0.0494 -0.0149 -0.0220 -0.0179 -0.0489 -0.0199 -0.0290 -0.0923
S-731	LOG.trace("Terminating channel to the remote gRPC server")
T-731	LOG.debug("Terminating channel to the remote gRPC server")
H-731	-0.134651780128479	LOG.debug("Terminating channel to the remote gRPC server")
D-731	-0.134651780128479	LOG.debug("Terminating channel to the remote gRPC server")
P-731	-0.0261 -0.0978 -0.0149 -0.1024 -0.0194 -0.0115 -0.0222 -0.0769 -0.0832 -1.2848 -0.0575 -0.0291 -0.0370 -0.0752 -0.0818
S-16	LOG.info("Finding components in url: {}",url)
T-16	LOG.trace("Finding components in url: {}",url)
H-16	-0.11682713776826859	LOG.debug("Finding components in url: {}",url)
D-16	-0.11682713776826859	LOG.debug("Finding components in url: {}",url)
P-16	-0.0352 -0.0978 -0.9892 -0.0581 -0.0505 -0.0123 -0.0272 -0.0868 -0.0298 -0.0567 -0.0576 -0.0697 -0.0351 -0.0601 -0.0863
S-814	details.put(CONFIG_HASH_KEY,currentConfigHash)
T-814	details.setProperty(CONFIG_HASH_KEY,currentConfigHash)
H-814	-0.054424483329057693	details.setProperty(CONFIG_HASH_KEY,currentConfigHash)
D-814	-0.054424483329057693	details.setProperty(CONFIG_HASH_KEY,currentConfigHash)
P-814	-0.0237 -0.0826 -0.0245 -0.0698 -0.0226 -0.0829 -0.0084 -0.0785 -0.0428 -0.0850 -0.0632 -0.0645 -0.0182 -0.0594 -0.0902
S-809	logger.debug("Invalid Atmosphere Version {}",javascriptVersion)
T-809	logger.error("Invalid Atmosphere Version {}",javascriptVersion)
H-809	-0.060391321778297424	logger.error("Invalid Atmosphere Version {}",javascriptVersion)
D-809	-0.060391321778297424	logger.error("Invalid Atmosphere Version {}",javascriptVersion)
P-809	-0.0376 -0.0978 -0.2281 -0.0630 -0.0225 -0.0671 -0.0135 -0.0182 -0.0301 -0.0694 -0.0721 -0.0074 -0.0334 -0.0618 -0.0839
S-32	ssl.has(CommonAttributes.CA_CERTIFICATE_FILE)
T-32	ssl.hasDefined(CommonAttributes.CA_CERTIFICATE_FILE)
H-32	-0.050364602357149124	ssl.hasDefined(CommonAttributes.CA_CERTIFICATE_FILE)
D-32	-0.050364602357149124	ssl.hasDefined(CommonAttributes.CA_CERTIFICATE_FILE)
P-32	-0.0177 -0.0995 -0.0409 -0.0434 -0.0592 -0.0236 -0.0115 -0.0905 -0.0186 -0.1108 -0.0152 -0.0118 -0.0849 -0.0195 -0.0688 -0.0896
S-484	mapContainer.getMapConfig().getTimeToLiveSeconds() * 1000
T-484	mapContainer.getMapConfig().getTimeToLiveSeconds() * 1000L
H-484	-0.06863165646791458	mapContainer.getMapConfig().getTimeToLiveSeconds() * 1000L
D-484	-0.06863165646791458	mapContainer.getMapConfig().getTimeToLiveSeconds() * 1000L
P-484	-0.0835 -0.0568 -0.0826 -0.0701 -0.0672 -0.0684 -0.0955 -0.0665 -0.0593 -0.0246 -0.0423 -0.0706 -0.0401 -0.1119 -0.0888 -0.0699
S-60	endFunction("write_column_statistics: ",ret != false)
T-60	endFunction("write_column_statistics: ",ret != false,null)
H-60	-0.07497359067201614	endFunction("write_column_statistics: ",ret != false,null)
D-60	-0.07497359067201614	endFunction("write_column_statistics: ",ret != false,null)
P-60	-0.0803 -0.0242 -0.0519 -0.0737 -0.1335 -0.0577 -0.0792 -0.0362 -0.0466 -0.0490 -0.0163 -0.0410 -0.1492 -0.1839 -0.0197 -0.1350 -0.0973
S-241	new DefaultMemoryManager(totalMemory,numSlots,pageSize)
T-241	new DefaultMemoryManager(totalMemory,numSlots,pageSize,true)
H-241	-0.5991024374961853	new DefaultMemoryManager(numSlots,pageSize,true)
D-241	-0.5991024374961853	new DefaultMemoryManager(numSlots,pageSize,true)
P-241	-0.0815 -0.0323 -0.0347 -0.0169 -0.1103 -2.5566 -1.4703 -0.0661 -0.0822 -0.0987 -0.3155 -3.1693 -0.2598 -0.0931
S-276	m_data.getFixString((int)m_length)
T-276	m_data.getFixString((int)m_length,charsetName)
H-276	-0.37732213735580444	m_data.getFixString(m_length,charset)
D-276	-0.37732213735580444	m_data.getFixString(m_length,charset)
P-276	-0.0246 -0.1107 -0.1225 -0.0804 -0.0765 -0.0157 -0.0633 -3.7127 -0.1884 -0.1439 -0.0736 -0.2758 -0.2057 -0.4815 -0.0844
S-412	waitForJobExecutorToProcessAllJobsAndExecutableTimerJobs(10000,200)
T-412	executeJobExecutorForTime(10000,200)
H-412	-0.09479454904794693	waitForJobExecutorToProcessAllJobsAndExecutableTimerJobs(20000,200)
D-412	-0.09479454904794693	waitForJobExecutorToProcessAllJobsAndExecutableTimerJobs(20000,200)
P-412	-0.0984 -0.0791 -0.0316 -0.1312 -0.0292 -0.0500 -0.0271 -0.0355 -0.0203 -0.0493 -0.0323 -0.6423 -0.0776 -0.0404 -0.0778
S-820	assertFalse("reuse-address",networkConfig.isReuseAddress())
T-820	assertTrue("reuse-address",networkConfig.isReuseAddress())
H-820	-0.05861709266901016	assertTrue("reuse-address",networkConfig.isReuseAddress())
D-820	-0.05861709266901016	assertTrue("reuse-address",networkConfig.isReuseAddress())
P-820	-0.0313 -0.0433 -0.0759 -0.1025 -0.0511 -0.0760 -0.0186 -0.0314 -0.0999 -0.0839 -0.0126 -0.0526 -0.0518 -0.0898
S-807	terms.facetFilter(standardFilters(range,filter))
T-807	stats.facetFilter(standardFilters(range,filter))
H-807	-0.055479440838098526	stats.facetFilter(standardFilters(range,filter))
D-807	-0.055479440838098526	stats.facetFilter(standardFilters(range,filter))
P-807	-0.1313 -0.1224 -0.0155 -0.0627 -0.0334 -0.0620 -0.0268 -0.0189 -0.0546 -0.0203 -0.0462 -0.0250 -0.0765 -0.0811
S-692	registry.put("kinesisClient",amazonKinesisClient)
T-692	registry.bind("kinesisClient",amazonKinesisClient)
H-692	-0.05645463243126869	registry.bind("kinesisClient",amazonKinesisClient)
D-692	-0.05645463243126869	registry.bind("kinesisClient",amazonKinesisClient)
P-692	-0.0214 -0.0776 -0.0433 -0.0608 -0.0905 -0.0239 -0.0702 -0.0691 -0.0087 -0.0597 -0.0253 -0.0732 -0.0722 -0.0944
S-66	JavaConversions.asIterable(logManager.allLogs())
T-66	JavaConversions.asJavaIterable(logManager.allLogs())
H-66	-0.26762858033180237	JavaConversions.asJavaIterable(logManager.allLogs())
D-66	-0.26762858033180237	JavaConversions.asJavaIterable(logManager.allLogs())
P-66	-0.0127 -0.0752 -0.0171 -0.0763 -3.3831 -0.0121 -0.0251 -0.0746 -0.0332 -0.0150 -0.0828 -0.0503 -0.0274 -0.0514 -0.0781
S-70	http2.setInitialStreamSendWindow(initialStreamSendWindow)
T-70	http2.setInitialStreamRecvWindow(initialStreamSendWindow)
H-70	-0.05902986228466034	http2.setInitialStreamRecvWindow(initialStreamSendWindow)
D-70	-0.05902986228466034	http2.setInitialStreamRecvWindow(initialStreamSendWindow)
P-70	-0.0256 -0.0577 -0.1173 -0.0357 -0.0209 -0.0326 -0.0807 -0.0377 -0.0643 -0.0267 -0.0204 -0.1478 -0.0527 -0.0764 -0.0889
S-729	Assert.notNull(groupId,"ArtifactId must not be null")
T-729	Assert.notNull(artifactId,"ArtifactId must not be null")
H-729	-0.046382542699575424	Assert.notNull(artifactId,"ArtifactId must not be null")
D-729	-0.046382542699575424	Assert.notNull(artifactId,"ArtifactId must not be null")
P-729	-0.0201 -0.0934 -0.0377 -0.0163 -0.0629 -0.0114 -0.0116 -0.0372 -0.0335 -0.0636 -0.0688 -0.0263 -0.0789 -0.0875
S-388	QuotaCache.this.tableQuotaCache.contains(table)
T-388	QuotaCache.this.tableQuotaCache.containsKey(table)
H-388	-0.06049808859825134	QuotaCache.this.tableQuotaCache.containsKey(table)
D-388	-0.06049808859825134	QuotaCache.this.tableQuotaCache.containsKey(table)
P-388	-0.0077 -0.0261 -0.0904 -0.0336 -0.0860 -0.1602 -0.0328 -0.0209 -0.1250 -0.0188 -0.0596 -0.0701 -0.0266 -0.0639 -0.0857
S-679	WebAppUtils.getResolvedRMWebAppURLWithoutScheme(conf)
T-679	WebAppUtils.getResolvedRMWebAppURLWithScheme(conf)
H-679	-0.04509837552905083	WebAppUtils.getResolvedRMWebAppURLWithScheme(conf)
D-679	-0.04509837552905083	WebAppUtils.getResolvedRMWebAppURLWithScheme(conf)
P-679	-0.0224 -0.0274 -0.0831 -0.0734 -0.0163 -0.0436 -0.0192 -0.0387 -0.0057 -0.0581 -0.0585 -0.0604 -0.0528 -0.0718
S-652	endpoint.getBus().getInInterceptors().size() == 1
T-652	endpoint.getBus().getInInterceptors().size() >= 1
H-652	-0.1893208622932434	endpoint.getBus().getInInterceptors().size() == 0
D-652	-0.1893208622932434	endpoint.getBus().getInInterceptors().size() == 0
P-652	-0.0203 -0.0939 -0.0418 -0.0213 -0.0609 -0.0521 -0.1374 -0.0100 -0.1772 -0.0335 -0.0659 -0.5272 -1.3407 -0.0683
S-566	LOG.info(rootPath + "is not a directory")
T-566	LOG.warn(rootPath + "is not a directory")
H-566	-0.06372645497322083	LOG.warn(rootPath + "is not a directory")
D-566	-0.06372645497322083	LOG.warn(rootPath + "is not a directory")
P-566	-0.0225 -0.1029 -0.0279 -0.1346 -0.0330 -0.0529 -0.0612 -0.0615 -0.0874 -0.0486 -0.0697 -0.0503 -0.0553 -0.0845
S-549	@UriPath(label="producer",defaultValue="true")
T-549	@UriParam(label="producer",defaultValue="true")
H-549	-0.08589600026607513	@UriParam(label="producer",defaultValue="true")
D-549	-0.08589600026607513	@UriParam(label="producer",defaultValue="true")
P-549	-0.0227 -0.0291 -0.4553 -0.0846 -0.0223 -0.0451 -0.0159 -0.0926 -0.0593 -0.0547 -0.0564 -0.0917 -0.0945 -0.0784
S-443	entry.getName().startsWith(BOOT_INF_CLASSES)
T-443	entry.getName().equals(BOOT_INF_CLASSES)
H-443	-0.08180458098649979	entry.getName().equals(BOOT_INF_CLASSES)
D-443	-0.08180458098649979	entry.getName().equals(BOOT_INF_CLASSES)
P-443	-0.1158 -0.1236 -0.0607 -0.0816 -0.2534 -0.0805 -0.0611 -0.0087 -0.0835 -0.0109 -0.0746 -0.0284 -0.0698 -0.0926
S-326	logger.trace("{} is already cancelled",impl.uuid())
T-326	logger.error("{} is already cancelled",impl.uuid())
H-326	-0.06314869225025177	logger.error("{} is already cancelled",impl.uuid())
D-326	-0.06314869225025177	logger.error("{} is already cancelled",impl.uuid())
P-326	-0.0398 -0.1041 -0.1385 -0.0546 -0.0135 -0.0590 -0.0329 -0.0881 -0.0606 -0.0049 -0.0937 -0.0754 -0.0386 -0.0806
S-228	uri.toString().equalsIgnoreCase(future.getURI().toString())
T-228	uri.toString().equals(future.getURI().toString())
H-228	-0.08322181552648544	uri.toString().equals(future.getURI().toString())
D-228	-0.08322181552648544	uri.toString().equals(future.getURI().toString())
P-228	-0.0395 -0.3605 -0.0437 -0.0526 -0.0999 -0.1268 -0.0081 -0.0925 -0.0587 -0.0406 -0.0575 -0.0410 -0.0498 -0.0938
S-120	connection.setFollowRedirects(httpRequest.getFollowRedirects())
T-120	HttpURLConnection.setFollowRedirects(httpRequest.getFollowRedirects())
H-120	-0.06085773557424545	HttpURLConnection.setFollowRedirects(httpRequest.getFollowRedirects())
D-120	-0.06085773557424545	HttpURLConnection.setFollowRedirects(httpRequest.getFollowRedirects())
P-120	-0.0515 -0.0423 -0.0975 -0.1278 -0.0849 -0.0280 -0.0705 -0.0290 -0.0521 -0.0774 -0.0547 -0.0415 -0.0284 -0.0431 -0.0839
S-63	EnterpriseMapPublisherCreateWithValueCodec.decodeResponse(response).entries
T-63	EnterpriseMapPublisherCreateWithValueCodec.decodeResponse(response).response
H-63	-0.09252411872148514	EnterpriseMapPublisherCreateWithValueCodec.decodeResponse(response).entries
D-63	-0.09252411872148514	EnterpriseMapPublisherCreateWithValueCodec.decodeResponse(response).entries
P-63	-0.0076 -0.0304 -0.0296 -0.0598 -0.2249 -0.0152 -0.1084 -0.0332 -0.0676 -0.0515 -0.0667 -0.0598 -0.3825 -0.1581
S-249	new CacheCreateConfigOperation(cacheConfig,create,false)
T-249	new CacheCreateConfigOperation(cacheConfig,createAlsoOnOthers,false)
H-249	-0.10173245519399643	new CacheCreateConfigOperation(cacheConfig,create,true)
D-249	-0.10173245519399643	new CacheCreateConfigOperation(cacheConfig,create,true)
P-249	-0.0626 -0.0188 -0.0841 -0.0443 -0.0261 -0.0620 -0.2067 -0.0632 -0.1032 -0.3218 -0.0781 -0.1079 -0.1520 -0.0933
S-224	logger.error("NODE {}: DeleteReturnRoute command failed.")
T-224	logger.error("NODE {}: DeleteReturnRoute command failed.",nodeId)
H-224	-0.15510407090187073	logger.warn("NODE {}: DeleteReturnRoute command failed.")
D-224	-0.15510407090187073	logger.warn("NODE {}: DeleteReturnRoute command failed.")
P-224	-0.0328 -0.0971 -1.2799 -0.0722 -0.0573 -0.0264 -0.0599 -0.0353 -0.0462 -0.0363 -0.0324 -0.0200 -0.3011 -0.0745
S-93	assertTrue(exitStatuses.contains(status.getExitStatus()))
T-93	assertTrue("Exit Statuses are supposed to be in: " + exitStatuses + ", but the actual exit status code is: "+ status.getExitStatus(),exitStatuses.contains(status.getExitStatus()))
H-93	-0.11828387528657913	assertFalse(exitStatuses.contains(status.getExitStatus()))
D-93	-0.11828387528657913	assertFalse(exitStatuses.contains(status.getExitStatus()))
P-93	-0.1292 -0.0658 -0.2787 -0.2503 -0.0695 -0.0365 -0.0418 -0.0490 -0.0791 -0.0382 -0.4188 -0.0700 -0.0418 -0.0871
S-594	conn.getResponseCode() == HttpURLConnection.HTTP_OK
T-594	conn.getResponseCode() == HttpURLConnection.HTTP_OK || conn.getResponseCode() == HttpURLConnection.HTTP_BAD_REQUEST
H-594	-0.2690519392490387	conn.getResponseCode() != HttpURLConnection.HTTP_OK
D-594	-0.2690519392490387	conn.getResponseCode() != HttpURLConnection.HTTP_OK
P-594	-0.0574 -0.1961 -0.0538 -0.0456 -0.0446 -0.1044 -2.5939 -0.0490 -0.0352 -0.1029 -0.0244 -0.0965 -0.2612 -0.1015
S-9	new S3DataSegmentMover(mockS3Client)
T-9	new S3DataSegmentMover(mockS3Client,new S3DataSegmentPusherConfig())
H-9	-0.05090745911002159	new S3DataSegmentMover(mockS3Client,new S3DataSegmentPusherConfig())
D-9	-0.05090745911002159	new S3DataSegmentMover(mockS3Client,new S3DataSegmentPusherConfig())
P-9	-0.0689 -0.0313 -0.0205 -0.0481 -0.0235 -0.0256 -0.0190 -0.0872 -0.1209 -0.0634 -0.0228 -0.0639 -0.1178 -0.0123 -0.0142 -0.0179 -0.0433 -0.0537 -0.0002 0.0000 -0.1428 -0.0805 -0.0932
S-761	twitter1.getRetweets(18594701629l)
T-761	twitter1.getRetweets(1021608606934822912L)
H-761	-0.38516977429389954	twitter1.getRetweetsExcerpt(18594701629l)
D-761	-0.38516977429389954	twitter1.getRetweetsExcerpt(18594701629l)
P-761	-0.0147 -0.0512 -0.0718 -0.0181 -0.0223 -4.2399 -0.3097 -0.0024 -0.1045 -0.3371 -0.1210 -0.2197 -0.0406 -0.0150 -0.8545 -0.0477 -0.0777
S-666	getPath("InputPackageDeclarationDiffDirectoryAtSubpackage.java")
T-666	getNonCompilablePath("InputPackageDeclarationDiffDirectoryAtSubpackage.java")
H-666	-0.04253291338682175	getNonCompilablePath("InputPackageDeclarationDiffDirectoryAtSubpackage.java")
D-666	-0.04253291338682175	getNonCompilablePath("InputPackageDeclarationDiffDirectoryAtSubpackage.java")
P-666	-0.0249 -0.0032 -0.0021 -0.0082 -0.0265 -0.0706 -0.0446 -0.0569 -0.0134 -0.0377 -0.0348 -0.0428 -0.0552 -0.0674 -0.0776 -0.0503 -0.0552 -0.0942
S-417	QuotaCache.this.tableQuotaCache.contains(table)
T-417	QuotaCache.this.tableQuotaCache.containsKey(table)
H-417	-0.06049808859825134	QuotaCache.this.tableQuotaCache.containsKey(table)
D-417	-0.06049808859825134	QuotaCache.this.tableQuotaCache.containsKey(table)
P-417	-0.0077 -0.0261 -0.0904 -0.0336 -0.0860 -0.1602 -0.0328 -0.0209 -0.1250 -0.0188 -0.0596 -0.0701 -0.0266 -0.0639 -0.0857
S-539	Preconditions.checkNotNull("Streaming Job name should not be null.")
T-539	Preconditions.checkNotNull(jobName,"Streaming Job name should not be null.")
H-539	-0.18859140574932098	Preconditions.checkNotNull("Streaming Job name should not be null.",jobName)
D-539	-0.18859140574932098	Preconditions.checkNotNull("Streaming Job name should not be null.",jobName)
P-539	-0.0269 -0.0726 -0.0235 -0.0432 -0.1629 -0.1445 -0.4010 -0.0931 -0.0706 -0.0715 -0.1222 -0.0382 -0.6376 -0.6100 -0.1702 -0.4359 -0.0820
S-506	connection.zrangeByLex(key,max,min)
T-506	connection.zrevrangeByLex(key,max,min)
H-506	-0.04376055300235748	connection.zrevrangeByLex(key,max,min)
D-506	-0.04376055300235748	connection.zrevrangeByLex(key,max,min)
P-506	-0.0499 -0.0823 -0.0357 -0.0048 -0.0119 -0.0262 -0.0107 -0.0435 -0.0510 -0.0596 -0.0365 -0.0528 -0.0569 -0.0564 -0.0782
S-143	mTfs.delete(mTfs.open(path))
T-143	mTfs.delete(mTfs.open(path),true)
H-143	-0.15967969596385956	mTfs.delete(mTfs.open(path),true)
D-143	-0.15967969596385956	mTfs.delete(mTfs.open(path),true)
P-143	-0.0107 -0.0540 -0.0887 -0.0564 -0.1300 -0.0358 -0.0972 -0.0404 -0.0866 -0.0452 -0.0698 -0.0487 -1.1116 -0.4595 -0.1255 -0.0948
S-101	c.write("[you] " + msg + '\n')
T-101	c.writeAndFlush("[you] " + msg + '\n')
H-101	-0.04816184937953949	c.writeAndFlush("[you] " + msg + '\n')
D-101	-0.04816184937953949	c.writeAndFlush("[you] " + msg + '\n')
P-101	-0.0278 -0.0892 -0.0344 -0.0108 -0.0071 -0.0241 -0.0529 -0.0410 -0.0500 -0.0447 -0.0670 -0.0526 -0.0205 -0.0929 -0.0671 -0.0885
S-720	xtw.writeCharacters(customProperty.getSimpleValue())
T-720	xtw.writeCData(customProperty.getSimpleValue())
H-720	-0.05308329313993454	xtw.writeCData(customProperty.getSimpleValue())
D-720	-0.05308329313993454	xtw.writeCData(customProperty.getSimpleValue())
P-720	-0.0620 -0.0222 -0.0912 -0.0425 -0.1333 -0.0435 -0.0482 -0.0204 -0.0203 -0.0843 -0.0537 -0.0151 -0.0363 -0.0366 -0.0868
S-670	this.thrown.equals("File must not be null")
T-670	this.thrown.expectMessage("File must not be null")
H-670	-0.05413390323519707	this.thrown.expectMessage("File must not be null")
D-670	-0.05413390323519707	this.thrown.expectMessage("File must not be null")
P-670	-0.0401 -0.1055 -0.0225 -0.0231 -0.1100 -0.0186 -0.0462 -0.0639 -0.0367 -0.0296 -0.0670 -0.0702 -0.0488 -0.0545 -0.0754
S-665	connection.zrangeByLex(key,max,min)
T-665	connection.zrevrangeByLex(key,max,min)
H-665	-0.04376055300235748	connection.zrevrangeByLex(key,max,min)
D-665	-0.04376055300235748	connection.zrevrangeByLex(key,max,min)
P-665	-0.0499 -0.0823 -0.0357 -0.0048 -0.0119 -0.0262 -0.0107 -0.0435 -0.0510 -0.0596 -0.0365 -0.0528 -0.0569 -0.0564 -0.0782
S-121	Integer.valueOf(p.getProperty("numberid.id"))
T-121	Long.valueOf(p.getProperty("numberid.id"))
H-121	-0.06449969112873077	Long.valueOf(p.getProperty("numberid.id"))
D-121	-0.06449969112873077	Long.valueOf(p.getProperty("numberid.id"))
P-121	-0.0985 -0.0714 -0.0868 -0.0574 -0.0481 -0.0890 -0.0101 -0.0544 -0.0413 -0.0742 -0.0834 -0.0737 -0.0347 -0.0799
S-643	CamelContextHelper.parseInteger(getCamelContext(),keepAliveTime)
T-643	CamelContextHelper.parseInteger(getCamelContext(),maxQueueSize)
H-643	-0.2453417181968689	CamelContextHelper.parseLong(getCamelContext(),keepAliveTime)
D-643	-0.2453417181968689	CamelContextHelper.parseLong(getCamelContext(),keepAliveTime)
P-643	-0.8870 -0.0607 -0.0708 -0.0534 -1.3588 -0.0514 -0.0457 -0.0529 -0.0873 -0.5040 -0.0701 -0.0530 -0.0581 -0.0816
S-753	getMockEndpoint("mock:test.after.1").expectedMinimumMessageCount(10)
T-753	getMockEndpoint("mock:test.after.1").expectedMessageCount(10)
H-753	-0.1775595098733902	getMockEndpoint("mock:test.after.1").expectedMinimumMessageCount(10)
D-753	-0.1775595098733902	getMockEndpoint("mock:test.after.1").expectedMinimumMessageCount(10)
P-753	-0.0183 -0.0552 -0.0470 -0.0676 -0.0621 -0.0647 -0.0194 -0.0657 -0.0261 -0.0261 -0.5795 -0.0336 -1.3366 -0.0839
S-220	camelContext.getExecutorServiceManager().shutdownNow(timeoutCheckerExecutorService)
T-220	camelContext.getExecutorServiceManager().shutdown(timeoutCheckerExecutorService)
H-220	-0.20236104726791382	camelContext.getExecutorServiceManager().shutdown(timeoutCheckerExecutorService)
D-220	-0.20236104726791382	camelContext.getExecutorServiceManager().shutdown(timeoutCheckerExecutorService)
P-220	-0.0119 -0.0735 -0.0370 -0.0256 -0.0317 -0.1160 -0.1027 -2.0533 -0.0130 -0.0211 -0.0108 -0.0473 -0.0868
S-206	mPersistedFiles.removeAll(mPersistedFiles)
T-206	mPersistedFiles.removeAll(persistedFiles)
H-206	-0.43382617831230164	mPersistedFiles.remove(mPersistedFiles)
D-206	-0.43382617831230164	mPersistedFiles.remove(mPersistedFiles)
P-206	-0.0799 -0.0012 -0.0522 -0.0483 -0.1411 -0.6839 -0.9656 -0.9561 -0.0014 -0.0748 -0.0675 -2.4809 -0.0871
S-606	getSrcPath("checks/javadoc/Input_01.java")
T-606	getPath("checks/javadoc/Input_01.java")
H-606	-0.05957857146859169	getPath("checks/javadoc/Input_01.java")
D-606	-0.05957857146859169	getPath("checks/javadoc/Input_01.java")
P-606	-0.0295 -0.0861 -0.0230 -0.0498 -0.0052 -0.0497 -0.0543 -0.1020 -0.0836 -0.0560 -0.0827 -0.0929
S-48	suiteMethod.invoke(null,(Object[])new Class[0])
T-48	suiteMethod.invoke(null)
H-48	-0.19655552506446838	suiteMethod.invoke(null,(Object[])new Class[0])
D-48	-0.19655552506446838	suiteMethod.invoke(null,(Object[])new Class[0])
P-48	-0.3143 -0.0097 -0.0813 -0.0824 -0.3201 -0.0346 -0.0504 -0.2843 -0.1036 -0.0109 -0.0797 -0.0333 -1.2541 -0.0932
S-369	Gdx.files.internal(fileName).nameWithoutExtension()
T-369	Gdx.files.internal(fileName).pathWithoutExtension()
H-369	-0.07853268086910248	Gdx.files.internal(fileName).pathWithoutExtension()
D-369	-0.07853268086910248	Gdx.files.internal(fileName).pathWithoutExtension()
P-369	-0.0185 -0.0775 -0.0148 -0.0946 -0.0224 -0.0580 -0.0161 -0.0617 -0.4566 -0.0265 -0.0224 -0.0740 -0.0777
S-115	mLineageStore.requestFilePersistence(fileId)
T-115	mLineageStore.reportLostFile(fileId)
H-115	-0.0803808867931366	mLineageStore.reportLostFile(fileId)
D-115	-0.0803808867931366	mLineageStore.reportLostFile(fileId)
P-115	-0.0349 -0.0347 -0.0284 -0.0219 -0.1085 -0.2168 -0.0002 -0.3024 -0.0441 -0.0472 -0.0647 -0.0579 -0.0834
S-140	interceptors.addFirst(newAInterceptor(a))
T-140	interceptors.addLast(newAInterceptor(a))
H-140	-0.04978109151124954	interceptors.addLast(newAInterceptor(a))
D-140	-0.04978109151124954	interceptors.addLast(newAInterceptor(a))
P-140	-0.0218 -0.0171 -0.0785 -0.0199 -0.0399 -0.0598 -0.0515 -0.0606 -0.0258 -0.0593 -0.0904 -0.0437 -0.0788
S-13	op.get("address").set("host",host)
T-13	op.get("address").add("host",host)
H-13	-0.06961667537689209	op.get("address").add("host",host)
D-13	-0.06961667537689209	op.get("address").add("host",host)
P-13	-0.0591 -0.0740 -0.0628 -0.0651 -0.0373 -0.0389 -0.0713 -0.1269 -0.0770 -0.1011 -0.0266 -0.0719 -0.0928
S-389	LOG.info("Getting synchronous method stub from channel")
T-389	LOG.debug("Getting synchronous method stub from channel")
H-389	-0.05374865606427193	LOG.debug("Getting synchronous method stub from channel")
D-389	-0.05374865606427193	LOG.debug("Getting synchronous method stub from channel")
P-389	-0.0264 -0.0945 -0.0233 -0.0685 -0.0697 -0.0199 -0.0220 -0.0592 -0.0372 -0.0569 -0.0560 -0.0790 -0.0863
S-431	flushAfterDuration(entry.getKey(),entry.getValue())
T-431	abandonSegment(entry.getKey(),entry.getValue())
H-431	-0.09597743302583694	abandonSegment(entry.getKey(),entry.getValue())
D-431	-0.09597743302583694	abandonSegment(entry.getKey(),entry.getValue())
P-431	-0.2749 -0.2738 -0.0023 -0.1128 -0.0164 -0.0850 -0.0302 -0.1348 -0.0312 -0.0876 -0.0256 -0.0864 -0.0867
S-509	annotatorImplementation.custom(inputProps,customName)
T-509	annotatorImplementation.custom(inputProps,property)
H-509	-0.284809410572052	annotatorImplementation.custom(inputProps,customName)
D-509	-0.284809410572052	annotatorImplementation.custom(inputProps,customName)
P-509	-0.0569 -0.0198 -0.0283 -0.0737 -0.0452 -0.1408 -0.1350 -0.0273 -0.0565 -0.0643 -0.1914 -2.7849 -0.0784
S-45	assertSame(conf,(Configuration)serializeDeserialize(conf))
T-45	assertEquals(conf,(Configuration)serializeDeserialize(conf))
H-45	-0.16562913358211517	assertEquals(conf,(Configuration)serializeDeserialize(conf))
D-45	-0.16562913358211517	assertEquals(conf,(Configuration)serializeDeserialize(conf))
P-45	-0.6484 -0.1098 -0.7928 -0.0697 -0.0708 -0.0682 -0.0513 -0.0206 -0.0271 -0.0737 -0.0587 -0.0771 -0.0849
S-579	completionLatch.await(1200,TimeUnit.MILLISECONDS)
T-579	completionLatch.await(2500,TimeUnit.MILLISECONDS)
H-579	-0.20054425299167633	completionLatch.await(2500,TimeUnit.MILLISECONDS)
D-579	-0.20054425299167633	completionLatch.await(2500,TimeUnit.MILLISECONDS)
P-579	-0.5784 -0.0279 -0.0811 -0.0231 -1.4012 -0.1279 -0.0774 -0.0241 -0.0744 -0.0375 -0.0241 -0.0482 -0.0816
S-586	mLockMode == InodeTree.LockMode.READ
T-586	lockMode == InodeTree.LockMode.READ
H-586	-0.06283397972583771	lockMode == InodeTree.LockMode.READ
D-586	-0.06283397972583771	lockMode == InodeTree.LockMode.READ
P-586	-0.0640 -0.0926 -0.0245 -0.0849 -0.0215 -0.0133 -0.0912 -0.0384 -0.1034 -0.0897 -0.0281 -0.1025
S-523	new RuntimeException("should execute connector.connect() first")
T-523	new IOException("should execute connector.connect() first")
H-523	-0.09530039876699448	new IOException("should execute connector.connect() first")
D-523	-0.09530039876699448	new IOException("should execute connector.connect() first")
P-523	-0.0557 -0.4175 -0.1002 -0.0443 -0.0744 -0.0091 -0.0748 -0.0554 -0.0526 -0.0609 -0.1140 -0.0848
S-754	Color.rgb888ToColor(color,colorInt)
T-754	Color.rgba8888ToColor(color,colorInt)
H-754	-0.06430880725383759	Color.rgba8888ToColor(color,colorInt)
D-754	-0.06430880725383759	Color.rgba8888ToColor(color,colorInt)
P-754	-0.0205 -0.0995 -0.1520 -0.0507 -0.0602 -0.1181 -0.0428 -0.0146 -0.0753 -0.0235 -0.0480 -0.0548 -0.0761
S-330	assertOpenEventually("responseLatch",responseLatch,5)
T-330	assertOpenEventually("responseLatch",responseLatch)
H-330	-0.138032928109169	assertOpenEventually("responseLatch",responseLatch)
D-330	-0.138032928109169	assertOpenEventually("responseLatch",responseLatch)
P-330	-0.0414 -0.0482 -0.0318 -0.0085 -0.0592 -0.0614 -0.0119 -0.5104 -0.1654 -0.0162 -0.6219 -0.0802
S-291	deploymentInfo.setDefaultEncoding(servletContainer.getDefaultEncoding())
T-291	d.setDefaultEncoding(servletContainer.getDefaultEncoding())
H-291	-0.07101255655288696	d.setDefaultEncoding(servletContainer.getDefaultEncoding())
D-291	-0.07101255655288696	d.setDefaultEncoding(servletContainer.getDefaultEncoding())
P-291	-0.2413 -0.1028 -0.0173 -0.0371 -0.0604 -0.0098 -0.0514 -0.0899 -0.0330 -0.0372 -0.0827 -0.0894
S-154	Bytes.toBytesBinary(tableNameOrRegionName)
T-154	Bytes.toBytes(tableNameOrRegionName)
H-154	-0.05473095551133156	Bytes.toBytes(tableNameOrRegionName)
D-154	-0.05473095551133156	Bytes.toBytes(tableNameOrRegionName)
P-154	-0.0257 -0.0744 -0.0738 -0.0674 -0.0576 -0.0282 -0.0682 -0.0292 -0.0323 -0.0532 -0.0589 -0.0878
S-50	view.getClusteredLayerInDegree(absNode)
T-50	view.getClusteredLayerDegree(absNode)
H-50	-0.04924551025032997	view.getClusteredLayerDegree(absNode)
D-50	-0.04924551025032997	view.getClusteredLayerDegree(absNode)
P-50	-0.0604 -0.0937 -0.0551 -0.0249 -0.0454 -0.0283 -0.0190 -0.0781 -0.0188 -0.0271 -0.0632 -0.0770
S-411	node1.checkTreeTypeAwareEqualsSilent(node2)
T-411	node1.isEquivalentToTyped(node2)
H-411	-0.05890447273850441	node1.isEquivalentToTyped(node2)
D-411	-0.05890447273850441	node1.isEquivalentToTyped(node2)
P-411	-0.0374 -0.0610 -0.0472 -0.0677 -0.0314 -0.0013 -0.1826 -0.0535 -0.0232 -0.0837
S-574	logger.info("Installing Filter {}",servletClassName)
T-574	logger.info("Installing Filter {}",filterName)
H-574	-0.09860414266586304	logger.fine("Installing Filter {}",servletClassName)
D-574	-0.09860414266586304	logger.fine("Installing Filter {}",servletClassName)
P-574	-0.0468 -0.0966 -0.3847 -0.0920 -0.0464 -0.2702 -0.0512 -0.0701 -0.0708 -0.0643 -0.0102 -0.0303 -0.0590 -0.0879
S-768	member.getType(beanDesc.bindingsForBeanType())
T-768	member.getType()
H-768	-0.32007476687431335	member.getTypeWithCoercions(beanDesc.bindingsForBeanType())
D-768	-0.32007476687431335	member.getTypeWithCoercions(beanDesc.bindingsForBeanType())
P-768	-0.9687 -0.0799 -0.1085 -3.5366 -0.0797 -0.0359 -0.0026 -0.1371 -0.0328 -0.0374 -0.0706 -0.0670 -0.0790 -0.0495 -0.0309 -0.0408 -0.0841
S-660	mock.expectedBodiesReceived("c","b","a")
T-660	mock.expectedBodiesReceivedInAnyOrder("c","b","a")
H-660	-0.05965360999107361	mock.expectedBodiesReceivedInAnyOrder("c","b","a")
D-660	-0.05965360999107361	mock.expectedBodiesReceivedInAnyOrder("c","b","a")
P-660	-0.0389 -0.0868 -0.0276 -0.0293 -0.0284 -0.0210 -0.0581 -0.0620 -0.0637 -0.0857 -0.1525 -0.0301 -0.0664 -0.0848
S-641	VARCHAR.createBlockBuilder(new BlockBuilderStatus(),1)
T-641	VARBINARY.createBlockBuilder(new BlockBuilderStatus(),1)
H-641	-0.08707305043935776	VARBINARY.createBlockBuilder(new BlockBuilderStatus(),1)
D-641	-0.08707305043935776	VARBINARY.createBlockBuilder(new BlockBuilderStatus(),1)
P-641	-0.0945 -0.2100 -0.0801 -0.0283 -0.0338 -0.1270 -0.0714 -0.0342 -0.0364 -0.0673 -0.0466 -0.0671 -0.2363 -0.0859
S-377	container.getTimeFormat().equals(TimeFormat.DATE)
T-377	container.getTimeFormat().equals(TimeFormat.DATE) || container.getTimeFormat().equals(TimeFormat.DATETIME)
H-377	-0.053825173527002335	container.getTimeFormat().equals(TimeFormat.DATE) || container.getTimeFormat().equals(TimeFormat.DATETIME)
D-377	-0.053825173527002335	container.getTimeFormat().equals(TimeFormat.DATE) || container.getTimeFormat().equals(TimeFormat.DATETIME)
P-377	-0.0218 -0.1052 -0.0380 -0.0281 -0.0635 -0.0341 -0.0518 -0.0324 -0.0280 -0.0718 -0.0520 -0.0875 -0.0691 -0.0299 -0.0830 -0.0336 -0.0229 -0.0323 -0.0092 -0.0452 -0.0393 -0.0274 -0.0866 -0.0485 -0.0528 -0.2055
S-213	streamTokenizer.ttype == StreamTokenizer.TT_WORD
T-213	streamTokenizer.ttype == StreamTokenizer.TT_WORD || streamTokenizer.ttype == '"'
H-213	-0.09285599738359451	streamTokenizer.ttype == StreamTokenizer.TT_WORD || streamTokenizer.ttype == '"'
D-213	-0.09285599738359451	streamTokenizer.ttype == StreamTokenizer.TT_WORD || streamTokenizer.ttype == '"'
P-213	-0.0157 -0.0194 -0.1347 -0.0695 -0.0401 -0.1217 -0.1293 -0.0199 -0.0897 -0.0187 -0.0961 -0.0194 -0.1386 -0.0254 -0.0303 -0.0769 -0.1903 -0.4902 -0.0346 -0.0434 -0.0023 -0.2367
S-460	Preconditions.checkNotNull(mBlockIdsOnTiers)
T-460	Preconditions.checkNotNull(mBlockIdsOnTiers,"mBlockIdsOnTiers")
H-460	-0.03441118448972702	Preconditions.checkNotNull(mBlockIdsOnTiers,"mBlockIdsOnTiers")
D-460	-0.03441118448972702	Preconditions.checkNotNull(mBlockIdsOnTiers,"mBlockIdsOnTiers")
P-460	-0.0225 -0.0788 -0.0333 -0.0151 -0.0753 -0.0113 -0.0205 -0.0205 -0.0408 -0.0689 -0.0164 -0.0283 -0.0067 -0.0295 -0.0248 -0.0244 -0.0516 -0.0243 -0.0217 -0.0736
S-735	String id=reader.getAttributeValue(null,"id");
T-735	Integer id=Integer.parseInt(reader.getAttributeValue(null,"id"));
H-735	-0.13877348601818085	Integer id=Integer.parseInt(reader.getAttributeValue(null,"id"));
D-735	-0.13877348601818085	Integer id=Integer.parseInt(reader.getAttributeValue(null,"id"));
P-735	-0.2386 -0.0886 -0.0810 -0.1691 -0.1088 -0.0218 -0.0857 -0.1044 -0.0817 -0.0288 -0.0523 -0.1171 -0.0433 -0.0294 -0.0797 -0.9456 -0.0831
S-732	getPath("InputPackageDeclarationDiffDirectoryAtParent.java")
T-732	getNonCompilablePath("InputPackageDeclarationDiffDirectoryAtParent.java")
H-732	-0.03634653240442276	getNonCompilablePath("InputPackageDeclarationDiffDirectoryAtParent.java")
D-732	-0.03634653240442276	getNonCompilablePath("InputPackageDeclarationDiffDirectoryAtParent.java")
P-732	-0.0285 -0.0028 -0.0024 -0.0086 -0.0264 -0.0703 -0.0343 -0.0397 -0.0120 -0.0273 -0.0401 -0.0356 -0.0284 -0.0735 -0.0438 -0.0507 -0.0936
S-265	target.directory("zk" + id + "data")
T-265	target.directory("zk" + id + "data",true)
H-265	-0.07162550091743469	target.directory("zk" + id + "data",true)
D-265	-0.07162550091743469	target.directory("zk" + id + "data",true)
P-265	-0.0489 -0.0943 -0.0404 -0.0377 -0.0186 -0.0690 -0.0530 -0.0619 -0.0468 -0.0455 -0.0608 -0.1535 -0.1236 -0.1201 -0.1003
S-92	GL20.glUniformMatrix3(location,transpose,value)
T-92	GL20.glUniformMatrix3fv(location,transpose,value)
H-92	-0.03767805173993111	GL20.glUniformMatrix3fv(location,transpose,value)
D-92	-0.03767805173993111	GL20.glUniformMatrix3fv(location,transpose,value)
P-92	-0.0172 -0.0186 -0.0092 -0.0112 -0.0399 -0.0449 -0.0412 -0.0515 -0.0257 -0.0574 -0.0114 -0.0549 -0.0287 -0.0653 -0.0881
S-437	routes.ExtractorsResource().list(input.getId())
T-437	routes.ExtractorsResource().create(input.getId())
H-437	-0.5809882283210754	routes.ExtractorsResource().list()
D-437	-0.5809882283210754	routes.ExtractorsResource().list()
P-437	-0.0092 -0.0856 -0.4502 -0.0158 -0.0365 -0.1398 -1.6446 -2.7758 -0.0712
S-687	sname.getParent().getSimpleName().substring(9)
T-687	sname.getParent().getSimpleName().substring(8)
H-687	-0.3021242320537567	sname.getParent().getSimpleName().substring(10)
D-687	-0.3021242320537567	sname.getParent().getSimpleName().substring(10)
P-687	-0.0941 -0.0789 -0.0747 -0.0579 -0.0651 -0.0647 -0.0169 -0.0783 -0.0917 -0.5698 -2.3562 -0.0773
S-286	GL20.glGetUniform(program,location,params)
T-286	GL20.glGetUniformiv(program,location,params)
H-286	-0.04151759669184685	GL20.glGetUniformfv(program,location,params)
D-286	-0.04151759669184685	GL20.glGetUniformfv(program,location,params)
P-286	-0.0164 -0.0210 -0.0092 -0.0646 -0.0091 -0.0162 -0.0678 -0.0179 -0.0712 -0.0428 -0.0499 -0.0373 -0.0724 -0.0854
S-64	GL20.glGetUniform(program,location,params)
T-64	GL20.glGetUniformiv(program,location,params)
H-64	-0.04151759669184685	GL20.glGetUniformfv(program,location,params)
D-64	-0.04151759669184685	GL20.glGetUniformfv(program,location,params)
P-64	-0.0164 -0.0210 -0.0092 -0.0646 -0.0091 -0.0162 -0.0678 -0.0179 -0.0712 -0.0428 -0.0499 -0.0373 -0.0724 -0.0854
S-55	AbstractRanking.refreshMinMax(this,graph)
T-55	DynamicAttributeRanking.refreshMinMax(this,graph)
H-55	-0.05071630701422691	DynamicAttributeRanking.refreshMinMax(this,graph)
D-55	-0.05071630701422691	DynamicAttributeRanking.refreshMinMax(this,graph)
P-55	-0.0055 -0.0353 -0.0199 -0.0447 -0.1017 -0.0310 -0.0456 -0.0472 -0.0569 -0.0703 -0.0615 -0.0296 -0.0754 -0.0852
S-791	routes.ExtractorsResource().list(input.getId())
T-791	routes.ExtractorsResource().create(input.getId())
H-791	-0.5809882283210754	routes.ExtractorsResource().list()
D-791	-0.5809882283210754	routes.ExtractorsResource().list()
P-791	-0.0092 -0.0856 -0.4502 -0.0158 -0.0365 -0.1398 -1.6446 -2.7758 -0.0712
S-780	log.debug("Error while closing command context",exception)
T-780	log.error("Error while closing command context",exception)
H-780	-0.06721696257591248	log.error("Error while closing command context",exception)
D-780	-0.06721696257591248	log.error("Error while closing command context",exception)
P-780	-0.0382 -0.0982 -0.1656 -0.0672 -0.0765 -0.0214 -0.0323 -0.0308 -0.0527 -0.0687 -0.0716 -0.0646 -0.0861
S-770	DefaultChannelFuture.setUseDeadLockChecker(false)
T-770	DefaultChannelFuture.setUseDeadLockChecker(true)
H-770	-0.1407926231622696	DefaultChannelFuture.setUseDeadLockChecker(true)
D-770	-0.1407926231622696	DefaultChannelFuture.setUseDeadLockChecker(true)
P-770	-0.0380 -0.0993 -0.0253 -0.0831 -0.0698 -0.1511 -1.0219 -0.0330 -0.0191 -0.0499 -0.0842 -0.0659 -0.0897
S-684	log.error("Error while closing command context",exception)
T-684	log.debug("Error while closing command context",exception)
H-684	-0.16573825478553772	log.debug("Error while closing command context",exception)
D-684	-0.16573825478553772	log.debug("Error while closing command context",exception)
P-684	-0.0344 -0.1053 -1.4268 -0.0682 -0.0849 -0.0202 -0.0362 -0.0282 -0.0520 -0.0680 -0.0731 -0.0688 -0.0885
S-75	this.thrown.equals("File must exist")
T-75	this.thrown.expectMessage("File must exist")
H-75	-0.04840195178985596	this.thrown.expectMessage("File must exist")
D-75	-0.04840195178985596	this.thrown.expectMessage("File must exist")
P-75	-0.0439 -0.1070 -0.0219 -0.0254 -0.1015 -0.0154 -0.0490 -0.0565 -0.0311 -0.0288 -0.0359 -0.0365 -0.0763
S-813	ConfigUtils.absoluteHealthCheckDir(stormConf)
T-813	ConfigUtils.absoluteStormLocalDir(stormConf)
H-813	-0.09839735925197601	ConfigUtils.absoluteStormLocalDir(stormConf)
D-813	-0.09839735925197601	ConfigUtils.absoluteStormLocalDir(stormConf)
P-813	-0.0257 -0.0431 -0.0911 -0.0273 -0.3125 -0.3869 -0.0097 -0.0615 -0.0291 -0.0514 -0.0593 -0.0831
S-191	HashMap<String,HashMap<String,ASTNode>>
T-191	LinkedHashMap<String,LinkedHashMap<String,ASTNode>>
H-191	-0.06329745054244995	LinkedHashMap<String,LinkedHashMap<String,ASTNode>>
D-191	-0.06329745054244995	LinkedHashMap<String,LinkedHashMap<String,ASTNode>>
P-191	-0.0201 -0.0725 -0.0727 -0.0589 -0.1489 -0.0200 -0.0861 -0.1141 -0.0546 -0.0100 -0.0251 -0.0531 -0.0870
S-817	Color.fromRGB(0x6689D3)
T-817	Color.fromRGB(0x51301A)
H-817	-0.21098098158836365	Color.fromRGB(0x6689D3)
D-817	-0.21098098158836365	Color.fromRGB(0x6689D3)
P-817	-0.0138 -0.1072 -0.0652 -0.0498 -0.0322 -0.2849 -1.4093 -0.1045 -0.0215 -0.0425 -0.3219 -0.0789
S-328	configureWebDotXmlAtmosphereHandler(sc)
T-328	configureWebDotXmlAtmosphereHandler(scFacade)
H-328	-0.23676347732543945	configureWebDotXmlAtmosphereHandler(sc)
D-328	-0.23676347732543945	configureWebDotXmlAtmosphereHandler(sc)
P-328	-0.0104 -0.0787 -0.7221 -0.0289 -0.1184 -0.0123 -0.0254 -0.0327 -0.1427 -0.0715 -1.5042 -0.0939
S-746	minZ != 0f && maxZ != 0f
T-746	minZ != 0f || maxZ != 0f
H-746	-0.1033334881067276	minZ != 0f && maxZ != 0f
D-746	-0.1033334881067276	minZ != 0f && maxZ != 0f
P-746	-0.0346 -0.2915 -0.0521 -0.0653 -0.0472 -0.3537 -0.0380 -0.0732 -0.0421 -0.0478 -0.0577 -0.1368
S-552	isFieldKept(uniqueField,input)
T-552	isFieldKept(input,uniqueField)
H-552	-0.35456356406211853	isFieldKept(input)
D-552	-0.35456356406211853	isFieldKept(input)
P-552	-0.1781 -0.0687 -0.2387 -0.0820 -0.0142 -0.0510 -1.7854 -0.6051 -0.1680
S-529	IRON_SWORD(267,1,59)
T-529	IRON_SWORD(267,1,250)
H-529	-0.17705069482326508	IRON_SWORD(266,59)
D-529	-0.17705069482326508	IRON_SWORD(266,59)
P-529	-0.0048 -0.0615 -0.1833 -0.0368 -0.0103 -0.1163 -0.3090 -0.9518 -0.1336 -0.0587 -0.0814
S-508	logger.debug("Removing: {}",r)
T-508	logger.trace("Removing: {}",r)
H-508	-0.07507478445768356	logger.trace("Removing: {}",r)
D-508	-0.07507478445768356	logger.trace("Removing: {}",r)
P-508	-0.0433 -0.0930 -0.2111 -0.0399 -0.0221 -0.0225 -0.0972 -0.0785 -0.0686 -0.0737 -0.0635 -0.0872
S-325	context.add("exceptionalMethod",123f)
T-325	context.add("exceptionalMethod",123.0f)
H-325	-0.21464891731739044	context.add("exceptionalMethod",123f)
D-325	-0.21464891731739044	context.add("exceptionalMethod",123f)
P-325	-0.0396 -0.0810 -0.0411 -0.0657 -0.0974 -0.0184 -0.0111 -0.2177 -1.7587 -0.0964 -0.0636 -0.0850
S-446	assertEquals(8,config.getMapConfigs().size())
T-446	assertEquals(6,config.getMapConfigs().size())
H-446	-0.18039679527282715	assertEquals(5,config.getMapConfigs().size())
D-446	-0.18039679527282715	assertEquals(5,config.getMapConfigs().size())
P-446	-0.0313 -1.4911 -0.0178 -0.0790 -0.0380 -0.0581 -0.0269 -0.0566 -0.0439 -0.0560 -0.0856
S-78	RexUtil.simplify(rexBuilder,node)
T-78	HiveRexUtil.simplify(rexBuilder,node)
H-78	-0.11383521556854248	HiveRexUtil.simplify(rexBuilder,node)
D-78	-0.11383521556854248	HiveRexUtil.simplify(rexBuilder,node)
P-78	-0.8888 -0.1122 -0.0032 -0.0243 -0.0840 -0.0340 -0.0379 -0.0464 -0.0133 -0.0535 -0.0943 -0.0282 -0.0871 -0.0865
S-65	p.getFileSystem(conf).delete(p)
T-65	p.getFileSystem(conf).delete(p,true)
H-65	-0.1794453263282776	p.getFileSystem(conf).delete(p,true)
D-65	-0.1794453263282776	p.getFileSystem(conf).delete(p,true)
P-65	-0.0560 -0.0915 -0.0448 -0.0162 -0.0968 -0.0233 -0.0610 -0.1947 -0.5037 -0.0831 -0.4792 -0.6380 -0.1307 -0.0932
S-668	@SuppressWarnings("unused") private final Object strongReference;
T-668	@SuppressWarnings("unused") private final WeakSafeReadWriteLock strongReference;
H-668	-0.038156669586896896	@SuppressWarnings("unused") private final WeakSafeReadWriteLock strongReference;
D-668	-0.038156669586896896	@SuppressWarnings("unused") private final WeakSafeReadWriteLock strongReference;
P-668	-0.0367 -0.0156 -0.0601 -0.0203 -0.0472 -0.0766 -0.0354 -0.0002 -0.0000 -0.0602 -0.0021 -0.0195 -0.0250 -0.0831 -0.0905
S-696	connection.subscribe(jedisPubSub,patterns)
T-696	connection.psubscribe(jedisPubSub,patterns)
H-696	-0.041699111461639404	connection.psubscribe(jedisPubSub,patterns)
D-696	-0.041699111461639404	connection.psubscribe(jedisPubSub,patterns)
P-696	-0.0631 -0.0880 -0.0008 -0.0071 -0.0004 -0.0772 -0.0528 -0.0055 -0.0110 -0.0565 -0.0486 -0.0142 -0.0723 -0.0863
S-209	new ScheduledJob(job,jobName,period)
T-209	new ScheduledJob(job,jobName,delay,period)
H-209	-0.07626595348119736	new ScheduledJob(job,jobName,delay,period)
D-209	-0.07626595348119736	new ScheduledJob(job,jobName,delay,period)
P-209	-0.0665 -0.0266 -0.0509 -0.0639 -0.0186 -0.0773 -0.0756 -0.0777 -0.0582 -0.1336 -0.0503 -0.1283 -0.1551 -0.0853
S-430	new S_Command("00FE30",20.0)
T-430	new S_Command("00FE30",1,20.0)
H-430	-0.08923254162073135	new S_Command("00FE30",1,20.0)
D-430	-0.08923254162073135	new S_Command("00FE30",1,20.0)
P-430	-0.0681 -0.0326 -0.1221 -0.0425 -0.0394 -0.0529 -0.0101 -0.0398 -0.0706 -0.2832 -0.2925 -0.0196 -0.0866
S-489	GL11.glGetFloat(pname,params)
T-489	GL11.glGetFloatv(pname,params)
H-489	-0.07232607901096344	GL11.glglGetFloatv(pname,params)
D-489	-0.07232607901096344	GL11.glglGetFloatv(pname,params)
P-489	-0.0128 -0.0244 -0.0103 -0.0652 -0.1942 -0.0352 -0.2503 -0.0619 -0.0504 -0.0515 -0.0569 -0.0489 -0.0707 -0.0799
S-49	new FlinkRuntimeException("Unexpected list element deserialization failure")
T-49	new FlinkRuntimeException("Unexpected list element deserialization failure",e)
H-49	-0.5409455299377441	new FlinkRuntimeException("Unexpected list element deserialization failure")
D-49	-0.5409455299377441	new FlinkRuntimeException("Unexpected list element deserialization failure")
P-49	-0.0728 -0.5146 -0.0180 -0.0489 -0.0517 -0.0160 -0.1070 -0.0653 -0.0618 -0.0165 -5.4353 -0.0834
S-719	this.fs.delete(filePath,false)
T-719	!this.fs.delete(filePath,false)
H-719	-0.06645329296588898	this.fs.delete(filePath,true)
D-719	-0.06645329296588898	this.fs.delete(filePath,true)
P-719	-0.0416 -0.0854 -0.0145 -0.0817 -0.0195 -0.0753 -0.0428 -0.0709 -0.1104 -0.0982 -0.0689 -0.0883
S-525	IDAUTHORITY_RETRY_COUNT_DEFAULT=3
T-525	IDAUTHORITY_RETRY_COUNT_DEFAULT=20
H-525	-0.07993432879447937	IDAUTHORITY_RETRY_COUNT_DEFAULT=4
D-525	-0.07993432879447937	IDAUTHORITY_RETRY_COUNT_DEFAULT=4
P-525	-0.0607 -0.0624 -0.0275 -0.1087 -0.0468 -0.0182 -0.0795 -0.0583 -0.0899 -0.0225 -0.2821 -0.1026
S-428	logger.debug("Removing: {}",r)
T-428	logger.trace("Removing: {}",r)
H-428	-0.07507478445768356	logger.trace("Removing: {}",r)
D-428	-0.07507478445768356	logger.trace("Removing: {}",r)
P-428	-0.0433 -0.0930 -0.2111 -0.0399 -0.0221 -0.0225 -0.0972 -0.0785 -0.0686 -0.0737 -0.0635 -0.0872
S-122	OpenmrsProfileWithoutTest1Module bean=applicationContext.getBean(OpenmrsProfileWithoutTest1Module.class);
T-122	OpenmrsProfileWithoutMissingModule bean=applicationContext.getBean(OpenmrsProfileWithoutMissingModule.class);
H-122	-0.1240803524851799	OpenmrsProfileWithoutMissingModule bean=applicationContext.getBean(OpenmrsProfileWithoutMissingModule.class);
D-122	-0.1240803524851799	OpenmrsProfileWithoutMissingModule bean=applicationContext.getBean(OpenmrsProfileWithoutMissingModule.class);
P-122	-0.0949 -0.0590 -0.0427 -0.0441 -0.0472 -0.5821 -0.0444 -0.0853 -0.0645 -0.0195 -0.0454 -0.0855 -0.0894 -0.1213 -0.0834 -0.0353 -0.0679 -0.0424 -0.0929 -0.0329 -1.0919 -0.0784 -0.1146 -0.0388 -0.0453 -0.0771
S-585	ImmutableSortedSet.of("p","br","li","dt","dd","td","hr","img","tr","th","td")
T-585	ImmutableSortedSet.of("br","li","dt","dd","hr","img","p","td","tr","th")
H-585	-0.14769046008586884	ImmutableSortedSet.of("p","br","li","dt","dd","td","hr","img","tr","th","td")
D-585	-0.14769046008586884	ImmutableSortedSet.of("p","br","li","dt","dd","td","hr","img","tr","th","td")
P-585	-0.0142 -0.0236 -0.0725 -0.0346 -0.1002 -0.0590 -0.0719 -0.0362 -0.0700 -0.0361 -0.0974 -0.0150 -0.0801 -0.0333 -0.0738 -0.0898 -0.0936 -0.1866 -0.0895 -0.0778 -0.1092 -0.0979 -0.1188 -0.0242 -0.0981 -0.0313 -2.2138 -0.0867
S-414	public final TFAgentStatMappter tFAgentStatMappter=new TFAgentStatMappter();
T-414	public final TFAgentStatMapper tFAgentStatMapper=new TFAgentStatMapper();
H-414	-0.28813570737838745	public final TFAgentStatMappter tFAgentStatMapper=new TFAgentStatMappter();
D-414	-0.28813570737838745	public final TFAgentStatMappter tFAgentStatMapper=new TFAgentStatMappter();
P-414	-0.0322 -0.0364 -0.1196 -0.0188 -0.0267 -0.0490 -0.2973 -0.3949 -0.0336 -0.2149 -0.0505 -0.0583 -0.0761 -4.9340 -0.0321 -0.0758 -0.0386 -0.0258 -0.0407 -0.0730 -0.1111 -0.2687 -0.0613 -0.0440 -0.0898
S-14	mSizeOnTier.containsKey(tierAlias) ? mSizeOnTier.get(tierAlias) : 0
T-14	mSizeOnTier.containsKey(tierAlias) ? mSizeOnTier.get(tierAlias) : 0L
H-14	-0.07543637603521347	mSizeOnTier.containsKey(tierAlias) ? mSizeOnTier.get(tierAlias) : 0
D-14	-0.07543637603521347	mSizeOnTier.containsKey(tierAlias) ? mSizeOnTier.get(tierAlias) : 0
P-14	-0.0817 -0.0534 -0.0214 -0.0069 -0.1043 -0.0232 -0.0187 -0.0884 -0.0511 -0.0295 -0.0298 -0.0597 -0.1002 -0.0394 -0.0459 -0.0213 -0.0066 -0.0849 -0.0697 -0.0804 -0.0522 -0.0203 -0.0327 -0.0594 -0.1135 -0.6308 -0.1114
S-146	UriBuilder.fromResource(StreamAlertConditionResource.class).path("{conditionId}").build(alertCondition.getId())
T-146	UriBuilder.fromResource(StreamAlertConditionResource.class).path("{conditionId}").build(stream.getId(),alertCondition.getId())
H-146	-0.1466243863105774	UriBuilder.fromResource(StreamAlertConditionResource.class).path("{conditionId}").build(streamid,alertCondition.getId())
D-146	-0.1466243863105774	UriBuilder.fromResource(StreamAlertConditionResource.class).path("{conditionId}").build(streamid,alertCondition.getId())
P-146	-0.0294 -0.0540 -0.0971 -0.0421 -0.0482 -0.0664 -0.0604 -0.1022 -0.0490 -0.0434 -0.0670 -0.0338 -0.0768 -0.0243 -0.0263 -0.1586 -0.0818 -0.0275 -0.0443 -0.1774 -0.9403 -0.7798 -0.4276 -0.1031 -0.0572 -0.1250 -0.1446 -0.0344 -0.4007 -0.0758
S-42	LOG.error("Failed to transit standby cluster to " + SyncReplicationState.DOWNGRADE_ACTIVE)
T-42	LOG.error("Failed to transit standby cluster to " + SyncReplicationState.DOWNGRADE_ACTIVE,e)
H-42	-0.15367808938026428	LOG.warn("Failed to transit standby cluster to " + SyncReplicationState.DOWNGRADE_ACTIVE)
D-42	-0.15367808938026428	LOG.warn("Failed to transit standby cluster to " + SyncReplicationState.DOWNGRADE_ACTIVE)
P-42	-0.0293 -0.1072 -0.6079 -0.0666 -0.0541 -0.0676 -0.5108 -0.0345 -0.2668 -0.0565 -0.0599 -0.0512 -0.0857 -0.0929 -0.2363 -0.0413 -0.0736 -0.0893 -0.0482 -0.0804 -0.0912 -0.5100 -0.1106 -0.1013 -0.5325 -0.0543 -0.0893
S-297	result.expectedBodiesReceived("A+C+E+G+I","B+D+F+H+J")
T-297	result.expectedBodiesReceivedInAnyOrder("A+C+E+G+I","B+D+F+H+J")
H-297	-0.05784071609377861	result.expectedBodiesReceivedInAnyOrder("A+C+E+G+I","B+D+F+H+J")
D-297	-0.05784071609377861	result.expectedBodiesReceivedInAnyOrder("A+C+E+G+I","B+D+F+H+J")
P-297	-0.0669 -0.0731 -0.0312 -0.0185 -0.0214 -0.0267 -0.0683 -0.0882 -0.0967 -0.0733 -0.0638 -0.0306 -0.0415 -0.0580 -0.0621 -0.0435 -0.1193 -0.0481 -0.1023 -0.0934 -0.0492 -0.0242 -0.0571 -0.0497 -0.0292 -0.0352 -0.0700 -0.0781
S-697	cluster.getTypeFactory().createSqlType(SqlTypeName.DECIMAL,bd.scale(),unscaled.toString().length())
T-697	cluster.getTypeFactory().createSqlType(SqlTypeName.DECIMAL,unscaled.toString().length(),bd.scale())
H-697	-0.1534263640642166	cluster.getTypeFactory().createSqlType(SqlTypeName.DECIMAL,bd.scale(),unscaled.toString().length(),null)
D-697	-0.1534263640642166	cluster.getTypeFactory().createSqlType(SqlTypeName.DECIMAL,bd.scale(),unscaled.toString().length(),null)
P-697	-0.0201 -0.0818 -0.0419 -0.0493 -0.0619 -0.3119 -0.0821 -0.0721 -0.0730 -0.0158 -0.0205 -0.0863 -0.0102 -0.0039 -0.0786 -0.0493 -0.1052 -0.0318 -0.1108 -0.1808 -0.0774 -0.0885 -0.0299 -0.0771 -0.0813 -0.1828 -2.2608 -0.0872 -0.0771
S-421	assertEquals(2,historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size())
T-421	assertEquals(3,historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size())
H-421	-0.09593324363231659	assertEquals(2,historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size())
D-421	-0.09593324363231659	assertEquals(2,historyService.createHistoricActivityInstanceQuery().processDefinitionId(processInstance.getProcessDefinitionId()).list().size())
P-421	-0.0251 -1.4153 -0.0084 -0.0306 -0.0749 -0.0199 -0.0334 -0.0114 -0.0211 -0.0625 -0.0507 -0.0865 -0.0348 -0.0096 -0.0570 -0.0510 -0.0780 -0.0772 -0.0583 -0.0493 -0.0059 -0.0389 -0.0671 -0.0652 -0.0375 -0.0406 -0.0800
S-95	testSame("asdf;","var asdf;",VarCheck.NAME_REFERENCE_IN_EXTERNS_ERROR,true)
T-95	testSame("asdf;","var asdf;",VarCheck.NAME_REFERENCE_IN_EXTERNS_ERROR)
H-95	-0.11228036880493164	testSame("asdf;","var asdf;",VarCheck.NAME_REFERENCE_IN_EXTERNS_ERROR,false)
D-95	-0.11228036880493164	testSame("asdf;","var asdf;",VarCheck.NAME_REFERENCE_IN_EXTERNS_ERROR,false)
P-95	-0.0904 -0.0447 -0.3040 -0.0496 -0.1508 -0.0304 -0.1178 -0.0377 -0.1419 -0.0336 -0.0307 -0.0867 -0.1035 -0.0716 -0.0076 -0.0740 -0.0648 -0.1079 -0.0597 -0.0095 -0.0481 -0.0993 -0.0282 -0.2034 -0.8052 -0.1357 -0.0949
S-674	ShrinkWrap.create(JavaArchive.class).addAsManifestResource(EmptyAsset.INSTANCE,"beans.xml")
T-674	ShrinkWrap.create(JavaArchive.class).addAsManifestResource("beans.xml")
H-674	-0.22978803515434265	ShrinkWrap.create(JavaArchive.class).addAsManifestResource(EmptyAsset.INSTANCE,"beans.xml",false)
D-674	-0.22978803515434265	ShrinkWrap.create(JavaArchive.class).addAsManifestResource(EmptyAsset.INSTANCE,"beans.xml",false)
P-674	-0.0499 -0.0073 -0.0276 -0.0817 -0.0339 -0.1004 -0.0378 -0.0357 -0.0820 -0.0630 -0.0697 -0.1746 -0.1258 -0.0852 -0.0316 -0.6880 -1.7290 -0.0312 -0.1121 -0.0302 -0.0454 -0.0055 -0.1154 -0.0307 -0.8430 -1.4043 -0.3116 -0.0816
S-806	log.warn("Unable to provision more workers. Current workerCount[%d] maximum workerCount[%d].")
T-806	log.warn("Unable to provision more workers. Current workerCount[%d] maximum workerCount[%d].",currValidWorkers,maxWorkerCount)
H-806	-0.05890051648020744	log.debug("Unable to provision more workers. Current workerCount[%d] maximum workerCount[%d].")
D-806	-0.05890051648020744	log.debug("Unable to provision more workers. Current workerCount[%d] maximum workerCount[%d].")
P-806	-0.0521 -0.0947 -0.1842 -0.0660 -0.0231 -0.0555 -0.1215 -0.0149 -0.0344 -0.0801 -0.0388 -0.0314 -0.0346 -0.0408 -0.0522 -0.0469 -0.0706 -0.0277 -0.0323 -0.0375 -0.0273 -0.0411 -0.0675 -0.0866 -0.0964 -0.0732
S-824	standardSearchRequest(query,IndexHelper.determineAffectedIndices(indexRangeService,deflector,range))
T-824	standardSearchRequest(query,IndexHelper.determineAffectedIndices(indexRangeService,deflector,range),range)
H-824	-0.05961061641573906	standardSearchRequest(query,IndexHelper.determineAffectedIndices(indexRangeService,deflector,range),range)
D-824	-0.05961061641573906	standardSearchRequest(query,IndexHelper.determineAffectedIndices(indexRangeService,deflector,range),range)
P-824	-0.0368 -0.0285 -0.0483 -0.0602 -0.0873 -0.0631 -0.0746 -0.0753 -0.0950 -0.0141 -0.0176 -0.0197 -0.0156 -0.0266 -0.0834 -0.0993 -0.0317 -0.0573 -0.0823 -0.0146 -0.0024 -0.0131 -0.0881 -0.0546 -0.0140 -0.0367 -0.3550 -0.0741
S-125	CsvReporter.forRegistry(registry).convertDurationsTo(getDurationUnit()).convertDurationsTo(getRateUnit())
T-125	CsvReporter.forRegistry(registry).convertDurationsTo(getDurationUnit()).convertRatesTo(getRateUnit())
H-125	-0.06615938991308212	CsvReporter.forRegistry(registry).convertDurationsTo(getDurationUnit()).convertRatesTo(getRateUnit())
D-125	-0.06615938991308212	CsvReporter.forRegistry(registry).convertDurationsTo(getDurationUnit()).convertRatesTo(getRateUnit())
P-125	-0.0048 -0.0175 -0.0804 -0.0466 -0.0255 -0.0577 -0.0180 -0.0741 -0.0251 -0.1640 -0.0395 -0.1293 -0.0536 -0.0453 -0.0311 -0.1172 -0.0571 -0.0775 -0.0767 -0.1671 -0.0500 -0.1291 -0.0388 -0.0489 -0.0791
S-123	server.getSegment(segment.getIdentifier()) != null && peon.getSegmentsToLoad().contains(segment)
T-123	server.getSegment(segment.getIdentifier()) != null || peon.getSegmentsToLoad().contains(segment)
H-123	-0.12321127951145172	server.getSegment(segment.getIdentifier()) != null && peon.getSegmentsToLoad().contains(segment)
D-123	-0.12321127951145172	server.getSegment(segment.getIdentifier()) != null && peon.getSegmentsToLoad().contains(segment)
P-123	-0.0863 -0.1687 -0.0808 -0.0354 -0.1063 -0.0098 -0.1251 -0.0564 -0.0182 -0.0762 -0.0497 -0.0417 -0.4668 -0.8491 -0.0221 -0.1011 -0.0687 -0.0308 -0.0085 -0.0697 -0.0847 -0.0825 -0.0095 -0.0679 -0.3642
S-200	julianDateFloor(range,(int)date + EPOCH_JULIAN,true)
T-200	julianDateFloor(range,(int)date + EPOCH_JULIAN,false)
H-200	-0.12502147257328033	julianDateFloor(range,(int)date + EPOCH_JULIAN,false)
D-200	-0.12502147257328033	julianDateFloor(range,(int)date + EPOCH_JULIAN,false)
P-200	-0.0298 -0.0267 -0.1221 -0.1191 -0.3874 -0.0794 -0.0280 -0.0555 -0.1359 -0.0738 -0.0555 -0.0913 -0.0515 -0.0870 -0.1699 -0.1184 -0.1000 -0.0789 -0.0221 -0.0453 -0.0148 -0.0820 -0.4520 -0.6106 -0.0884
S-825	scanFeatures(getCamelKarafFeatureUrl(),"camel-core","camel-spring","camel-test")
T-825	scanFeatures(getCamelKarafFeatureUrl(),"xml-specs-api","camel-core","camel-spring","camel-test")
H-825	-0.1745402067899704	scanFeatures(getCamelKarafFeatureUrl(),"camel-core","camel-spring","camel-test")
D-825	-0.1745402067899704	scanFeatures(getCamelKarafFeatureUrl(),"camel-core","camel-spring","camel-test")
P-825	-0.0385 -0.0386 -0.0770 -0.0462 -0.1805 -0.0429 -0.0760 -0.0355 -0.0215 -0.0608 -0.1366 -0.0942 -0.6788 -0.1451 -0.1001 -0.0732 -0.0468 -0.0863 -0.0057 -0.0885 -0.0525 -0.0953 -0.0563 -1.9868 -0.0996
S-702	Status.constructStatuses(get(getBaseURL() + "statuses/mentions.json",null,true))
T-702	Status.createStatuseList(get(getBaseURL() + "statuses/mentions.json",null,true))
H-702	-0.04939713701605797	Status.createStatuseList(get(getBaseURL() + "statuses/mentions.json",null,true))
D-702	-0.04939713701605797	Status.createStatuseList(get(getBaseURL() + "statuses/mentions.json",null,true))
P-702	-0.0174 -0.1099 -0.0271 -0.0607 -0.0238 -0.0238 -0.0682 -0.0606 -0.0698 -0.0572 -0.0207 -0.0236 -0.0635 -0.0559 -0.0758 -0.0084 -0.0550 -0.0137 -0.0083 -0.1046 -0.0208 -0.0671 -0.0530 -0.0651 -0.0586 -0.0331 -0.0882
S-744	Mono.just(entry.getKey()).and(entry.getValue().health().compose(this.timeoutCompose))
T-744	Mono.just(entry.getKey()).zipWith(entry.getValue().health().compose(this.timeoutCompose))
H-744	-0.08865705877542496	Mono.just(entry.getKey()).zipWith(entry.getValue().health().compose(this.timeoutCompose))
D-744	-0.08865705877542496	Mono.just(entry.getKey()).zipWith(entry.getValue().health().compose(this.timeoutCompose))
P-744	-0.0130 -0.1183 -0.0708 -0.0617 -0.0290 -0.0743 -0.0233 -0.0330 -0.1469 -0.0800 -0.1292 -0.0203 -0.0639 -0.0152 -0.0581 -0.0135 -0.0527 -0.8825 -0.0653 -0.0633 -0.0715 -0.0237 -0.0261 -0.0148 -0.0785 -0.0761
S-743	CsvReporter.forRegistry(registry).convertDurationsTo(getDurationUnit()).convertDurationsTo(getRateUnit())
T-743	CsvReporter.forRegistry(registry).convertDurationsTo(getDurationUnit()).convertRatesTo(getRateUnit())
H-743	-0.06615938991308212	CsvReporter.forRegistry(registry).convertDurationsTo(getDurationUnit()).convertRatesTo(getRateUnit())
D-743	-0.06615938991308212	CsvReporter.forRegistry(registry).convertDurationsTo(getDurationUnit()).convertRatesTo(getRateUnit())
P-743	-0.0048 -0.0175 -0.0804 -0.0466 -0.0255 -0.0577 -0.0180 -0.0741 -0.0251 -0.1640 -0.0395 -0.1293 -0.0536 -0.0453 -0.0311 -0.1172 -0.0571 -0.0775 -0.0767 -0.1671 -0.0500 -0.1291 -0.0388 -0.0489 -0.0791
S-434	@Override public ResponseImpl header(String name,Property property){ addHeader(name,property); return this; }
T-434	@Override public Response header(String name,Property property){ addHeader(name,property); return this; }
H-434	-0.05633002892136574	@Override public Response header(String name,Property property){ addHeader(name,property); return this; }
D-434	-0.05633002892136574	@Override public Response header(String name,Property property){ addHeader(name,property); return this; }
P-434	-0.0317 -0.0294 -0.0431 -0.0619 -0.0414 -0.0563 -0.0480 -0.1071 -0.0460 -0.0274 -0.0193 -0.0283 -0.2585 -0.0640 -0.0345 -0.0590 -0.0348 -0.0370 -0.0465 -0.0465 -0.0469 -0.0392 -0.0888
S-466	logger.debug("MyQ binding received command '{}' for item '{}'",command,itemName)
T-466	logger.trace("MyQ binding received command '{}' for item '{}'",command,itemName)
H-466	-0.04639725387096405	logger.trace("MyQ binding received command '{}' for item '{}'",command,itemName)
D-466	-0.04639725387096405	logger.trace("MyQ binding received command '{}' for item '{}'",command,itemName)
P-466	-0.0366 -0.1019 -0.0447 -0.0452 -0.0310 -0.0441 -0.0128 -0.0188 -0.0182 -0.0323 -0.0454 -0.0322 -0.0310 -0.0372 -0.0376 -0.0526 -0.0371 -0.0877 -0.0132 -0.0607 -0.0780 -0.0655 -0.0645 -0.0850
S-502	Status.constructStatuses(get(getBaseURL() + "statuses/friends_timeline.json",true))
T-502	Status.createStatuseList(get(getBaseURL() + "statuses/friends_timeline.json",true))
H-502	-0.04970473051071167	Status.createStatuseList(get(getBaseURL() + "statuses/friends_timeline.json",true))
D-502	-0.04970473051071167	Status.createStatuseList(get(getBaseURL() + "statuses/friends_timeline.json",true))
P-502	-0.0170 -0.1078 -0.0281 -0.0407 -0.0217 -0.0263 -0.0700 -0.0593 -0.0702 -0.0567 -0.0246 -0.0250 -0.0602 -0.0541 -0.0686 -0.0084 -0.0591 -0.0179 -0.1424 -0.0118 -0.0832 -0.0232 -0.0550 -0.0427 -0.0295 -0.0889
S-644	war.addAsWebInfResource(ClusteredWebTestCase.class.getPackage(),"web.xml")
T-644	war.setWebXML(ClusteredWebTestCase.class.getPackage(),"web.xml")
H-644	-0.05950236693024635	war.setWebXML(ClusteredWebTestCase.class.getPackage(),"web.xml")
D-644	-0.05950236693024635	war.setWebXML(ClusteredWebTestCase.class.getPackage(),"web.xml")
P-644	-0.0153 -0.0992 -0.0104 -0.1138 -0.0964 -0.0863 -0.0204 -0.0502 -0.0471 -0.0197 -0.0746 -0.0623 -0.0711 -0.0428 -0.0227 -0.0834 -0.0680 -0.0289 -0.1112 -0.0324 -0.0637 -0.0891
S-375	logger.info("Renamed " + instancesRenamed + " instances of "+ propsRenamed+ " properties.")
T-375	logger.fine("Renamed " + instancesRenamed + " instances of "+ propsRenamed+ " properties.")
H-375	-0.046556830406188965	logger.fine("Renamed " + instancesRenamed + " instances of "+ propsRenamed+ " properties.")
D-375	-0.046556830406188965	logger.fine("Renamed " + instancesRenamed + " instances of "+ propsRenamed+ " properties.")
P-375	-0.0247 -0.0947 -0.0382 -0.0676 -0.0721 -0.0110 -0.0190 -0.0581 -0.0521 -0.0150 -0.0292 -0.0296 -0.0539 -0.0694 -0.0213 -0.0763 -0.0313 -0.0087 -0.0217 -0.0299 -0.0622 -0.0770 -0.0317 -0.0849 -0.0843
S-52	database.FindProduct(node.getManufacturer(),node.getDeviceType(),node.getDeviceId())
T-52	database.FindProduct(node.getManufacturer(),node.getDeviceType(),node.getDeviceId(),node.getApplicationVersion())
H-52	-0.06642036885023117	database.FindProduct(node.getManufacturer(),node.getDeviceType(),node.getDeviceId(),node.getApplicationVersion())
D-52	-0.06642036885023117	database.FindProduct(node.getManufacturer(),node.getDeviceType(),node.getDeviceId(),node.getApplicationVersion())
P-52	-0.0341 -0.0899 -0.0347 -0.0249 -0.0882 -0.0551 -0.0830 -0.0793 -0.0176 -0.0138 -0.0827 -0.0600 -0.1026 -0.1032 -0.0363 -0.0532 -0.1300 -0.0598 -0.0899 -0.1228 -0.0487 -0.0975 -0.0553 -0.0380 -0.1126 -0.0037 -0.0440 -0.0848 -0.0803
S-282	LOG.info("Processing changes for pool " + poolName + ": "+ pools.get(poolName))
T-282	LOG.debug("Processing changes for pool " + poolName + ": "+ pools.get(poolName))
H-282	-0.06552503257989883	LOG.debug("Processing changes for pool " + poolName + ": "+ pools.get(poolName))
D-282	-0.06552503257989883	LOG.debug("Processing changes for pool " + poolName + ": "+ pools.get(poolName))
P-282	-0.0325 -0.0975 -0.3107 -0.0666 -0.0349 -0.0525 -0.0505 -0.0747 -0.0626 -0.0583 -0.0657 -0.0674 -0.0530 -0.0131 -0.0159 -0.0173 -0.0965 -0.0692 -0.0361 -0.0550 -0.0513 -0.0421 -0.0836
S-359	JavaConversions.asIterable(kafkaLog.logSegments(committedOffset,Long.MAX_VALUE))
T-359	JavaConversions.asJavaIterable(kafkaLog.logSegments(committedOffset,Long.MAX_VALUE))
H-359	-0.16635306179523468	JavaConversions.Iterable(kafkaLog.logSegments(committedOffset,Long.MAX_VALUE))
D-359	-0.16635306179523468	JavaConversions.Iterable(kafkaLog.logSegments(committedOffset,Long.MAX_VALUE))
P-359	-0.0108 -0.0951 -0.0222 -0.0766 -1.7096 -0.5329 -0.1537 -0.1082 -0.0803 -0.0315 -0.0251 -0.0723 -0.0291 -0.0629 -0.0644 -0.0780 -0.0977 -0.0181 -0.0854 -0.0364 -0.1884 -0.0813
S-19	LOGGER.log(Level.SEVERE,LocalizationMessages.ERROR_COMMITTING_OUTPUT_STREAM())
T-19	LOGGER.log(Level.SEVERE,LocalizationMessages.ERROR_COMMITTING_OUTPUT_STREAM(),e)
H-19	-0.06874203681945801	LOGGER.log(Level.SEVERE,LocalizationMessages.ERROR_COMMITTING_OUTPUT_STREAM(),e)
D-19	-0.06874203681945801	LOGGER.log(Level.SEVERE,LocalizationMessages.ERROR_COMMITTING_OUTPUT_STREAM(),e)
P-19	-0.0123 -0.0886 -0.0737 -0.0722 -0.0389 -0.0872 -0.0907 -0.0831 -0.0811 -0.0397 -0.0195 -0.0117 -0.0919 -0.0558 -0.0790 -0.0306 -0.0257 -0.1032 -0.0518 -0.1086 -0.0182 -0.2085 -0.1071 -0.0526 -0.0868
S-4	factory.getEmbdeddedServletContainer(exampleServletRegistration(),new FilterRegistrationBean(new ExampleFilter()))
T-4	factory.getEmbeddedServletContainer(exampleServletRegistration(),new FilterRegistrationBean(new ExampleFilter()))
H-4	-0.04998902976512909	factory.getEmbeddedServletContainer(exampleServletRegistration(),new FilterRegistrationBean(new ExampleFilter()))
D-4	-0.04998902976512909	factory.getEmbeddedServletContainer(exampleServletRegistration(),new FilterRegistrationBean(new ExampleFilter()))
P-4	-0.0300 -0.0877 -0.0630 -0.0195 -0.0323 -0.0972 -0.0276 -0.0470 -0.0138 -0.0920 -0.0458 -0.0443 -0.0241 -0.0425 -0.0706 -0.0429 -0.0448 -0.0393 -0.0515 -0.0839
S-478	expectQueryToFail("UserWith:Colon",ldapUserPassword,INVALID_CREDENTIALS_ERROR)
T-478	expectQueryToFail("UserWith:Colon",ldapUserPassword,MALFORMED_CREDENTIALS_ERROR)
H-478	-0.2276899516582489	expectQueryToFail("UserWith:Colon",ldapUserPassword,INVALID_CREDENTIALS_ERROR)
D-478	-0.2276899516582489	expectQueryToFail("UserWith:Colon",ldapUserPassword,INVALID_CREDENTIALS_ERROR)
P-478	-0.8618 -0.0393 -0.0801 -1.0474 -0.0422 -0.0592 -0.0894 -0.0627 -0.0240 -0.0426 -0.0701 -0.0122 -0.0389 -0.1775 -0.4500 -0.1334 -0.1625 -0.0322 -0.2385 -0.1255 -0.0259 -1.3396 -0.0820
S-481	DiagnosticGroups.registerGroup("functionParams",FunctionTypeBuilder.OPTIONAL_ARG_AT_END)
T-481	DiagnosticGroups.registerGroup("functionParams",FunctionTypeBuilder.INEXISTENT_PARAM,FunctionTypeBuilder.OPTIONAL_ARG_AT_END)
H-481	-0.14382636547088623	DiagnosticGroups.registerGroup("functionParams",FunctionTypeBuilder.OPTIONAL_ARG_AT_END)
D-481	-0.14382636547088623	DiagnosticGroups.registerGroup("functionParams",FunctionTypeBuilder.OPTIONAL_ARG_AT_END)
P-481	-0.0100 -0.0429 -0.0782 -0.0300 -0.0562 -0.0516 -0.0540 -0.0848 -0.3289 -0.1011 -0.0666 -0.0449 -0.1017 -0.0080 -0.0378 -0.0843 -0.2864 -0.0846 -0.1068 -0.0926 -0.0721 -1.3924 -0.0921
S-474	GL20.glUniformMatrix2(location,transpose,toFloatBuffer(value,offset,count << 2))
T-474	GL20.glUniformMatrix2fv(location,transpose,toFloatBuffer(value,offset,count << 2))
H-474	-0.03604233264923096	GL20.glUniformMatrix2fv(location,transpose,toFloatBuffer(value,offset,count << 2))
D-474	-0.03604233264923096	GL20.glUniformMatrix2fv(location,transpose,toFloatBuffer(value,offset,count << 2))
P-474	-0.0161 -0.0224 -0.0092 -0.0153 -0.0223 -0.0274 -0.0345 -0.0450 -0.0235 -0.0572 -0.0155 -0.0699 -0.0261 -0.0279 -0.0270 -0.0621 -0.0433 -0.0546 -0.0195 -0.0685 -0.0374 -0.0290 -0.0365 -0.0331 -0.0776
S-543	!resource.getAtmosphereResourceEvent().isClosedByApplication() && !resource.isCancelled()
T-543	!resource.getAtmosphereResourceEvent().isClosedByClient() && !resource.getAtmosphereResourceEvent().isClosedByApplication() && !resource.isCancelled()
H-543	-0.20800289511680603	!resource.getAtmosphereResourceEvent().isClosedByApplication() || !resource.isCancelled()
D-543	-0.20800289511680603	!resource.getAtmosphereResourceEvent().isClosedByApplication() || !resource.isCancelled()
P-543	-0.1135 -0.0308 -0.0888 -0.0577 -0.0219 -0.0106 -0.0113 -0.0286 -0.0192 -0.0810 -0.0587 -0.0927 -0.1491 -0.0901 -0.0893 -3.2532 -0.1563 -0.0237 -0.1078 -0.1005 -0.0196 -0.0571 -0.1228
S-635	getSsl(ClientAuth.NEED,"password","src/test/resources/test.jks")
T-635	getSsl(ClientAuth.NEED,"password","src/test/resources/test.jks","src/test/resources/test.jks")
H-635	-0.24330079555511475	getSsl(ClientAuth.NEED,"password","src/test/resources/test.jks",false)
D-635	-0.24330079555511475	getSsl(ClientAuth.NEED,"password","src/test/resources/test.jks",false)
P-635	-0.2197 -0.0521 -0.1708 -0.0498 -0.0437 -0.0720 -1.3303 -0.0535 -0.0564 -0.0342 -0.2135 -0.1580 -0.0429 -0.0998 -0.0777 -0.0351 -0.0538 -0.0800 -0.1216 -0.0954 -0.1354 -0.5217 -1.5672 -0.7130 -0.0850
S-645	factory.getEmbdeddedServletContainer(exampleServletRegistration(),new FilterRegistrationBean(new ExampleFilter()))
T-645	factory.getEmbeddedServletContainer(exampleServletRegistration(),new FilterRegistrationBean(new ExampleFilter()))
H-645	-0.04998902976512909	factory.getEmbeddedServletContainer(exampleServletRegistration(),new FilterRegistrationBean(new ExampleFilter()))
D-645	-0.04998902976512909	factory.getEmbeddedServletContainer(exampleServletRegistration(),new FilterRegistrationBean(new ExampleFilter()))
P-645	-0.0300 -0.0877 -0.0630 -0.0195 -0.0323 -0.0972 -0.0276 -0.0470 -0.0138 -0.0920 -0.0458 -0.0443 -0.0241 -0.0425 -0.0706 -0.0429 -0.0448 -0.0393 -0.0515 -0.0839
S-248	HttpRequest.put("http://localhost:8080/ejbws-example/SingletonEndpoint",message,10,SECONDS)
T-248	HttpRequest.post("http://localhost:8080/ejbws-example/SingletonEndpoint",message,10,SECONDS)
H-248	-0.11438310146331787	HttpRequest.post("http://localhost:8080/ejbws-example/SingletonEndpoint",message,10,SECONDS)
D-248	-0.11438310146331787	HttpRequest.post("http://localhost:8080/ejbws-example/SingletonEndpoint",message,10,SECONDS)
P-248	-0.0120 -0.1116 -0.9843 -0.1109 -0.0512 -0.0199 -0.0232 -0.0267 -0.0687 -0.0329 -0.0696 -0.0556 -0.0599 -0.0668 -0.0447 -0.0830 -0.0420 -0.0831 -0.4084 -0.0175 -0.0545 -0.0900
S-646	public DerivedBuilder setRealmPassword(String password){ realm().setPassword(password); return this; }
T-646	public Builder setRealmPassword(String password){ realm().setPassword(password); return this; }
H-646	-0.05705250799655914	public Builder setRealmPassword(String password){ realm().setPassword(password); return this; }
D-646	-0.05705250799655914	public Builder setRealmPassword(String password){ realm().setPassword(password); return this; }
P-646	-0.0310 -0.0076 -0.1049 -0.0266 -0.0705 -0.0548 -0.0747 -0.0966 -0.0299 -0.0248 -0.0573 -0.0831 -0.1171 -0.0668 -0.0166 -0.0399 -0.0540 -0.0565 -0.0396 -0.0454 -0.1005
S-28	configuration.addClientInterceptor(method,factory,InterceptorOrder.View.COMPONENT_DISPATCHER)
T-28	configuration.addViewInterceptor(method,factory,InterceptorOrder.View.COMPONENT_DISPATCHER)
H-28	-0.1568872630596161	configuration.addClientInterceptor(method,factory,InterceptorOrder.View.COMPONENT_DISPATCHER)
D-28	-0.1568872630596161	configuration.addClientInterceptor(method,factory,InterceptorOrder.View.COMPONENT_DISPATCHER)
P-28	-0.0463 -0.0947 -0.0387 -0.0875 -0.0300 -0.0695 -0.7538 -0.1054 -0.0863 -0.0953 -0.0117 -0.1383 -0.0858 -0.0727 -0.0783 -0.0815 -0.0871 -0.2170 -0.0127 -0.0554 -1.1249 -0.0787
S-372	mavenBundle("info.cukes","cucumber-jvm-deps","1.0.4-SNAPSHOT")
T-372	mavenBundle("info.cukes","cucumber-jvm-deps")
H-372	-0.2158825695514679	mavenBundle("info.cukes","cucumber-jvm-deps","1.0.4-SNAPSHOT")
D-372	-0.2158825695514679	mavenBundle("info.cukes","cucumber-jvm-deps","1.0.4-SNAPSHOT")
P-372	-0.6029 -0.0119 -0.0472 -0.1779 -0.0531 -0.3537 -0.0118 -0.1036 -0.1957 -0.0694 -0.0433 -0.0735 -0.0091 -0.0565 -0.0324 -0.1428 -0.2619 -0.0853 -0.0662 -0.2608 -2.0050 -0.0854
S-311	new SSL((short)0,(short)MIN_SSL_OPTIONS,(short)sslPort)
T-311	new SSL((short)MIN_SSL_OPTIONS,(short)0,(short)sslPort)
H-311	-0.2817179262638092	new SSL((short)MIN_SSL_OPTIONS,0,(short)sslPort)
D-311	-0.2817179262638092	new SSL((short)MIN_SSL_OPTIONS,0,(short)sslPort)
P-311	-0.0692 -0.0813 -0.0153 -0.0419 -0.0420 -0.0650 -0.1544 -0.0389 -0.1222 -0.0157 -0.0779 -3.0906 -0.3198 -0.0964 -0.0617 -0.2462 -0.0513 -0.6906 -0.0724
S-462	LOG.error("Cannot resolve the host name for " + regionAddress + " because of "+ e)
T-462	LOG.warn("Cannot resolve the host name for " + regionAddress + " because of "+ e)
H-462	-0.07320719957351685	LOG.warn("Cannot resolve the host name for " + regionAddress + " because of "+ e)
D-462	-0.07320719957351685	LOG.warn("Cannot resolve the host name for " + regionAddress + " because of "+ e)
P-462	-0.0277 -0.1105 -0.2621 -0.0655 -0.0221 -0.0691 -0.1030 -0.0427 -0.1007 -0.0339 -0.0943 -0.0826 -0.1132 -0.0312 -0.0822 -0.0546 -0.0203 -0.0636 -0.0406 -0.0451 -0.0640 -0.0814
S-512	defaults.jackson2Encoder(new Jackson2JsonEncoder(objectMapper,EMPTY_MIME_TYPES))
T-512	defaults.jackson2JsonEncoder(new Jackson2JsonEncoder(objectMapper,EMPTY_MIME_TYPES))
H-512	-0.05428645759820938	defaults.jackson2JsonEncoder(new Jackson2JsonEncoder(objectMapper,EMPTY_MIME_TYPES))
D-512	-0.05428645759820938	defaults.jackson2JsonEncoder(new Jackson2JsonEncoder(objectMapper,EMPTY_MIME_TYPES))
P-512	-0.0196 -0.0845 -0.0232 -0.0463 -0.1073 -0.0293 -0.0553 -0.0344 -0.0173 -0.0711 -0.0354 -0.0253 -0.0588 -0.1187 -0.0394 -0.0712 -0.0311 -0.0946 -0.0147 -0.0973 -0.0118 -0.0884 -0.0736
S-112	createMessageConsumer(session,destinationName,messageSelector,topic,durableSubscriptionId,true)
T-112	createMessageConsumer(session,destinationName,messageSelector,topic,durableSubscriptionId,false)
H-112	-0.14583683013916016	createMessageConsumer(session,destinationName,messageSelector,topic,durableSubscriptionId,false)
D-112	-0.14583683013916016	createMessageConsumer(session,destinationName,messageSelector,topic,durableSubscriptionId,false)
P-112	-0.0170 -0.0231 -0.0508 -0.0647 -0.0646 -0.0163 -0.1562 -0.0682 -0.1983 -0.0153 -0.0848 -0.7266 -0.1028 -0.1024 -0.1525 -0.2231 -0.0816 -0.1117 -0.2730 -0.4426 -0.0871
S-575	LOG.info("Creating short circuit output stream for block {} @ {}",blockId,address)
T-575	LOG.debug("Creating short circuit output stream for block {} @ {}",blockId,address)
H-575	-0.049672652035951614	LOG.debug("Creating short circuit output stream for block {} @ {}",blockId,address)
D-575	-0.049672652035951614	LOG.debug("Creating short circuit output stream for block {} @ {}",blockId,address)
P-575	-0.0214 -0.0994 -0.0163 -0.0565 -0.0125 -0.0302 -0.0330 -0.0569 -0.0293 -0.0576 -0.0300 -0.0454 -0.0370 -0.0424 -0.0708 -0.0349 -0.0677 -0.0704 -0.0917 -0.0588 -0.0808
S-1	obj.setContentEncoding(Mimetypes.MIMETYPE_BINARY_OCTET_STREAM)
T-1	obj.setContentType(Mimetypes.MIMETYPE_BINARY_OCTET_STREAM)
H-1	-0.05721551552414894	obj.setContentType(Mimetypes.MIMETYPE_BINARY_OCTET_STREAM)
D-1	-0.05721551552414894	obj.setContentType(Mimetypes.MIMETYPE_BINARY_OCTET_STREAM)
P-1	-0.0286 -0.0841 -0.0826 -0.0877 -0.0719 -0.0490 -0.0152 -0.0122 -0.1078 -0.0184 -0.0526 -0.0771 -0.0203 -0.1090 -0.0569 -0.0194 -0.0186 -0.0955 -0.0175 -0.0893 -0.0878
S-440	new GeneralDataCoding(false,false,MessageClass.CLASS1,Alphabet.ALPHA_DEFAULT)
T-440	new GeneralDataCoding(false,true,MessageClass.CLASS1,Alphabet.ALPHA_DEFAULT)
H-440	-0.06791310012340546	new GeneralDataCoding(false,true,MessageClass.CLASS1,Alphabet.ALPHA_DEFAULT)
D-440	-0.06791310012340546	new GeneralDataCoding(false,true,MessageClass.CLASS1,Alphabet.ALPHA_DEFAULT)
P-440	-0.0587 -0.0218 -0.0430 -0.0114 -0.0432 -0.3245 -0.0514 -0.1657 -0.0712 -0.0305 -0.0228 -0.0904 -0.0352 -0.0829 -0.0069 -0.0941 -0.0340 -0.0739 -0.0212 -0.0608 -0.0826
S-371	new RMNodeImpl(nodeId,rmContext,null,0,0,null,null,null)
T-371	new RMNodeImpl(nodeId,rmContext,null,0,0,null,null)
H-371	-0.35102421045303345	new RMNodeImpl(nodeId,null,null,null,null)
D-371	-0.35102421045303345	new RMNodeImpl(nodeId,null,null,null,null)
P-371	-0.0739 -0.0146 -0.0388 -0.0541 -0.0608 -0.1855 -0.0716 -0.0755 -1.6307 -0.0524 -1.9895 -0.1021 -0.0946 -0.5201 -0.0630 -0.8548 -0.0854
S-734	Wt.getSlice(slice).mult(Wt.getSlice(slice).transpose())
T-734	Wt.getSlice(slice).plus(Wt.getSlice(slice).transpose())
H-734	-0.05558191239833832	Wt.getSlice(slice).plus(Wt.getSlice(slice).transpose())
D-734	-0.05558191239833832	Wt.getSlice(slice).plus(Wt.getSlice(slice).transpose())
P-734	-0.0214 -0.0682 -0.0761 -0.0677 -0.0552 -0.0597 -0.0338 -0.0601 -0.0089 -0.0700 -0.0363 -0.0602 -0.0687 -0.0571 -0.0688 -0.0747 -0.0264 -0.0898 -0.0182 -0.0682 -0.0777
S-408	undertowHost.getServer().getListeners().get(0).getBinding().getValue().getPort()
T-408	undertowHost.getServer().getListeners().get(0).getBinding().getValue().getAbsolutePort()
H-408	-0.0683773010969162	undertowHost.getServer().getListeners().get(0).getBinding().getValue().getAbsolutePort()
D-408	-0.0683773010969162	undertowHost.getServer().getListeners().get(0).getBinding().getValue().getAbsolutePort()
P-408	-0.0453 -0.0027 -0.0769 -0.0753 -0.0483 -0.1129 -0.0487 -0.0546 -0.0870 -0.0724 -0.1322 -0.0173 -0.0775 -0.0487 -0.1178 -0.0240 -0.0748 -0.0358 -0.0976 -0.1109 -0.0734 -0.0700
S-497	Context.getEncounterService().canViewAllEncounterTypes(Context.getAuthenticatedUser())
T-497	!Context.getEncounterService().canViewAllEncounterTypes(Context.getAuthenticatedUser())
H-497	-0.17426326870918274	!Context.getEncounterService().canViewAllEncounterTypes(Context.getAuthenticatedUser())
D-497	-0.17426326870918274	!Context.getEncounterService().canViewAllEncounterTypes(Context.getAuthenticatedUser())
P-497	-2.2536 -0.4719 -0.0847 -0.0417 -0.0266 -0.0241 -0.0515 -0.1053 -0.0431 -0.1244 -0.0584 -0.0193 -0.0227 -0.0204 -0.0593 -0.0576 -0.0891 -0.0553 -0.0187 -0.0827 -0.0495 -0.0739
S-630	binder.bindConstant().annotatedWith(Names.named("servicePort")).to(8081)
T-630	binder.bindConstant().annotatedWith(Names.named("servicePort")).to(8089)
H-630	-0.1319568157196045	binder.bindConstant().annotatedWith(Names.named("servicePort")).to(8291)
D-630	-0.1319568157196045	binder.bindConstant().annotatedWith(Names.named("servicePort")).to(8291)
P-630	-0.0149 -0.0855 -0.0249 -0.0787 -0.0729 -0.0249 -0.0531 -0.0437 -0.0830 -0.0288 -0.0880 -0.0316 -0.0250 -0.1178 -0.0319 -0.0266 -0.0538 -0.3414 -1.2887 -0.1766 -0.0794
S-23	assertThat(converter.getSupportedMediaTypes()).containsExactly(MediaTypes.HAL_JSON)
T-23	assertThat(converter.getSupportedMediaTypes()).containsExactly(MediaTypes.HAL_JSON,MediaType.parseMediaType(MediaTypes.HAL_JSON_VALUE + ";charset=UTF-8"))
H-23	-0.1860087811946869	assertThat(converter.getSupportedMediaTypes()).containsAtLeast(MediaTypes.HAL_JSON)
D-23	-0.1860087811946869	assertThat(converter.getSupportedMediaTypes()).containsAtLeast(MediaTypes.HAL_JSON)
P-23	-0.0490 -0.1178 -0.6616 -0.0684 -0.0439 -0.0247 -0.2807 -0.0321 -0.0375 -0.0504 -1.6182 -0.1111 -0.1892 -0.0406 -0.0870 -0.0730 -0.0338 -0.0853 -0.1401 -0.0950 -0.0668
S-514	Configuration.getLong(PropertyKey.USER_NETWORK_NETTY_TIMEOUT_MS)
T-514	Configuration.getMs(PropertyKey.USER_NETWORK_NETTY_TIMEOUT_MS)
H-514	-0.05274088680744171	Configuration.getMs(PropertyKey.USER_NETWORK_NETTY_TIMEOUT_MS)
D-514	-0.05274088680744171	Configuration.getMs(PropertyKey.USER_NETWORK_NETTY_TIMEOUT_MS)
P-514	-0.0119 -0.0836 -0.0758 -0.0026 -0.0635 -0.0166 -0.0492 -0.0899 -0.0212 -0.0881 -0.0344 -0.1063 -0.0258 -0.0227 -0.1038 -0.0303 -0.0837 -0.0120 -0.0494 -0.0839
S-741	Assert.assertFalse(mFileSystem.getStatus(uri).getInMemoryPercentage() == 100)
T-741	Assert.assertTrue(mFileSystem.getStatus(uri).getInMemoryPercentage() == 100)
H-741	-0.047308918088674545	Assert.assertTrue(mFileSystem.getStatus(uri).getInMemoryPercentage() == 100)
D-741	-0.047308918088674545	Assert.assertTrue(mFileSystem.getStatus(uri).getInMemoryPercentage() == 100)
P-741	-0.0196 -0.0847 -0.0293 -0.0583 -0.0521 -0.0565 -0.0079 -0.0800 -0.0586 -0.0458 -0.0536 -0.0140 -0.0652 -0.0473 -0.0125 -0.0203 -0.0688 -0.0500 -0.0462 -0.0752
S-449	Assert.assertFalse(Boolean.valueOf(response.getFirstHeader("serialized").getValue()))
T-449	Assert.assertTrue(Boolean.valueOf(response.getFirstHeader("serialized").getValue()))
H-449	-0.0552867129445076	Assert.assertTrue(Boolean.valueOf(response.getFirstHeader("serialized").getValue()))
D-449	-0.0552867129445076	Assert.assertTrue(Boolean.valueOf(response.getFirstHeader("serialized").getValue()))
P-449	-0.0251 -0.0815 -0.0400 -0.0417 -0.0493 -0.0538 -0.0677 -0.0758 -0.0572 -0.0701 -0.0700 -0.0515 -0.1418 -0.0546 -0.0567 -0.0141 -0.0501 -0.0141 -0.0158 -0.0750
S-526	Assert.assertFalse(Boolean.valueOf(response.getFirstHeader("serialized").getValue()))
T-526	Assert.assertTrue(Boolean.valueOf(response.getFirstHeader("serialized").getValue()))
H-526	-0.0552867129445076	Assert.assertTrue(Boolean.valueOf(response.getFirstHeader("serialized").getValue()))
D-526	-0.0552867129445076	Assert.assertTrue(Boolean.valueOf(response.getFirstHeader("serialized").getValue()))
P-526	-0.0251 -0.0815 -0.0400 -0.0417 -0.0493 -0.0538 -0.0677 -0.0758 -0.0572 -0.0701 -0.0700 -0.0515 -0.1418 -0.0546 -0.0567 -0.0141 -0.0501 -0.0141 -0.0158 -0.0750
S-193	Configuration.getLong(PropertyKey.USER_NETWORK_NETTY_TIMEOUT_MS)
T-193	Configuration.getMs(PropertyKey.USER_NETWORK_NETTY_TIMEOUT_MS)
H-193	-0.05274088680744171	Configuration.getMs(PropertyKey.USER_NETWORK_NETTY_TIMEOUT_MS)
D-193	-0.05274088680744171	Configuration.getMs(PropertyKey.USER_NETWORK_NETTY_TIMEOUT_MS)
P-193	-0.0119 -0.0836 -0.0758 -0.0026 -0.0635 -0.0166 -0.0492 -0.0899 -0.0212 -0.0881 -0.0344 -0.1063 -0.0258 -0.0227 -0.1038 -0.0303 -0.0837 -0.0120 -0.0494 -0.0839
S-192	invocation.logger.warning("Asking if operation execution has been started: " + invocation)
T-192	invocation.logger.finest("Asking if operation execution has been started: " + invocation)
H-192	-0.050402577966451645	invocation.logger.finest("Asking if operation execution has been started: " + invocation)
D-192	-0.050402577966451645	invocation.logger.finest("Asking if operation execution has been started: " + invocation)
P-192	-0.0320 -0.0767 -0.0312 -0.1095 -0.0219 -0.0583 -0.0663 -0.0382 -0.0100 -0.0365 -0.0312 -0.0188 -0.0350 -0.0475 -0.0385 -0.0636 -0.0629 -0.0950 -0.0175 -0.0795 -0.0883
S-316	getGlobalProperty(OpenmrsConstants.GLOBAL_PROPERTY_LOCALE_ALLOWED_LIST)
T-316	getGlobalProperty(OpenmrsConstants.GLOBAL_PROPERTY_LOCALE_ALLOWED_LIST,"")
H-316	-0.058480389416217804	getGlobalProperty(OpenmrsConstants.GLOBAL_PROPERTY_LOCALE_ALLOWED_LIST,"")
D-316	-0.058480389416217804	getGlobalProperty(OpenmrsConstants.GLOBAL_PROPERTY_LOCALE_ALLOWED_LIST,"")
P-316	-0.0498 -0.0470 -0.1097 -0.0386 -0.0389 -0.0247 -0.0229 -0.0876 -0.0144 -0.1197 -0.0274 -0.1063 -0.1141 -0.0236 -0.1272 -0.0100 -0.0864 -0.0229 -0.0270 -0.0416 -0.0885
S-600	endFunction("get_column_statistics_by_partition: ",statsObj != null)
T-600	endFunction("get_column_statistics_by_partition: ",statsObj != null,null)
H-600	-0.08343997597694397	endFunction("get_column_statistics_by_partition: ",statsObj != null,null)
D-600	-0.08343997597694397	endFunction("get_column_statistics_by_partition: ",statsObj != null,null)
P-600	-0.1015 -0.0264 -0.0537 -0.0645 -0.1250 -0.1013 -0.0732 -0.0258 -0.0890 -0.0270 -0.0730 -0.0160 -0.0404 -0.0330 -0.0583 -0.0539 -0.0868 -0.0535 -0.4476 -0.0154 -0.1559 -0.1145
S-739	new PutBackupOperation(name,dataKey,dataValue,replicationInfo,true)
T-739	new PutBackupOperation(name,dataKey,dataValue,replicationInfo,true,false)
H-739	-0.08844345062971115	new PutBackupOperation(name,dataKey,dataValue,replicationInfo,false)
D-739	-0.08844345062971115	new PutBackupOperation(name,dataKey,dataValue,replicationInfo,false)
P-739	-0.0668 -0.0584 -0.0105 -0.0296 -0.0592 -0.0317 -0.0713 -0.1210 -0.1546 -0.0743 -0.0536 -0.0735 -0.0566 -0.1201 -0.0245 -0.0744 -0.0796 -0.0767 -0.4454 -0.0870
S-339	logger.warn("gave up waiting for query reply from device {}",m_address)
T-339	logger.debug("gave up waiting for query reply from device {}",m_address)
H-339	-0.05156948044896126	logger.debug("gave up waiting for query reply from device {}",m_address)
D-339	-0.05156948044896126	logger.debug("gave up waiting for query reply from device {}",m_address)
P-339	-0.0466 -0.0959 -0.0618 -0.0577 -0.0350 -0.0079 -0.0753 -0.0196 -0.0578 -0.0440 -0.0232 -0.0504 -0.0265 -0.0423 -0.0557 -0.0507 -0.0990 -0.0416 -0.0544 -0.0861
S-419	@Override public ResponseImpl description(String description){ throw new RuntimeException("Not implemented"); }
T-419	@Override public Response description(String description){ throw new RuntimeException("Not implemented"); }
H-419	-0.04898710176348686	@Override public Response description(String description){ throw new RuntimeException("Not implemented"); }
D-419	-0.04898710176348686	@Override public Response description(String description){ throw new RuntimeException("Not implemented"); }
P-419	-0.0362 -0.0290 -0.0393 -0.0583 -0.0187 -0.0456 -0.0324 -0.0226 -0.0315 -0.0434 -0.0863 -0.1218 -0.0504 -0.0600 -0.0666 -0.0214 -0.0403 -0.0434 -0.0837
S-141	Configuration.getLong(PropertyKey.USER_NETWORK_NETTY_TIMEOUT_MS)
T-141	Configuration.getMs(PropertyKey.USER_NETWORK_NETTY_TIMEOUT_MS)
H-141	-0.05274088680744171	Configuration.getMs(PropertyKey.USER_NETWORK_NETTY_TIMEOUT_MS)
D-141	-0.05274088680744171	Configuration.getMs(PropertyKey.USER_NETWORK_NETTY_TIMEOUT_MS)
P-141	-0.0119 -0.0836 -0.0758 -0.0026 -0.0635 -0.0166 -0.0492 -0.0899 -0.0212 -0.0881 -0.0344 -0.1063 -0.0258 -0.0227 -0.1038 -0.0303 -0.0837 -0.0120 -0.0494 -0.0839
S-568	location.belongTo(BlockStoreLocation.anyDirInTier(tierAlias))
T-568	location.equals(BlockStoreLocation.anyDirInTier(tierAlias))
H-568	-0.045836664736270905	location.equals(BlockStoreLocation.anyDirInTier(tierAlias))
D-568	-0.045836664736270905	location.equals(BlockStoreLocation.anyDirInTier(tierAlias))
P-568	-0.0332 -0.1522 -0.0777 -0.0705 -0.0183 -0.0178 -0.0187 -0.0710 -0.0246 -0.0238 -0.0344 -0.0094 -0.0522 -0.0469 -0.0144 -0.0146 -0.0430 -0.1023
S-24	new ClientBuilderImpl().serviceUrl(getPulsarBrokerUrl()).ioThreads(2)
T-24	new ClientBuilderImpl().serviceUrl(getPulsarBrokerUrl()).ioThreads(5)
H-24	-0.20816779136657715	new ClientBuilderImpl().serviceUrl(getPulsarBrokerUrl()).ioThreads(10)
D-24	-0.20816779136657715	new ClientBuilderImpl().serviceUrl(getPulsarBrokerUrl()).ioThreads(10)
P-24	-0.0676 -1.0375 -0.0346 -0.0313 -0.0972 -0.3449 -0.0602 -0.0488 -0.0346 -0.0964 -0.0174 -0.0191 -0.0158 -0.0728 -0.0493 -0.1167 -0.1271 -1.6123 -0.0717
S-708	LOG.warn("Promotion of block " + blockId + " failed.",ioe)
T-708	LOG.warn("Promotion of block " + blockId + " failed.")
H-708	-0.09176719188690186	LOG.warn("Promotion of block " + blockId + " failed.")
D-708	-0.09176719188690186	LOG.warn("Promotion of block " + blockId + " failed.")
P-708	-0.0280 -0.0985 -0.0645 -0.0800 -0.0326 -0.0213 -0.0766 -0.0166 -0.0510 -0.0605 -0.0175 -0.0593 -0.0487 -0.0312 -0.6998 -0.0823
S-774	LOG.warn("Promotion of block " + blockId + " failed.",ioe)
T-774	LOG.warn("Promotion of block " + blockId + " failed.")
H-774	-0.09176719188690186	LOG.warn("Promotion of block " + blockId + " failed.")
D-774	-0.09176719188690186	LOG.warn("Promotion of block " + blockId + " failed.")
P-774	-0.0280 -0.0985 -0.0645 -0.0800 -0.0326 -0.0213 -0.0766 -0.0166 -0.0510 -0.0605 -0.0175 -0.0593 -0.0487 -0.0312 -0.6998 -0.0823
S-454	GatherGettersAndSetterProperties.update(compiler,externs,root)
T-454	GatherGetterAndSetterProperties.update(compiler,externs,root)
H-454	-0.043916039168834686	GatherGetterAndSetterProperties.update(compiler,externs,root)
D-454	-0.043916039168834686	GatherGetterAndSetterProperties.update(compiler,externs,root)
P-454	-0.0278 -0.0256 -0.0114 -0.0169 -0.0353 -0.0381 -0.0921 -0.0399 -0.0611 -0.0349 -0.0657 -0.0142 -0.0167 -0.0465 -0.0545 -0.0479 -0.0708 -0.0912
S-476	GatherGettersAndSetterProperties.update(compiler,externs,root)
T-476	GatherGetterAndSetterProperties.update(compiler,externs,root)
H-476	-0.043916039168834686	GatherGetterAndSetterProperties.update(compiler,externs,root)
D-476	-0.043916039168834686	GatherGetterAndSetterProperties.update(compiler,externs,root)
P-476	-0.0278 -0.0256 -0.0114 -0.0169 -0.0353 -0.0381 -0.0921 -0.0399 -0.0611 -0.0349 -0.0657 -0.0142 -0.0167 -0.0465 -0.0545 -0.0479 -0.0708 -0.0912
S-124	(outputFolder + File.separator + modelFolder).replaceAll("/",File.separator)
T-124	(outputFolder + File.separator + modelFolder).replace("/",File.separator)
H-124	-0.06801214814186096	(outputFolder + File.separator + modelFolder).replace("/",File.separator)
D-124	-0.06801214814186096	(outputFolder + File.separator + modelFolder).replace("/",File.separator)
P-124	-0.0429 -0.0568 -0.0304 -0.0523 -0.0143 -0.0669 -0.0275 -0.0608 -0.0339 -0.0273 -0.0430 -0.1717 -0.0608 -0.1204 -0.0647 -0.1130 -0.0281 -0.1792 -0.0983
S-218	AstUtils.hasLeastOneAnnotation(classNode,"MessageEndpoint","EnableIntegrationPatterns")
T-218	AstUtils.hasAtLeastOneAnnotation(classNode,"MessageEndpoint","EnableIntegrationPatterns")
H-218	-0.04459340125322342	AstUtils.hasAtLeastOneAnnotation(classNode,"MessageEndpoint","EnableIntegrationPatterns")
D-218	-0.04459340125322342	AstUtils.hasAtLeastOneAnnotation(classNode,"MessageEndpoint","EnableIntegrationPatterns")
P-218	-0.0101 -0.0441 -0.0989 -0.0436 -0.0037 -0.0449 -0.0234 -0.0744 -0.0448 -0.0251 -0.0896 -0.0530 -0.0356 -0.0408 -0.0216 -0.0108 -0.0384 -0.0677 -0.0769
S-441	assertEquals(1,historyService.createHistoricActivityInstanceQuery().finished().list().size())
T-441	assertEquals(3,historyService.createHistoricActivityInstanceQuery().finished().list().size())
H-441	-0.0707608312368393	assertEquals(2,historyService.createHistoricActivityInstanceQuery().finished().list().size())
D-441	-0.0707608312368393	assertEquals(2,historyService.createHistoricActivityInstanceQuery().finished().list().size())
P-441	-0.0273 -0.5387 -0.0054 -0.0333 -0.0744 -0.0168 -0.0282 -0.0118 -0.0176 -0.0699 -0.0522 -0.0505 -0.0481 -0.0509 -0.0723 -0.0839 -0.0357 -0.0462 -0.0812
S-554	(outputFolder + File.separator + apiFolder).replaceAll("/",File.separator)
T-554	(outputFolder + File.separator + apiFolder).replace("/",File.separator)
H-554	-0.06729865819215775	(outputFolder + File.separator + apiFolder).replace("/",File.separator)
D-554	-0.06729865819215775	(outputFolder + File.separator + apiFolder).replace("/",File.separator)
P-554	-0.0411 -0.0514 -0.0295 -0.0495 -0.0180 -0.0670 -0.0326 -0.0578 -0.0636 -0.0281 -0.0427 -0.1231 -0.0467 -0.1190 -0.0908 -0.1112 -0.0315 -0.1767 -0.0981
S-686	meta.setContentEncoding(Mimetypes.MIMETYPE_OCTET_STREAM)
T-686	meta.setContentType(Mimetypes.MIMETYPE_OCTET_STREAM)
H-686	-0.056066419929265976	meta.setContentType(Mimetypes.MIMETYPE_OCTET_STREAM)
D-686	-0.056066419929265976	meta.setContentType(Mimetypes.MIMETYPE_OCTET_STREAM)
P-686	-0.0320 -0.0809 -0.0602 -0.0659 -0.0696 -0.0513 -0.0140 -0.0127 -0.1089 -0.0209 -0.0432 -0.0748 -0.1078 -0.0213 -0.0138 -0.0864 -0.0182 -0.0912 -0.0923
S-582	endpointA.expectedBodiesReceived("A blue car!","A blue car, again!")
T-582	endpointA.expectedBodiesReceivedInAnyOrder("A blue car!","A blue car, again!")
H-582	-0.1266852468252182	endpointB.expectedBodiesReceived("A blue car!","A blue car, again!")
D-582	-0.1266852468252182	endpointB.expectedBodiesReceived("A blue car!","A blue car, again!")
P-582	-0.0175 -0.7620 -0.0721 -0.0257 -0.0155 -0.0168 -0.7400 -0.0714 -0.0646 -0.0289 -0.0348 -0.0505 -0.0856 -0.0606 -0.0360 -0.0593 -0.0437 -0.1388 -0.0833
S-382	config.getBroadcasterFactory().lookup(a.broadcaster(),true)
T-382	config.getBroadcasterFactory().lookup(a.broadcaster(),path,true)
H-382	-0.06174105778336525	config.getBroadcasterFactory().lookup(a.broadcaster(),a.path(),true)
D-382	-0.06174105778336525	config.getBroadcasterFactory().lookup(a.broadcaster(),a.path(),true)
P-382	-0.0433 -0.0715 -0.0413 -0.0154 -0.0212 -0.0480 -0.0273 -0.0818 -0.0435 -0.0606 -0.0250 -0.1269 -0.0570 -0.0298 -0.0532 -0.0635 -0.0322 -0.1323 -0.0136 -0.0193 -0.1603 -0.1675 -0.0855
S-535	GL20.glUniform2(location,toIntBuffer(v,offset,count << 1))
T-535	GL20.glUniform2iv(location,toIntBuffer(v,offset,count << 1))
H-535	-0.03815295919775963	GL20.glUniform2iv(location,toIntBuffer(v,offset,count << 1))
D-535	-0.03815295919775963	GL20.glUniform2iv(location,toIntBuffer(v,offset,count << 1))
P-535	-0.0142 -0.0263 -0.0089 -0.0094 -0.0255 -0.0974 -0.0504 -0.0272 -0.0531 -0.0328 -0.0401 -0.0237 -0.0515 -0.0651 -0.0515 -0.0126 -0.0589 -0.0365 -0.0218 -0.0197 -0.0747
S-710	config.getBroadcasterFactory().lookup(m.broadcaster(),true)
T-710	config.getBroadcasterFactory().lookup(m.broadcaster(),path,true)
H-710	-0.11104922741651535	config.getBroadcasterFactory().lookup(m.broadcaster(),path,true)
D-710	-0.11104922741651535	config.getBroadcasterFactory().lookup(m.broadcaster(),path,true)
P-710	-0.0499 -0.0731 -0.0406 -0.0164 -0.0221 -0.0497 -0.0286 -0.0824 -0.0535 -0.0599 -0.0593 -0.1042 -0.0602 -0.0344 -0.0555 -0.0685 -0.7602 -0.4262 -0.0225 -0.1786 -0.0861
S-721	new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange)
T-721	new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange,exchange.getException())
H-721	-0.11322527378797531	new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange)
D-721	-0.11322527378797531	new CamelExchangeException("JettyClient failed with state " + exchangeState,exchange)
P-721	-0.0621 -0.1549 -0.0106 -0.0951 -0.1056 -0.1252 -0.2653 -0.0374 -0.0215 -0.0687 -0.0961 -0.0569 -0.0623 -0.0312 -0.0530 -0.0909 -0.1862 -0.5407 -0.0875
S-81	nlDataOutNodes != null & nlDataOutNodes.getLength() > 0
T-81	nlDataOutNodes != null && nlDataOutNodes.getLength() > 0
H-81	-0.05372317507863045	nlDataOutNodes != null && nlDataOutNodes.getLength() > 0
D-81	-0.05372317507863045	nlDataOutNodes != null && nlDataOutNodes.getLength() > 0
P-81	-0.0228 -0.1057 -0.0395 -0.0433 -0.0288 -0.0458 -0.1085 -0.0407 -0.0611 -0.0398 -0.0347 -0.0958 -0.0682 -0.0304 -0.0675 -0.0323 -0.0461 -0.0560
S-69	assertEquals(fStopwatch.runtime(MILLISECONDS),800d,250d)
T-69	assertEquals(800d,fStopwatch.runtime(MILLISECONDS),250d)
H-69	-0.0623079389333725	assertEquals(800d,fStopwatch.runtime(MILLISECONDS),250d)
D-69	-0.0623079389333725	assertEquals(800d,fStopwatch.runtime(MILLISECONDS),250d)
P-69	-0.0243 -0.1446 -0.0301 -0.0341 -0.0610 -0.0228 -0.0210 -0.0114 -0.0969 -0.0087 -0.0877 -0.0191 -0.0147 -0.2762 -0.0614 -0.0649 -0.0509 -0.0916
S-622	!WebSocketProtocolStream.class.isAssignableFrom(webSocketProtocol.getClass())
T-622	WebSocketProtocolStream.class.isAssignableFrom(webSocketProtocol.getClass())
H-622	-0.2312525361776352	!WebSocketProtocolStream.class.isAssignableFrom(webSocketProtocol.getClass())
D-622	-0.2312525361776352	!WebSocketProtocolStream.class.isAssignableFrom(webSocketProtocol.getClass())
P-622	-0.8410 -0.0254 -0.1419 -0.0420 -0.0728 -0.0766 -0.1121 -0.1516 -0.0065 -0.0791 -0.0615 -0.0185 -0.0238 -0.0534 -0.0882 -0.0496 -0.1241 -2.1945
S-194	new DefaultPropertyNamePatternsMatcher(delimeters,"aaa","bbbb","ccccc")
T-194	new DefaultPropertyNamePatternsMatcher(delimiters,"aaa","bbbb","ccccc")
H-194	-0.13275490701198578	new DefaultPropertyNamePatternsMatcher(delimiters,"aaa","bb","ccccc")
D-194	-0.13275490701198578	new DefaultPropertyNamePatternsMatcher(delimiters,"aaa","bb","ccccc")
P-194	-0.0670 -0.0314 -0.0127 -0.0267 -0.0129 -0.1027 -0.0053 -0.1150 -0.0814 -0.0288 -0.0748 -0.0083 -1.4010 -0.0501 -0.0181 -0.1403 -0.0804
S-305	removeBlockInternal(sessionId,blockId,BlockStoreLocation.anyTier())
T-305	removeBlock(sessionId,blockId,BlockStoreLocation.anyTier())
H-305	-0.09222858399152756	removeBlock(sessionId,blockId,BlockStoreLocation.anyTier())
D-305	-0.09222858399152756	removeBlock(sessionId,blockId,BlockStoreLocation.anyTier())
P-305	-0.0697 -0.0237 -0.0661 -0.0199 -0.0891 -0.0662 -0.0240 -0.1372 -0.0846 -0.0203 -0.0223 -0.0228 -0.1172 -0.0268 -0.0241 -0.6675 -0.0864
S-204	Math.min(RETRY_INTERVAL,timeout.timeLeft().toMillis())
T-204	Math.min(retryIntervalMillis,timeout.timeLeft().toMillis())
H-204	-0.06393420696258545	Math.max(RETRY_INTERVAL,timeout.timeLeft().toMillis())
D-204	-0.06393420696258545	Math.max(RETRY_INTERVAL,timeout.timeLeft().toMillis())
P-204	-0.0215 -0.0767 -0.0370 -0.0496 -0.0216 -0.0198 -0.0905 -0.0321 -0.0521 -0.0103 -0.0946 -0.1530 -0.2588 -0.0438 -0.0363 -0.0261 -0.0484 -0.0783
S-103	exchange.addRequestHeader(HttpHeaders.AUTHORIZATION,"OAuth " + currentToken)
T-103	exchange.setRequestHeader(HttpHeaders.AUTHORIZATION,"OAuth " + currentToken)
H-103	-0.043432217091321945	exchange.setRequestHeader(HttpHeaders.AUTHORIZATION,"OAuth " + currentToken)
D-103	-0.043432217091321945	exchange.setRequestHeader(HttpHeaders.AUTHORIZATION,"OAuth " + currentToken)
P-103	-0.0210 -0.0816 -0.0139 -0.0437 -0.0967 -0.0197 -0.0175 -0.0933 -0.0030 -0.0163 -0.0383 -0.0174 -0.0506 -0.0674 -0.0110 -0.0561 -0.0908
S-709	addKeys(externalClasses,DATE,"org.joda.time.LocalDate")
T-709	addKeys(externalClasses,DATE,"org.joda.time.LocalDate","java.time.LocalDate")
H-709	-0.25738346576690674	addKeys(externalClasses,DATE,"java.time.LocalDate")
D-709	-0.25738346576690674	addKeys(externalClasses,DATE,"java.time.LocalDate")
P-709	-0.1076 -0.0822 -0.0618 -0.0627 -0.0295 -0.0950 -0.0433 -0.3765 -2.1253 -0.0824 -0.0196 -0.0684 -0.0113 -0.6081 -0.0870
S-47	request.getContentType().equals("application/x-www-form-urlencoded")
T-47	request.getContentType().startsWith("application/x-www-form-urlencoded")
H-47	-0.07369250059127808	request.getContentType().startsWith("application/x-www-form-urlencoded")
D-47	-0.07369250059127808	request.getContentType().startsWith("application/x-www-form-urlencoded")
P-47	-0.0388 -0.0885 -0.0580 -0.0153 -0.1523 -0.1955 -0.0612 -0.0512 -0.0469 -0.0866 -0.0831 -0.0293 -0.0741 -0.0325 -0.0940 -0.0071 -0.0850 -0.1270
S-769	Nd4j.getAffinityManager().getDeviceForThread(Thread.currentThread())
T-769	Nd4j.getAffinityManager().getDeviceForCurrentThread()
H-769	-0.09609968960285187	Nd4j.getAffinityManager().getDeviceForCurrentThread()
D-769	-0.09609968960285187	Nd4j.getAffinityManager().getDeviceForCurrentThread()
P-769	-0.0141 -0.0612 -0.0206 -0.0755 -0.0673 -0.0137 -0.0265 -0.0827 -0.0895 -0.0467 -0.3340 -0.0475 -0.3672 -0.1134 -0.0817
S-174	factory.get(sResultWildcard,NO_ANNOTATIONS,retrofit)
T-174	factory.get(mResultWildcard,NO_ANNOTATIONS,retrofit)
H-174	-0.061199530959129333	factory.get(fResultWildcard,NO_ANNOTATIONS,retrofit)
D-174	-0.061199530959129333	factory.get(fResultWildcard,NO_ANNOTATIONS,retrofit)
P-174	-0.0300 -0.0894 -0.0604 -0.0662 -0.2921 -0.0509 -0.0084 -0.0682 -0.0261 -0.0969 -0.0252 -0.0117 -0.0110 -0.0637 -0.0273 -0.0140 -0.0704 -0.0898
S-301	assertEquals(5,AccessControlLists.getTablePermissions(conf,TEST_TABLE).size())
T-301	assertEquals(4,AccessControlLists.getTablePermissions(conf,TEST_TABLE).size())
H-301	-0.12178870290517807	assertEquals(4,AccessControlLists.getTablePermissions(conf,TEST_TABLE).size())
D-301	-0.12178870290517807	assertEquals(4,AccessControlLists.getTablePermissions(conf,TEST_TABLE).size())
P-301	-0.0178 -1.2421 -0.0035 -0.0160 -0.0798 -0.0517 -0.0516 -0.0636 -0.0608 -0.0294 -0.0351 -0.1441 -0.1059 -0.0399 -0.0764 -0.0404 -0.0495 -0.0846
S-656	Assert.assertEquals(masterAddress,new InetSocketAddress("RemoteMaster1",10000))
T-656	Assert.assertEquals(new InetSocketAddress("RemoteMaster1",10000),masterAddress)
H-656	-0.18407034873962402	Assert.assertEquals(new InetSocketAddress("RemoteMaster1",6000)
D-656	-0.18407034873962402	Assert.assertEquals(new InetSocketAddress("RemoteMaster1",6000)
P-656	-0.0159 -0.0820 -0.0390 -0.0447 -0.1607 -0.0224 -0.0190 -0.0125 -0.0403 -0.0447 -0.0343 -0.2531 -1.7099 -0.2041 -0.0785
S-718	logger.trace("Receive queue TAKE: Length={}",recvQueue.size())
T-718	logger.debug("Receive queue TAKE: Length={}",recvQueue.size())
H-718	-0.04852142557501793	logger.debug("Receive queue TAKE: Length={}",recvQueue.size())
D-718	-0.04852142557501793	logger.debug("Receive queue TAKE: Length={}",recvQueue.size())
P-718	-0.0277 -0.0970 -0.0117 -0.0892 -0.0752 -0.0733 -0.0171 -0.0090 -0.0672 -0.0218 -0.0204 -0.0181 -0.0249 -0.0316 -0.0996 -0.0421 -0.0649 -0.0827
S-766	warnings.append(LocalizationMessages.HINT_MSG(error.getMessage()))
T-766	hints.append(LocalizationMessages.HINT_MSG(error.getMessage()))
H-766	-0.044596631079912186	hints.append(LocalizationMessages.HINT_MSG(error.getMessage()))
D-766	-0.044596631079912186	hints.append(LocalizationMessages.HINT_MSG(error.getMessage()))
P-766	-0.0018 -0.0834 -0.0334 -0.0504 -0.0265 -0.0212 -0.0145 -0.0831 -0.0541 -0.0264 -0.0805 -0.0152 -0.0567 -0.0366 -0.0829 -0.0249 -0.0257 -0.0854
S-195	factory.get(sResponseWildcard,NO_ANNOTATIONS,retrofit)
T-195	factory.get(mResponseWildcard,NO_ANNOTATIONS,retrofit)
H-195	-0.06425409018993378	factory.get(fResponseWildcard,NO_ANNOTATIONS,retrofit)
D-195	-0.06425409018993378	factory.get(fResponseWildcard,NO_ANNOTATIONS,retrofit)
P-195	-0.0319 -0.0886 -0.0596 -0.0687 -0.3304 -0.0556 -0.0131 -0.0668 -0.0266 -0.1015 -0.0279 -0.0129 -0.0108 -0.0653 -0.0225 -0.0125 -0.0714 -0.0904
S-98	chain.filter(exchange).compose((call) -> filter(exchange,call))
T-98	chain.filter(exchange).transformDeferred((call) -> filter(exchange,call))
H-98	-0.04200221598148346	chain.filter(exchange).transformDeferred((call) -> filter(exchange,call))
D-98	-0.04200221598148346	chain.filter(exchange).transformDeferred((call) -> filter(exchange,call))
P-98	-0.0232 -0.0700 -0.0374 -0.0690 -0.0089 -0.0647 -0.0812 -0.0138 -0.0482 -0.0252 -0.0371 -0.0112 -0.0559 -0.0664 -0.0080 -0.0383 -0.0149 -0.0446 -0.0801
S-812	StringUtils.hasLength(secretQuestion) || StringUtils.hasLength(secretAnswer)
T-812	StringUtils.hasLength(secretQuestion) && StringUtils.hasLength(secretAnswer)
H-812	-0.16046567261219025	StringUtils.hasLength(secretQuestion) || StringUtils.hasLength(secretAnswer) || StringUtils.hasLength(secretAnswer)
D-812	-0.16046567261219025	StringUtils.hasLength(secretQuestion) || StringUtils.hasLength(secretAnswer) || StringUtils.hasLength(secretAnswer)
P-812	-0.0093 -0.0657 -0.0210 -0.0406 -0.0515 -0.0247 -0.5207 -0.0752 -0.2652 -0.0226 -0.0809 -0.0193 -0.0681 -0.0683 -0.0216 -0.0056 -0.1124 -0.8236 -0.0238 -0.0659 -0.0379 -0.5768 -0.0925 -0.1041 -0.2644 -0.6531 -0.2178
S-137	finishChannel(channel.getPipeline().getContext(NettyAsyncHttpProvider.class))
T-137	markChannelNotReadable(channel.getPipeline().getContext(NettyAsyncHttpProvider.class))
H-137	-0.21284154057502747	finishChannel(channel.getPipeline().getContext(NettyAsyncHttpProvider.class))
D-137	-0.21284154057502747	finishChannel(channel.getPipeline().getContext(NettyAsyncHttpProvider.class))
P-137	-1.6995 -0.3936 -0.3540 -0.1791 -0.1329 -0.0527 -0.0238 -0.0370 -0.0121 -0.1105 -0.0382 -0.0994 -0.0229 -0.0418 -0.0841 -0.0512 -0.4027 -0.0959
S-580	Class.forName(mUfsClz).getConstructor(String.class)
T-580	Class.forName(mUfsClz).getConstructor(String.class,TachyonConf.class)
H-580	-0.11459725350141525	Class.forName(mUfsClz).getConstructor()
D-580	-0.11459725350141525	Class.forName(mUfsClz).getConstructor()
P-580	-0.0372 -0.0716 -0.0167 -0.0763 -0.0624 -0.0453 -0.0181 -0.0457 -0.0590 -0.0501 -0.0657 -0.0278 -0.9474 -0.0810
S-438	createMessageConsumer(session,destinationName,messageSelector,true,null,true)
T-438	createMessageConsumer(session,destinationName,messageSelector,true,null)
H-438	-0.12626034021377563	createMessageConsumer(session,destinationName,messageSelector,false,null,true)
D-438	-0.12626034021377563	createMessageConsumer(session,destinationName,messageSelector,false,null,true)
P-438	-0.0134 -0.0231 -0.0519 -0.0491 -0.0617 -0.0146 -0.1357 -0.0733 -0.1156 -0.0168 -0.0996 -0.6278 -0.0615 -0.0697 -0.2795 -0.1195 -0.3654 -0.0945
S-186	logger.trace("Trying to map {} to {}",t,path)
T-186	logger.debug("Trying to map {} to {}",t,path)
H-186	-0.23703633248806	logger.trace("Trying to map {} to {}",t,path,true)
D-186	-0.23703633248806	logger.trace("Trying to map {} to {}",t,path,true)
P-186	-0.0390 -0.1019 -0.0846 -0.0566 -0.0314 -0.0293 -0.0568 -0.0499 -0.0416 -0.0492 -0.0700 -0.1029 -0.1504 -0.1735 -0.4092 -0.2416 -2.6193 -0.1030 -0.0934
S-351	triggerManager.getRules(CHANGE,item,newState,oldState)
T-351	triggerManager.getRules(CHANGE,item,oldState,newState)
H-351	-0.21975021064281464	triggerManager.getRules(CHANGE,item,newState,oldState)
D-351	-0.21975021064281464	triggerManager.getRules(CHANGE,item,newState,oldState)
P-351	-0.0326 -0.0180 -0.0843 -0.0621 -0.1263 -0.1300 -0.1359 -0.0632 -0.0843 -0.0816 -0.1421 -0.0738 -0.0578 -0.0771 -0.0618 -2.4146 -0.0902
S-547	ProcedureTestingUtility.waitNoProcedureRunning(master.getMasterProcedureExecutor())
T-547	ProcedureTestingUtility.waitAllProcedures(master.getMasterProcedureExecutor())
H-547	-0.0396595224738121	ProcedureTestingUtility.waitAllProcedures(master.getMasterProcedureExecutor())
D-547	-0.0396595224738121	ProcedureTestingUtility.waitAllProcedures(master.getMasterProcedureExecutor())
P-547	-0.0099 -0.0273 -0.0075 -0.0822 -0.0459 -0.0215 -0.0363 -0.0103 -0.0584 -0.0173 -0.0793 -0.0539 -0.0262 -0.0246 -0.0266 -0.0624 -0.0847
S-18	assertEquals(id3,new Twitter(id3,pass3).verifyCredentials().getName())
T-18	assertEquals(id1,new Twitter(id3,pass3).verifyCredentials().getName())
H-18	-0.21387405693531036	assertEquals(id4,new Twitter(id3,pass3).verifyCredentials().getName())
D-18	-0.21387405693531036	assertEquals(id4,new Twitter(id3,pass3).verifyCredentials().getName())
P-18	-0.0204 -0.3516 -0.1551 -0.7284 -0.0169 -0.7878 -0.0707 -0.0722 -0.1128 -0.0400 -0.8711 -0.0464 -0.1250 -0.0718 -0.0274 -0.0546 -0.0837
S-713	assertEquals(model.getProperties().get(NAME).getType(),"string")
T-713	assertEquals("string",model.getProperties().get(NAME).getType())
H-713	-0.10815739631652832	assertEquals("string",model.getProperties().get(NAME).getType())
D-713	-0.10815739631652832	assertEquals("string",model.getProperties().get(NAME).getType())
P-713	-0.0318 -0.0601 -0.7729 -0.0157 -0.0589 -0.0857 -0.0614 -0.0340 -0.0550 -0.0612 -0.0947 -0.1029 -0.0659 -0.0390 -0.1072 -0.0839
S-704	assertThat(page1reverse.pagination().getGlobalTotal()).isEqualTo(7)
T-704	assertThat(page1reverse.pagination().getGlobalTotal()).isEqualTo(5)
H-704	-0.05816143751144409	assertThat(page1reverse.pagination().getGlobalTotal()).isEqualTo(5)
D-704	-0.05816143751144409	assertThat(page1reverse.pagination().getGlobalTotal()).isEqualTo(5)
P-704	-0.0244 -0.0838 -0.0312 -0.1168 -0.1653 -0.0700 -0.0094 -0.0721 -0.0632 -0.0232 -0.0756 -0.0359 -0.0388 -0.0233 -0.0252 -0.0725
S-385	new CompilerException(sourceName,e.line,e.getCause())
T-385	new CompilerException(sourcePath,e.line,e.getCause())
H-385	-0.15272310376167297	new CompilerException(sourceName,e.line,e.getCause())
D-385	-0.15272310376167297	new CompilerException(sourceName,e.line,e.getCause())
P-385	-0.0652 -0.0272 -0.0450 -0.0895 -0.0201 -0.1723 -0.1011 -0.0629 -0.1196 -0.0361 -0.2146 -0.0984 -0.1017 -0.0686 -0.0384 -1.2365 -0.0989
S-314	getBooleanValue(ASYNC_CLIENT + "acceptAnyCertificate",false)
T-314	getBoolean(ASYNC_CLIENT + "acceptAnyCertificate",false)
H-314	-0.10853446274995804	getBoolean(ASYNC_CLIENT + "acceptAnyCertificate",false)
D-314	-0.10853446274995804	getBoolean(ASYNC_CLIENT + "acceptAnyCertificate",false)
P-314	-0.0367 -0.0674 -0.1465 -0.0385 -0.0526 -0.1446 -0.0553 -0.0633 -0.0772 -0.0483 -0.0345 -0.0280 -0.1212 -0.5162 -0.1863 -0.1199
S-677	log.debug("Unexpected exception on closing transaction. Cause: " + e)
T-677	log.warn("Unexpected exception on closing transaction. Cause: " + e)
H-677	-0.10190987586975098	log.warn("Unexpected exception on closing transaction. Cause: " + e)
D-677	-0.10190987586975098	log.warn("Unexpected exception on closing transaction. Cause: " + e)
P-677	-0.0521 -0.0904 -0.6736 -0.0560 -0.0232 -0.0544 -0.1205 -0.0367 -0.0510 -0.0840 -0.0658 -0.0727 -0.0727 -0.0774 -0.0523 -0.0627 -0.0871
S-723	waitUntil(() -> clusterManager.getNodes().size() == 2,30_000)
T-723	waitUntil(() -> clusterManager.getNodes().size() == 2,60_000)
H-723	-0.13393215835094452	waitUntil(() -> clusterManager.getNodes().size() == 2,60_000)
D-723	-0.13393215835094452	waitUntil(() -> clusterManager.getNodes().size() == 2,60_000)
P-723	-0.0101 -0.1712 -0.0113 -0.0178 -0.0265 -0.0725 -0.0570 -0.0669 -0.1147 -0.0211 -0.0790 -0.0761 -0.1821 -1.1496 -0.1299 -0.0075 -0.0835
S-777	LOG.warn("Failed to get mount information: {}",e.getMessage())
T-777	LOG.debug("Failed to get mount information: {}",e.getMessage())
H-777	-0.10625840723514557	LOG.debug("Failed to get mount information: {}",e.getMessage())
D-777	-0.10625840723514557	LOG.debug("Failed to get mount information: {}",e.getMessage())
P-777	-0.0313 -0.0993 -0.8468 -0.0586 -0.0368 -0.0625 -0.0791 -0.0304 -0.0488 -0.0757 -0.0556 -0.0591 -0.0700 -0.0916 -0.0369 -0.0406 -0.0833
S-796	logger.debug("Trying to map {} to {}",t,path)
T-796	logger.trace("Trying to map {} to {}",t,path)
H-796	-0.058955006301403046	logger.trace("Trying to map {} to {}",t,path)
D-796	-0.058955006301403046	logger.trace("Trying to map {} to {}",t,path)
P-796	-0.0434 -0.1061 -0.0324 -0.0516 -0.0312 -0.0326 -0.0580 -0.0483 -0.0492 -0.0465 -0.0835 -0.0809 -0.0349 -0.0764 -0.0606 -0.0812 -0.0852
S-626	serializer.serializeServerFailure(ctx.alloc(),new RuntimeException(msg))
T-626	MessageSerializer.serializeServerFailure(ctx.alloc(),new RuntimeException(msg))
H-626	-0.1706291139125824	MessageSerializer.serializeServerFailure(ctx.alloc(),new RuntimeException(msg))
D-626	-0.1706291139125824	MessageSerializer.serializeServerFailure(ctx.alloc(),new RuntimeException(msg))
P-626	-1.4938 -0.1078 -0.1232 -0.0378 -0.1555 -0.0609 -0.0476 -0.0227 -0.0839 -0.0278 -0.0869 -0.0882 -0.3496 -0.0609 -0.0904 -0.0153 -0.1355 -0.0837
S-683	addGroupedInterceptor(filter,interceptorClassName,group,executionPolicy)
T-683	addGroupedInterceptor(filter,interceptorClassName,null,group,executionPolicy)
H-683	-0.12791787087917328	addGroupedInterceptor(filter,interceptorClassName,null,group,executionPolicy)
D-683	-0.12791787087917328	addGroupedInterceptor(filter,interceptorClassName,null,group,executionPolicy)
P-683	-0.1094 -0.1227 -0.0413 -0.0333 -0.0726 -0.0707 -0.0699 -0.0171 -0.0096 -0.0189 -0.0638 -0.1074 -0.0467 -1.3466 -0.0785 -0.0206 -0.0175 -0.0937 -0.0902
S-797	endFunction("write_partition_column_statistics: ",ret != false)
T-797	endFunction("write_partition_column_statistics: ",ret != false,null)
H-797	-0.07052577286958694	endFunction("write_partition_column_statistics: ",ret != false,null)
D-797	-0.07052577286958694	endFunction("write_partition_column_statistics: ",ret != false,null)
P-797	-0.0790 -0.0216 -0.0456 -0.0565 -0.1457 -0.0078 -0.1082 -0.0539 -0.0726 -0.0360 -0.0441 -0.0455 -0.0162 -0.0394 -0.1375 -0.1649 -0.0281 -0.1365 -0.1010
S-246	dir.isDirectory() && !"target".equals(dir.getName())
T-246	dir.isDirectory() && !"target".equals(dir.getName()) && !dir.getName().startsWith(".")
H-246	-0.25474968552589417	dir.isDir() && !"target".equals(dir.getName())
D-246	-0.25474968552589417	dir.isDir() && !"target".equals(dir.getName())
P-246	-1.7023 -0.2147 -0.0957 -1.5778 -0.0571 -0.1196 -0.0302 -0.0300 -0.0495 -0.0388 -0.0347 -0.0500 -0.0554 -0.0821 -0.0349 -0.0679 -0.0902
S-742	start.set(Calendar.DAY_OF_MONTH,startMonth)
T-742	start.set(Calendar.DAY_OF_MONTH,startDay)
H-742	-0.06822328269481659	start.set(Calendar.DAY_OF_MONTH,startDay)
D-742	-0.06822328269481659	start.set(Calendar.DAY_OF_MONTH,startDay)
P-742	-0.0270 -0.0808 -0.0688 -0.0895 -0.0307 -0.0852 -0.0349 -0.0870 -0.0143 -0.0834 -0.0381 -0.0658 -0.0696 -0.0343 -0.2015 -0.0807
S-823	executor.scheduleWithFixedDelay(this,period,period,unit)
T-823	executor.scheduleAtFixedRate(this,period,period,unit)
H-823	-0.06020630896091461	executor.scheduleAtFixedRate(this,period,period,unit)
D-823	-0.06020630896091461	executor.scheduleAtFixedRate(this,period,period,unit)
P-823	-0.0194 -0.0933 -0.0175 -0.0179 -0.0510 -0.1961 -0.0779 -0.0863 -0.0656 -0.0311 -0.0554 -0.0233 -0.0536 -0.0197 -0.0701 -0.0851
S-632	LOG.error("OpenTracing: Failed to capture tracing data",t)
T-632	LOG.warn("OpenTracing: Failed to capture tracing data",t)
H-632	-0.04827079921960831	LOG.warn("OpenTracing: Failed to capture tracing data",t)
D-632	-0.04827079921960831	LOG.warn("OpenTracing: Failed to capture tracing data",t)
P-632	-0.0214 -0.1032 -0.0175 -0.0555 -0.0461 -0.0180 -0.0642 -0.0154 -0.0652 -0.0383 -0.0184 -0.0708 -0.0607 -0.0332 -0.0610 -0.0833
S-786	registerConsumer(newUUIDString(),newUUIDString(),owner,attributes)
T-786	registerConsumer(owner,newUUIDString(),newUUIDString(),attributes)
H-786	-0.38963502645492554	registerConsumer(newUUIDString(),newUUIDString(),owner,perms)
D-786	-0.38963502645492554	registerConsumer(newUUIDString(),newUUIDString(),owner,perms)
P-786	-0.0722 -0.0308 -0.0826 -0.0532 -0.3069 -0.0640 -0.1029 -0.1256 -0.4396 -0.1485 -0.1373 -0.5455 -0.0832 -3.7955 -0.1611 -0.0852
S-565	NodeTraversal.traverseEs6(compiler,originalRoot,this)
T-565	NodeTraversal.traverseEs6(compiler,scriptRoot,this)
H-565	-0.3158642649650574	NodeTraversal.traverseEs6(compiler,originalRoot,this,false)
D-565	-0.3158642649650574	NodeTraversal.traverseEs6(compiler,originalRoot,this,false)
P-565	-0.0556 -0.4851 -0.0988 -0.2055 -0.0823 -0.0390 -0.0639 -0.3399 -0.0217 -0.0680 -0.0549 -0.0212 -0.0836 -0.1258 -0.2269 -2.5396 -1.0884 -0.0852
S-237	ALIAS.addResourceAttributeDescription(resources,keyPrefix,container)
T-237	ALIASES.addResourceAttributeDescription(resources,keyPrefix,container)
H-237	-0.04614873230457306	ALIASES.addResourceAttributeDescription(resources,keyPrefix,container)
D-237	-0.04614873230457306	ALIASES.addResourceAttributeDescription(resources,keyPrefix,container)
P-237	-0.0050 -0.0357 -0.0154 -0.0787 -0.0442 -0.0350 -0.0354 -0.0224 -0.0613 -0.0243 -0.0565 -0.1005 -0.0244 -0.0575 -0.0188 -0.0828 -0.0866
S-675	Utils.deserialize(_boltSer,IBatchBolt.class)
T-675	Utils.javaDeserialize(_boltSer,IBatchBolt.class)
H-675	-0.40726831555366516	Utils.deserialize(_boltSer,IBatchBolt.class)
D-675	-0.40726831555366516	Utils.deserialize(_boltSer,IBatchBolt.class)
P-675	-0.0194 -0.0859 -0.3666 -3.5728 -0.2759 -0.0039 -0.0235 -0.0716 -0.3597 -0.0931 -0.0580 -0.0035 -0.1044 -0.0393 -1.3547 -0.0838
S-199	new DynamicAwareEntry("https://localhost/test",null,null)
T-199	new DynamicAwareEntry("https://localhost/test",null,null,null)
H-199	-0.09064783900976181	new DynamicAwareEntry("https://localhost/test",null,null)
D-199	-0.09064783900976181	new DynamicAwareEntry("https://localhost/test",null,null)
P-199	-0.0679 -0.0146 -0.0100 -0.0469 -0.0322 -0.0256 -0.0120 -0.0211 -0.0427 -0.0499 -0.1431 -0.0396 -0.0940 -0.0233 -0.7354 -0.0922
S-706	new DynamicAwareEntry("http://localhost:8080/test",null,null)
T-706	new DynamicAwareEntry("http://localhost:8080/test",null,null,null)
H-706	-0.09592375159263611	new DynamicAwareEntry("http://localhost:8080/test",null,null)
D-706	-0.09592375159263611	new DynamicAwareEntry("http://localhost:8080/test",null,null)
P-706	-0.0696 -0.0153 -0.0091 -0.0487 -0.0339 -0.0476 -0.0089 -0.0194 -0.0146 -0.0498 -0.1488 -0.0420 -0.0943 -0.0270 -0.8129 -0.0929
S-471	executor.scheduleWithFixedDelay(this,period,period,unit)
T-471	executor.scheduleAtFixedRate(this,period,period,unit)
H-471	-0.06020630896091461	executor.scheduleAtFixedRate(this,period,period,unit)
D-471	-0.06020630896091461	executor.scheduleAtFixedRate(this,period,period,unit)
P-471	-0.0194 -0.0933 -0.0175 -0.0179 -0.0510 -0.1961 -0.0779 -0.0863 -0.0656 -0.0311 -0.0554 -0.0233 -0.0536 -0.0197 -0.0701 -0.0851
S-567	/** * {@inheritDoc} */ @Override public AtmosphereResource addAtmosphereResource(AtmosphereResource r){ try { if (destroyed.get()) { logger.debug(DESTROYED,getID(),"addAtmosphereResource(AtmosphereResource<?, ?> r"); return r; } start(); if (scope == SCOPE.REQUEST && requestScoped.getAndSet(true)) { throw new IllegalStateException("Broadcaster " + this + " cannot be used as its scope is set to REQUEST"); } if (maxSuspendResource.get() > 0 && resources.size() >= maxSuspendResource.get()) { if (policy == POLICY.FIFO) { AtmosphereResource resource=resources.poll(); try { logger.warn("Too many resource. Forcing resume of {} ",resource); resource.resume(); } catch ( Throwable t) { logger.warn("failed to resume resource {} ",resource,t); } } else if (policy == POLICY.REJECT) { throw new RejectedExecutionException(String.format("Maximum suspended AtmosphereResources %s",maxSuspendResource)); } } if (resources.contains(r)) { return r; } synchronized (concurrentSuspend
T-567	/** * {@inheritDoc} */ @Override public Broadcaster addAtmosphereResource(AtmosphereResource r){ try { if (destroyed.get()) { logger.debug(DESTROYED,getID(),"addAtmosphereResource(AtmosphereResource<?, ?> r"); return r; } start(); if (scope == SCOPE.REQUEST && requestScoped.getAndSet(true)) { throw new IllegalStateException("Broadcaster " + this + " cannot be used as its scope is set to REQUEST"); } if (maxSuspendResource.get() > 0 && resources.size() >= maxSuspendResource.get()) { if (policy == POLICY.FIFO) { AtmosphereResource resource=resources.poll(); try { logger.warn("Too many resource. Forcing resume of {} ",resource); resource.resume(); } catch ( Throwable t) { logger.warn("failed to resume resource {} ",resource,t); } } else if (policy == POLICY.REJECT) { throw new RejectedExecutionException(String.format("Maximum suspended AtmosphereResources %s",maxSuspendResource)); } } if (resources.contains(r)) { return r; } synchronized (concurrentSuspendBroadcast
H-567	-0.15733850002288818	/** * {@inheritDoc} */ @Override public AtmosphereResource addAtmosphereResource(AtmosphereResource r){ try { if (destroyed.get()) { logger.debug(DESTROYED,getID(),"addAtmosphereResource(AtmosphereResource<?, ?> r"); return r; } start(); if (scope == SCOPE.REQUEST && requestScoped.getAndSet(true)) { throw new IllegalStateException("Broadcaster " + this + " cannot be used as its scope is set to REQUEST"); } if (maxSuspendResource.get() > 0 && resources.size() >= maxSuspendResource.get()) { if (policy == POLICY.FIFO) { AtmosphereResource resource=resources.poll(); try { logger.warn("Too many resource. Forcing resume of {} ",resource); resource.resume(); } catch ( Throwable t) { logger.warn("failed to resume resource {} ",resource,t); }
D-567	-0.15733850002288818	/** * {@inheritDoc} */ @Override public AtmosphereResource addAtmosphereResource(AtmosphereResource r){ try { if (destroyed.get()) { logger.debug(DESTROYED,getID(),"addAtmosphereResource(AtmosphereResource<?, ?> r"); return r; } start(); if (scope == SCOPE.REQUEST && requestScoped.getAndSet(true)) { throw new IllegalStateException("Broadcaster " + this + " cannot be used as its scope is set to REQUEST"); } if (maxSuspendResource.get() > 0 && resources.size() >= maxSuspendResource.get()) { if (policy == POLICY.FIFO) { AtmosphereResource resource=resources.poll(); try { logger.warn("Too many resource. Forcing resume of {} ",resource); resource.resume(); } catch ( Throwable t) { logger.warn("failed to resume resource {} ",resource,t); }
P-567	-0.0117 -0.0312 -0.0111 -0.0331 -0.0344 -0.0299 -0.0195 -0.0812 -0.0211 -0.0415 -0.2628 -0.0338 -0.0155 -0.0507 -0.0760 -0.0680 -0.0337 -0.0178 -0.0509 -0.0658 -0.0562 -0.0342 -0.0149 -0.0488 -0.0685 -0.0584 -0.1004 -0.0531 -0.0940 -0.1091 -0.0307 -0.0670 -0.0736 -0.0607 -0.0562 -0.2142 -0.0322 -0.0784 -0.0499 -0.0930 -0.1563 -0.0537 -0.0355 -0.0326 -0.0672 -0.0444 -0.0579 -0.0824 -0.0729 -0.0757 -0.0393 -0.0340 -0.0198 -0.0478 -0.0790 -0.0466 -0.0293 -0.0256 -0.0461 -0.0036 -0.0507 -0.3279 -0.0820 -0.0882 -0.0490 -0.0681 -0.0725 -0.0679 -0.0570 -0.0303 -0.0609 -0.0985 -0.1140 -0.0212 -0.0273 -0.0894 -0.0481 -0.0320 -0.0271 -0.0046 -0.0740 -0.0593 -0.0095 -0.0748 -0.0771 -0.0287 -0.0773 -0.0924 -0.1019 -0.0444 -0.0593 -0.0631 -0.0062 -0.0199 -0.0141 -0.0721 -0.0446 -0.0907 -0.0588 -0.0689 -0.0206 -0.0446 -0.1188 -0.1096 -0.0496 -0.0303 -0.0767 -0.0657 -0.1160 -0.3057 -0.0372 -0.0479 -0.0801 -0.0959 -0.0514 -0.0230 -0.0254 -0.1235 -0.0699 -0.0776 -0.0323 -0.0525 -0.0273 -0.0689 -0.1321 -0.0519 -0.0610 -0.2431 -0.0221 -0.0180 -0.0269 -0.0670 -0.0553 -0.0458 -0.0897 -0.1047 -0.1195 -0.4393 -0.0483 -0.2018 -0.2897 -0.0775 -0.0193 -0.1838 -0.0415 -0.0817 -0.0785 -0.0288 -0.0257 -0.0587 -0.0295 -0.0590 -0.0757 -0.0887 -0.0180 -0.0270 -0.0657 -0.0953 -0.0411 -0.0690 -0.1280 -0.0538 -0.2668 -0.7640 -0.0142 -0.0807 -0.1607 -0.0071 -0.2658 -0.1452 -0.0459 -0.1905 -0.0566 -0.0758 -0.0241 -0.0840 -0.6174 -0.0521 -0.0698 -0.0914 -0.0830 -0.0996 -0.0746 -0.0510 -0.0873 -0.0379 -0.0716 -0.0731 -0.0732 -0.0394 -0.0677 -0.3411 -0.0234 -0.0509 -0.1579 -0.0827 -0.0805 -0.0472 -0.0465 -0.0365 -15.8882
S-258	public abstract class AbstractHikariConfig implements HikariConfigMBean { private static final Logger LOGGER=LoggerFactory.getLogger(HikariConfig.class); private static final long CONNECTION_TIMEOUT=TimeUnit.SECONDS.toMillis(30); private static final long VALIDATION_TIMEOUT=TimeUnit.SECONDS.toMillis(5); private static final long IDLE_TIMEOUT=TimeUnit.MINUTES.toMillis(10); private static final long MAX_LIFETIME=TimeUnit.MINUTES.toMillis(30); private static int poolNumber; private static boolean unitTest; private volatile long connectionTimeout; private volatile long validationTimeout; private volatile long idleTimeout; private volatile long leakDetectionThreshold; private volatile long maxLifetime; private volatile int maxPoolSize; private volatile int minIdle; private String catalog; private String connectionCustomizerClassName; private String connectionInitSql; private String connectionTestQuery; private String dataSourceClassName; private String dataSourceJndiName; private String driverClassName; private String jdbcUrl; private String password; private String poolName; private String transactionIsolationName; private String username; private boolean isAutoCommit; private boolean isReadOnly; private boolean isInitializationFailFast; private boolean isIsolateInternalQueries; private boolean isRegisterMbeans; private
T-258	public abstract class AbstractHikariConfig implements HikariConfigMXBean { private static final Logger LOGGER=LoggerFactory.getLogger(HikariConfig.class); private static final long CONNECTION_TIMEOUT=TimeUnit.SECONDS.toMillis(30); private static final long VALIDATION_TIMEOUT=TimeUnit.SECONDS.toMillis(5); private static final long IDLE_TIMEOUT=TimeUnit.MINUTES.toMillis(10); private static final long MAX_LIFETIME=TimeUnit.MINUTES.toMillis(30); private static int poolNumber; private static boolean unitTest; private volatile long connectionTimeout; private volatile long validationTimeout; private volatile long idleTimeout; private volatile long leakDetectionThreshold; private volatile long maxLifetime; private volatile int maxPoolSize; private volatile int minIdle; private String catalog; private String connectionCustomizerClassName; private String connectionInitSql; private String connectionTestQuery; private String dataSourceClassName; private String dataSourceJndiName; private String driverClassName; private String jdbcUrl; private String password; private String poolName; private String transactionIsolationName; private String username; private boolean isAutoCommit; private boolean isReadOnly; private boolean isInitializationFailFast; private boolean isIsolateInternalQueries; private boolean isRegisterMbeans; private
H-258	-0.18337209522724152	public abstract class AbstractHikariConfig implements HikariConfigMBean { private static final Logger LOGGER=LoggerFactory.getLogger(HikariConfig.class); private static final long CONNECTION_TIMEOUT=TimeUnit.SECONDS.toMillis(30); private static final long VALIDATION_TIMEOUT=TimeUnit.SECONDS.toMillis(5); private static final long IDLE_TIMEOUT=TimeUnit.MINUTES.toMillis(10); private static final long MAX_LIFETIME=TimeUnit.MINUTES.toMillis(30); private static int poolNumber; private static boolean unitTest; private volatile long connectionTimeout; private volatile long validationTimeout; private volatile long idleTimeout; private volatile long leakDetectionThreshold; private volatile long maxLifetime; private volatile int maxPoolSize; private volatile int minIdle; private String catalog; private String connectionCustomizerClassName; private String connectionInitSql; private String connectionTestQuery; private String dataSourceClassName; private String dataSourceJndiName; private String driverClassName;
D-258	-0.18337209522724152	public abstract class AbstractHikariConfig implements HikariConfigMBean { private static final Logger LOGGER=LoggerFactory.getLogger(HikariConfig.class); private static final long CONNECTION_TIMEOUT=TimeUnit.SECONDS.toMillis(30); private static final long VALIDATION_TIMEOUT=TimeUnit.SECONDS.toMillis(5); private static final long IDLE_TIMEOUT=TimeUnit.MINUTES.toMillis(10); private static final long MAX_LIFETIME=TimeUnit.MINUTES.toMillis(30); private static int poolNumber; private static boolean unitTest; private volatile long connectionTimeout; private volatile long validationTimeout; private volatile long idleTimeout; private volatile long leakDetectionThreshold; private volatile long maxLifetime; private volatile int maxPoolSize; private volatile int minIdle; private String catalog; private String connectionCustomizerClassName; private String connectionInitSql; private String connectionTestQuery; private String dataSourceClassName; private String dataSourceJndiName; private String driverClassName;
P-258	-0.0376 -0.0289 -0.0603 -0.0807 -0.0518 -0.2158 -0.0401 -0.0699 -0.1015 -0.2739 -0.0631 -0.0582 -0.0383 -0.0731 -0.0256 -0.0674 -0.0437 -0.0085 -0.0519 -0.0226 -0.0481 -0.0923 -0.0136 -0.0738 -0.1673 -0.3185 -0.0742 -0.1432 -0.0560 -0.0558 -0.0505 -0.0552 -0.0906 -0.1211 -0.4687 -0.1087 -0.0384 -0.0651 -0.0507 -0.0217 -0.0805 -0.0220 -0.0714 -0.0817 -0.0372 -0.5432 -0.1523 -0.0395 -0.0840 -0.0560 -0.0797 -0.1214 -0.1576 -0.0324 -0.1433 -0.0472 -0.0689 -0.0460 -0.0275 -0.0823 -0.0425 -0.0761 -0.0938 -0.0337 -0.0619 -0.0565 -0.0728 -0.0579 -0.0735 -0.1374 -0.1549 -0.1229 -0.0479 -0.0653 -0.0378 -0.0259 -0.0847 -0.2009 -0.0356 -0.0825 -0.1216 -0.0375 -4.3633 -0.3392 -0.0577 -0.0452 -0.0582 -0.1184 -0.0516 -0.0855 -0.0296 -0.0324 -0.1443 -0.0540 -0.0378 -0.0202 -0.0777 -0.0578 -0.0522 -0.0759 -0.0824 -0.0298 -0.2637 -0.0816 -0.0393 -0.0740 -0.0401 -0.0754 -0.0345 -0.0532 -0.0309 -0.0577 -0.0296 -0.0812 -0.9059 -0.0264 -0.0539 -0.0618 -0.1452 -0.1198 -0.0412 -0.0230 -0.0818 -0.0660 -0.0986 -0.1158 -0.5431 -0.0360 -0.0582 -0.0718 -0.2257 -0.1399 -0.0071 -0.0370 -0.0719 -0.1000 -0.2000 -0.1560 -0.0080 -0.1357 -0.0471 -0.1179 -0.0815 -0.1357 -0.1975 -0.0263 -0.0737 -0.6205 -0.1041 -0.0898 -0.1458 -0.1264 -0.0482 -0.0097 -0.1792 -0.1042 -0.1476 -0.0872 -0.0278 -0.0270 -0.1518 -0.0686 -0.0521 -0.0078 -0.1757 -0.0912 -0.0619 -0.0781 -0.0120 -0.0460 -0.0895 -0.1128 -0.0635 -0.0624 -0.0740 -0.0532 -0.1250 -0.1261 -0.0627 -0.0546 -0.0705 -0.0466 -0.0878 -0.0831 -0.0569 -0.0933 -0.0935 -0.1211 -0.1128 -0.0956 -0.0595 -0.1158 -0.0088 -0.0781 -0.0769 -0.0982 -0.0726 -0.1260 -0.0548 -0.0730 -13.8386
S-8	/** * This is the primary connection pool class that provides the basic pooling behavior for HikariCP. * @author Brett Wooldridge */ public abstract class BaseHikariPool implements HikariPoolMBean, IBagStateListener { protected final Logger LOGGER=LoggerFactory.getLogger(getClass()); private static final long ALIVE_BYPASS_WINDOW=Long.getLong("com.zaxxer.hikari.aliveBypassWindow",1000L); protected static final int POOL_RUNNING=0; protected static final int POOL_SUSPENDED=1; protected static final int POOL_SHUTDOWN=2; public final String catalog; public final boolean isReadOnly; public final boolean isAutoCommit; public int transactionIsolation; protected final PoolUtilities poolUtils; protected final HikariConfig configuration; protected final AtomicInteger totalConnections; protected final ConcurrentBag<PoolBagEntry> connectionBag; protected final ThreadPoolExecutor addConnectionExecutor; protected final ThreadPoolExecutor closeConnectionExecutor; protected final ScheduledThreadPoolExecutor houseKeepingExecutorService; protected final boolean isUseJdbc4Validation; protected final boolean isIsolateInternalQueries; protected volatile int poolState; protected volatile long connectionTimeout; protected volatile long validationTimeout; private final LeakTask leakTask; private final DataSource
T-8	/** * This is the primary connection pool class that provides the basic pooling behavior for HikariCP. * @author Brett Wooldridge */ public abstract class BaseHikariPool implements HikariPoolMXBean, IBagStateListener { protected final Logger LOGGER=LoggerFactory.getLogger(getClass()); private static final long ALIVE_BYPASS_WINDOW=Long.getLong("com.zaxxer.hikari.aliveBypassWindow",1000L); protected static final int POOL_RUNNING=0; protected static final int POOL_SUSPENDED=1; protected static final int POOL_SHUTDOWN=2; public final String catalog; public final boolean isReadOnly; public final boolean isAutoCommit; public int transactionIsolation; protected final PoolUtilities poolUtils; protected final HikariConfig configuration; protected final AtomicInteger totalConnections; protected final ConcurrentBag<PoolBagEntry> connectionBag; protected final ThreadPoolExecutor addConnectionExecutor; protected final ThreadPoolExecutor closeConnectionExecutor; protected final ScheduledThreadPoolExecutor houseKeepingExecutorService; protected final boolean isUseJdbc4Validation; protected final boolean isIsolateInternalQueries; protected volatile int poolState; protected volatile long connectionTimeout; protected volatile long validationTimeout; private final LeakTask leakTask; private final DataSource
H-8	-0.13498790562152863	/** * This is the primary connection pool class that provides the basic pooling behavior for HikariCP. * @author Brett Wooldridge */ public abstract class BaseHikariPool implements HikariPoolMBean, IBagStateListener { protected final Logger LOGGER=LoggerFactory.getLogger(getClass()); private static final long ALIVE_BYPASS_WINDOW=Long.getLong("com.zaxxer.hikari.aliveBypassWindow",2000)
D-8	-0.13498790562152863	/** * This is the primary connection pool class that provides the basic pooling behavior for HikariCP. * @author Brett Wooldridge */ public abstract class BaseHikariPool implements HikariPoolMBean, IBagStateListener { protected final Logger LOGGER=LoggerFactory.getLogger(getClass()); private static final long ALIVE_BYPASS_WINDOW=Long.getLong("com.zaxxer.hikari.aliveBypassWindow",2000)
P-8	-0.0230 -0.0325 -0.0278 -0.0848 -0.0413 -0.3440 -0.0732 -0.0491 -0.1384 -0.1082 -0.2186 -0.0697 -0.0563 -0.1858 -0.4388 -0.0526 -0.0340 -0.3891 -0.0268 -0.0620 -0.0433 -0.0240 -0.0246 -0.0428 -0.0308 -0.0421 -0.0618 -0.0346 -0.0280 -0.0497 -0.0175 -0.0285 -0.0332 -0.0701 -0.0196 -0.0535 -0.3973 -0.0488 -0.0554 -0.0611 -0.4277 -0.0622 -0.0519 -0.0573 -0.3204 -0.0300 -0.0589 -0.0181 -0.0375 -0.0399 -0.0617 -0.0263 -0.0059 -0.0499 -0.0148 -0.0355 -0.0775 -0.0269 -0.0811 -0.0256 -0.0325 -0.2894 -0.0313 -0.0440 -0.0812 -0.0014 -0.1494 -0.0867 -0.0652 -0.0360 -0.0672 -0.1403 -0.0470 -0.0411 -0.0678 -0.0607 -0.0757 -0.0497 -0.0909 -0.0728 -0.0551 -0.0314 -0.0961 -0.0391 -0.0838 -0.0744 -0.2819 -0.0840 -0.3820 -0.0413 -0.0613 -0.0410 -0.0655 -4.0852 -0.5088 -0.3662
S-157	Arrays.asList("abstract","continue","for","new","switch","assert","default","if","package","synchronized","boolean","do","goto","private","this","break","double","implements","protected","throw","byte","else","import","public","throws","case","enum","instanceof","return","transient","catch","extends","int","short","try","char","final","interface","static","void","class","finally","long","strictfp","volatile","const","float","native","super","while")
T-157	Arrays.asList("abstract","continue","for","new","switch","assert","default","if","package","synchronized","boolean","do","goto","private","this","break","double","implements","protected","throw","byte","else","import","public","throws","case","enum","instanceof","return","transient","catch","extends","int","short","try","char","final","interface","static","void","class","finally","long","strictfp","volatile","const","float","native","super","while","type")
H-157	-0.06926119327545166	Arrays.asList("abstract","continue","for","new","switch","assert","default","if","package","synchronized","boolean","do","goto","private","this","break","double","implements","protected","throw","byte","else","import","public","throws","case","enum","instanceof","return","transient","catch","extends","int","short","try","char","final","interface","static","void","class","finally","long","strictfp","volatile","const","float","native","super","while","type")
D-157	-0.06926119327545166	Arrays.asList("abstract","continue","for","new","switch","assert","default","if","package","synchronized","boolean","do","goto","private","this","break","double","implements","protected","throw","byte","else","import","public","throws","case","enum","instanceof","return","transient","catch","extends","int","short","try","char","final","interface","static","void","class","finally","long","strictfp","volatile","const","float","native","super","while","type")
P-157	-0.0214 -0.0633 -0.0186 -0.0560 -0.0223 -0.0467 -0.0342 -0.0685 -0.0624 -0.1204 -0.0516 -0.0570 -0.0175 -0.0718 -0.0267 -0.0773 -0.0343 -0.0787 -0.0172 -0.0697 -0.0351 -0.0918 -0.0300 -0.0282 -0.0542 -0.0378 -0.0883 -0.0366 -0.1307 -0.0100 -0.0965 -0.1092 -0.0608 -0.0244 -0.1603 -0.0642 -0.0874 -0.0422 -0.1332 -0.0309 -0.0366 -0.0959 -0.0117 -0.0895 -0.1581 -0.0676 -0.0069 -0.0693 -0.0076 -0.0789 -0.0181 -0.0982 -0.0224 -0.1073 -0.0338 -0.1055 -0.0639 -0.0678 -0.0226 -0.0970 -0.1018 -0.0270 -0.0981 -0.0106 -0.0569 -0.0601 -0.0013 -0.0930 -0.0136 -0.1147 -0.0338 -0.0304 -0.0874 -0.0627 -0.0759 -0.0263 -0.0610 -0.0054 -0.0772 -0.0449 -0.0350 -0.0137 -0.0728 -0.0585 -0.0777 -0.0277 -0.0526 -0.0297 -0.0707 -0.0191 -0.1021 -0.0089 -0.0847 -0.0208 -0.0623 -0.0109 -0.0116 -0.0500 -0.0369 -0.0068 -0.0682 -0.0085 -0.0794 -0.0212 -0.0598 -0.0445 -0.0551 -0.0682 -0.1060 -0.0290 -0.2774 -0.9016 -0.5474 -0.0685
S-657	pushExecutor.submit(new NamedRunnable("OkHttp %s Push Data[%s]",hostName,streamId){ @Override public void execute(){ try { boolean cancel=pushObserver.onData(streamId,buffer,byteCount,inFinished); if (cancel) frameWriter.rstStream(streamId,ErrorCode.CANCEL); if (cancel || inFinished) { synchronized (SpdyConnection.this) { currentPushRequests.remove(streamId); } } } catch ( IOException ignored) { } } } )
T-657	pushExecutor.execute(new NamedRunnable("OkHttp %s Push Data[%s]",hostName,streamId){ @Override public void execute(){ try { boolean cancel=pushObserver.onData(streamId,buffer,byteCount,inFinished); if (cancel) frameWriter.rstStream(streamId,ErrorCode.CANCEL); if (cancel || inFinished) { synchronized (SpdyConnection.this) { currentPushRequests.remove(streamId); } } } catch ( IOException ignored) { } } } )
H-657	-0.05482836812734604	pushExecutor.execute(new NamedRunnable("OkHttp %s Push Data[%s]",hostName,streamId){ @Override public void execute(){ try { boolean cancel=pushObserver.onData(streamId,buffer,byteCount,inFinished); if (cancel) frameWriter.rstStream(streamId,ErrorCode.CANCEL); if (cancel || inFinished) { synchronized (SpdyConnection.this) { currentPushRequests.remove(streamId); } } } catch ( IOException ignored) { } } } )
D-657	-0.05482836812734604	pushExecutor.execute(new NamedRunnable("OkHttp %s Push Data[%s]",hostName,streamId){ @Override public void execute(){ try { boolean cancel=pushObserver.onData(streamId,buffer,byteCount,inFinished); if (cancel) frameWriter.rstStream(streamId,ErrorCode.CANCEL); if (cancel || inFinished) { synchronized (SpdyConnection.this) { currentPushRequests.remove(streamId); } } } catch ( IOException ignored) { } } } )
P-657	-0.1116 -0.0320 -0.0961 -0.0223 -0.1676 -0.0734 -0.0192 -0.0105 -0.0623 -0.0147 -0.0182 -0.0586 -0.0553 -0.0330 -0.0504 -0.0479 -0.0352 -0.0732 -0.0285 -0.0243 -0.0475 -0.0654 -0.0341 -0.0853 -0.0380 -0.0567 -0.0404 -0.0529 -0.0614 -0.0488 -0.0676 -0.0624 -0.0592 -0.0325 -0.0483 -0.0556 -0.0473 -0.0335 -0.0854 -0.0736 -0.0588 -0.0556 -0.0254 -0.0704 -0.0774 -0.0123 -0.0517 -0.0486 -0.0601 -0.0536 -0.0805 -0.0121 -0.0509 -0.0642 -0.1287 -0.0387 -0.0663 -0.0494 -0.0269 -0.0842 -0.0193 -0.0354 -0.0572 -0.0343 -0.0614 -0.0646 -0.0075 -0.0724 -0.0201 -0.0387 -0.0412 -0.0989 -0.0234 -0.0404 -0.0328 -0.0263 -0.0547 -0.0939 -0.0077 -0.1129 -0.0285 -0.0053 -0.0562 -0.0794 -0.0604 -0.0608 -0.0768 -0.0538 -0.0330 -0.0297 -0.0783 -0.1451 -0.0628 -0.0180 -0.0601 -0.0691 -0.0923 -0.0575 -0.0385 -0.0830 -0.0866 -0.0547 -0.0232 -0.0521 -0.0618 -0.0889 -0.0651 -0.0421 -0.1060 -0.0728
S-211	Arrays.asList(CoreAnnotations.TextAnnotation.class,CoreAnnotations.TokensAnnotation.class,CoreAnnotations.CharacterOffsetBeginAnnotation.class,CoreAnnotations.CharacterOffsetEndAnnotation.class,CoreAnnotations.BeforeAnnotation.class,CoreAnnotations.AfterAnnotation.class,CoreAnnotations.TokenBeginAnnotation.class,CoreAnnotations.TokenEndAnnotation.class,CoreAnnotations.PositionAnnotation.class,CoreAnnotations.IndexAnnotation.class,CoreAnnotations.OriginalTextAnnotation.class,CoreAnnotations.ValueAnnotation.class)
T-211	Arrays.asList(CoreAnnotations.TextAnnotation.class,CoreAnnotations.TokensAnnotation.class,CoreAnnotations.CharacterOffsetBeginAnnotation.class,CoreAnnotations.CharacterOffsetEndAnnotation.class,CoreAnnotations.BeforeAnnotation.class,CoreAnnotations.AfterAnnotation.class,CoreAnnotations.TokenBeginAnnotation.class,CoreAnnotations.TokenEndAnnotation.class,CoreAnnotations.PositionAnnotation.class,CoreAnnotations.IndexAnnotation.class,CoreAnnotations.OriginalTextAnnotation.class,CoreAnnotations.ValueAnnotation.class,CoreAnnotations.IsNewlineAnnotation.class)
H-211	-0.09145055711269379	Arrays.asList(CoreAnnotations.TextAnnotation.class,CoreAnnotations.TokensAnnotation.class,CoreAnnotations.CharacterOffsetBeginAnnotation.class,CoreAnnotations.CharacterOffsetEndAnnotation.class,CoreAnnotations.BeforeAnnotation.class,CoreAnnotations.AfterAnnotation.class,CoreAnnotations.TokenBeginAnnotation.class,CoreAnnotations.TokenEndAnnotation.class,CoreAnnotations.PositionAnnotation.class,CoreAnnotations.IndexAnnotation.class,CoreAnnotations.OriginalTextAnnotation.class,CoreAnnotations.ValueAnnotation.class)
D-211	-0.09145055711269379	Arrays.asList(CoreAnnotations.TextAnnotation.class,CoreAnnotations.TokensAnnotation.class,CoreAnnotations.CharacterOffsetBeginAnnotation.class,CoreAnnotations.CharacterOffsetEndAnnotation.class,CoreAnnotations.BeforeAnnotation.class,CoreAnnotations.AfterAnnotation.class,CoreAnnotations.TokenBeginAnnotation.class,CoreAnnotations.TokenEndAnnotation.class,CoreAnnotations.PositionAnnotation.class,CoreAnnotations.IndexAnnotation.class,CoreAnnotations.OriginalTextAnnotation.class,CoreAnnotations.ValueAnnotation.class)
P-211	-0.0425 -0.0659 -0.0200 -0.0653 -0.0534 -0.0273 -0.0794 -0.0730 -0.0343 -0.0544 -0.0395 -0.0823 -0.1238 -0.0390 -0.1004 -0.0556 -0.0390 -0.0534 -0.0505 -0.0796 -0.1076 -0.0512 -0.0949 -0.0477 -0.0440 -0.0141 -0.0626 -0.0776 -0.0714 -0.0940 -0.1610 -0.0595 -0.0841 -0.0854 -0.0351 -0.0399 -0.0348 -0.0628 -0.0549 -0.0793 -0.1342 -0.0505 -0.1031 -0.0483 -0.0729 -0.0694 -0.0681 -0.0763 -0.1139 -0.0517 -0.0740 -0.0502 -0.0377 -0.0551 -0.0480 -0.0708 -0.0748 -0.0531 -0.0937 -0.0344 -0.0258 -0.0339 -0.0689 -0.0625 -0.0759 -0.1454 -0.0506 -0.0852 -0.0383 -0.0373 -0.0269 -0.0644 -0.0655 -0.0731 -0.1529 -0.0667 -0.0935 -0.0262 -0.0440 -0.0528 -0.0618 -0.0761 -0.1030 -0.0752 -0.0852 -0.0379 -0.0615 -0.0474 -0.0507 -0.0774 -0.1951 -0.0689 -0.0864 -0.0601 -0.0478 -0.0374 -0.0667 -0.0518 -0.0941 -0.0838 -0.0615 -0.0844 -0.0478 -0.0376 -0.0538 -0.0582 -2.7832 -0.0710
S-293	invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
T-293	doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
H-293	-0.0806751400232315	doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
D-293	-0.0806751400232315	doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
P-293	-0.0374 -0.0139 -0.0764 -0.0648 -0.0762 -0.0337 -0.0386 -0.0493 -0.0670 -0.0558 -0.0648 -0.0821 -0.0531 -0.0621 -0.0540 -0.0524 -0.0526 -0.0696 -0.0650 -0.0646 -0.0881 -0.0518 -0.0639 -0.0516 -0.0568 -0.0529 -0.0832 -0.0671 -0.0786 -0.0869 -0.0564 -0.0645 -0.0546 -0.0645 -0.0540 -0.0890 -0.0687 -0.0875 -0.0908 -0.0575 -0.0636 -0.0566 -0.0648 -0.0536 -0.0889 -0.0697 -0.0949 -0.0922 -0.0602 -0.0647 -0.0592 -0.0643 -0.0539 -0.0859 -0.0689 -0.1020 -0.0921 -0.0628 -0.0630 -0.0594 -0.0647 -0.0567 -0.0847 -0.0692 -0.1076 -0.0922 -0.0647 -0.0614 -0.0582 -0.0648 -0.0602 -0.0843 -0.0695 -0.1062 -0.0923 -0.0636 -0.0591 -0.0563 -0.0635 -0.0637 -0.0855 -0.0713 -0.0988 -0.0918 -0.0604 -0.0581 -0.0563 -0.0618 -0.0703 -0.0836 -0.0718 -0.0945 -0.0904 -0.0586 -0.0590 -0.0583 -0.0589 -0.0811 -0.0809 -0.0741 -0.0974 -0.0904 -0.0571 -0.0615 -0.0591 -0.0563 -0.3060 -0.0778 -0.0787 -0.1106 -0.0912 -0.0566 -0.0653 -0.0606 -0.0557 -1.2164 -0.1343 -0.0529 -0.0481 -0.0744
S-499	invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
T-499	doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
H-499	-0.08004538714885712	doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
D-499	-0.08004538714885712	doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
P-499	-0.0325 -0.0148 -0.0698 -0.0587 -0.0724 -0.0326 -0.0402 -0.0476 -0.0644 -0.0534 -0.0604 -0.0801 -0.0488 -0.0624 -0.0553 -0.0513 -0.0532 -0.0699 -0.0637 -0.0644 -0.0856 -0.0507 -0.0643 -0.0548 -0.0546 -0.0529 -0.0814 -0.0656 -0.0757 -0.0842 -0.0542 -0.0643 -0.0570 -0.0601 -0.0536 -0.0851 -0.0682 -0.0843 -0.0881 -0.0549 -0.0642 -0.0587 -0.0593 -0.0535 -0.0849 -0.0698 -0.0919 -0.0898 -0.0572 -0.0665 -0.0621 -0.0585 -0.0539 -0.0819 -0.0697 -0.0981 -0.0897 -0.0590 -0.0644 -0.0623 -0.0584 -0.0567 -0.0791 -0.0703 -0.1023 -0.0892 -0.0594 -0.0638 -0.0610 -0.0586 -0.0616 -0.0761 -0.0703 -0.0998 -0.0877 -0.0569 -0.0624 -0.0589 -0.0578 -0.0683 -0.0740 -0.0739 -0.0962 -0.0860 -0.0528 -0.0625 -0.0565 -0.0548 -0.0938 -0.0723 -0.0793 -0.0989 -0.0862 -0.0517 -0.0633 -0.0556 -0.0537 -0.5117 -0.0706 -0.0839 -0.1068 -0.0880 -0.0524 -0.0652 -0.0574 -0.0546 -1.0547 -0.1301 -0.0487 -0.0434 -0.0768
S-399	invoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
T-399	doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
H-399	-0.08357017487287521	doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
D-399	-0.08357017487287521	doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
P-399	-0.0313 -0.0154 -0.0688 -0.0586 -0.0719 -0.0324 -0.0412 -0.0487 -0.0666 -0.0507 -0.0584 -0.0796 -0.0467 -0.0578 -0.0554 -0.0501 -0.0539 -0.0702 -0.0618 -0.0649 -0.0860 -0.0487 -0.0612 -0.0554 -0.0518 -0.0534 -0.0796 -0.0649 -0.0738 -0.0848 -0.0506 -0.0632 -0.0558 -0.0567 -0.0543 -0.0826 -0.0681 -0.0817 -0.0883 -0.0509 -0.0623 -0.0584 -0.0556 -0.0544 -0.0823 -0.0700 -0.0897 -0.0903 -0.0531 -0.0657 -0.0634 -0.0546 -0.0548 -0.0789 -0.0703 -0.0971 -0.0900 -0.0547 -0.0648 -0.0642 -0.0546 -0.0576 -0.0753 -0.0710 -0.1042 -0.0893 -0.0553 -0.0663 -0.0620 -0.0550 -0.0640 -0.0708 -0.0711 -0.1123 -0.0870 -0.0550 -0.0688 -0.0592 -0.0541 -0.0843 -0.0685 -0.0727 -0.1186 -0.0854 -0.0561 -0.0716 -0.0585 -0.0535 -0.3034 -0.0664 -0.0764 -0.1223 -0.0852 -0.0578 -0.0735 -0.0603 -0.0534 -1.5491 -0.1285 -0.0552 -0.0426 -0.0768
S-490	lines("Function.prototype.inherits = function(parentCtor) {"," function tempCtor() {};"," tempCtor.prototype = parentCtor.prototype;"," this.superClass_ = parentCtor.prototype;"," this.prototype = new tempCtor();"," this.prototype.constructor = this;","};")
T-490	lines("Function.prototype.inherits = function(parentCtor) {"," function tempCtor() {};"," tempCtor.prototype = parentCtor.prototype;"," this.superClass_ = parentCtor.prototype;"," this.prototype = new tempCtor();"," this.prototype.constructor = this;","};","/** @constructor */ function A() {}","/** @constructor */ function B() {}","B.inherits(A);","use(B.superClass_);")
H-490	-0.2877151370048523	lines("Function.prototype.inherits = function(parentCtor) {"," function tempCtor() {};"," tempCtor.prototype = parentCtor.prototype;"," this.superClass_ = parentCtor.prototype;"," this.prototype = new tempCtor();"," this.constructor = this;","};")
D-490	-0.2877151370048523	lines("Function.prototype.inherits = function(parentCtor) {"," function tempCtor() {};"," tempCtor.prototype = parentCtor.prototype;"," this.superClass_ = parentCtor.prototype;"," this.prototype = new tempCtor();"," this.constructor = this;","};")
P-490	-3.4371 -0.0620 -0.0211 -0.0635 -1.0941 -0.0633 -0.0587 -0.2446 -0.0050 -0.1884 -0.0562 -0.0534 -0.0866 -0.0911 -0.3802 -0.0836 -0.0778 -0.1051 -0.0521 -0.0396 -0.0730 -0.2970 -0.0462 -0.0096 -0.0649 -0.0461 -0.0827 -0.3093 -0.0736 -1.0500 -0.1138 -0.0886 -0.1530 -0.3436 -0.0883 -1.2326 -0.0457 -0.0807 -0.1609 -0.0795 -0.0730 -0.0549 -0.0857 -0.0790 -0.0609 -0.1225 -0.3572 -0.0890 -1.3549 -0.0439 -0.0858 -0.2124 -0.0953 -1.8969 -0.1630 -0.0981 -0.0475 -0.0767 -0.3679 -0.0520 -0.0735 -0.1595 -0.0821 -2.8235 -0.1248 -0.0527 -0.0387 -0.0703 -0.0215 -0.7824 -0.0798
S-798	pushExecutor.submit(new NamedRunnable("OkHttp %s Push Reset[%s]",hostName,streamId){ @Override public void execute(){ pushObserver.onReset(streamId,errorCode); synchronized (SpdyConnection.this) { currentPushRequests.remove(streamId); } } } )
T-798	pushExecutor.execute(new NamedRunnable("OkHttp %s Push Reset[%s]",hostName,streamId){ @Override public void execute(){ pushObserver.onReset(streamId,errorCode); synchronized (SpdyConnection.this) { currentPushRequests.remove(streamId); } } } )
H-798	-0.05572909116744995	pushExecutor.execute(new NamedRunnable("OkHttp %s Push Reset[%s]",hostName,streamId){ @Override public void execute(){ pushObserver.onReset(streamId,errorCode); synchronized (SpdyConnection.this) { currentPushRequests.remove(streamId); } } } )
D-798	-0.05572909116744995	pushExecutor.execute(new NamedRunnable("OkHttp %s Push Reset[%s]",hostName,streamId){ @Override public void execute(){ pushObserver.onReset(streamId,errorCode); synchronized (SpdyConnection.this) { currentPushRequests.remove(streamId); } } } )
P-798	-0.0733 -0.0369 -0.0914 -0.0436 -0.1606 -0.0733 -0.0180 -0.0094 -0.0626 -0.0153 -0.0194 -0.0585 -0.0619 -0.0352 -0.0446 -0.0769 -0.0440 -0.0664 -0.0297 -0.0277 -0.0477 -0.0557 -0.0268 -0.0951 -0.0325 -0.0558 -0.0340 -0.0400 -0.0543 -0.0352 -0.0621 -0.0436 -0.0309 -0.0832 -0.0883 -0.0176 -0.0481 -0.0199 -0.0792 -0.0685 -0.0699 -0.0268 -0.0376 -0.0223 -0.0980 -0.0328 -0.0083 -0.0493 -0.0832 -0.0727 -0.0534 -0.1015 -0.0426 -0.0282 -0.0433 -0.0767 -0.1571 -0.0615 -0.0275 -0.0705 -0.0514 -0.1013 -0.0542 -0.0537 -0.1064 -0.0803
S-705	/** * Make sure we don't attempt to recover inline; if the parser successfully recovers, it won't throw an exception. */ @Override public Token recoverInline(BaseRecognizer recognizer) throws RecognitionException { throw new RuntimeException(new InputMismatchException(recognizer)); }
T-705	/** * Make sure we don't attempt to recover inline; if the parser successfully recovers, it won't throw an exception. */ @Override public Symbol recoverInline(BaseRecognizer<Symbol> recognizer) throws RecognitionException { throw new RuntimeException(new InputMismatchException(recognizer)); }
H-705	-0.05561661347746849	/** * Make sure we don't attempt to recover inline; if the parser successfully recovers, it won't throw an exception. */ @Override public Token recoverInline(BaseRecognizer recognizer) throws RecognitionException { throw new RuntimeException(new InputMismatchException(recognizer)); }
D-705	-0.05561661347746849	/** * Make sure we don't attempt to recover inline; if the parser successfully recovers, it won't throw an exception. */ @Override public Token recoverInline(BaseRecognizer recognizer) throws RecognitionException { throw new RuntimeException(new InputMismatchException(recognizer)); }
P-705	-0.0120 -0.0318 -0.0596 -0.0353 -0.0909 -0.0307 -0.0389 -0.0350 -0.0596 -0.1047 -0.0150 -0.0415 -0.0200 -0.0213 -0.0570 -0.0382 -0.0285 -0.0507 -0.0396 -0.0075 -0.0488 -0.0967 -0.0634 -0.0504 -0.0530 -0.0336 -0.0628 -0.0374 -0.0705 -0.0396 -0.0560 -0.0244 -0.0403 -0.0717 -0.0423 -0.0584 -0.0681 -0.0467 -0.0395 -0.0583 -0.0254 -0.0467 -0.0807 -0.0484 -0.0441 -0.0521 -0.0734 -0.0433 -0.1160 -0.3409 -0.0516 -0.0903 -0.0420 -0.0753 -0.0719 -0.0333 -0.0817 -0.0116 -0.0658 -0.0490 -0.0500 -0.0753
S-444	@RunWith(HazelcastParallelClassRunner.class) @Category({QuickTest.class,ParallelTest.class}) public class IdGeneratorBasicDistributedTest extends IdGeneratorBasicTest { @Override protected HazelcastInstance[] newInstances(){ return createHazelcastInstanceFactory(2).newInstances(); } }
T-444	@RunWith(HazelcastParallelClassRunner.class) @Category({QuickTest.class,ParallelTest.class}) public class IdGeneratorBasicDistributedTest extends IdGeneratorAbstractTest { @Override protected HazelcastInstance[] newInstances(){ return createHazelcastInstanceFactory(2).newInstances(); } }
H-444	-0.05029098689556122	@RunWith(HazelcastParallelClassRunner.class) @Category({QuickTest.class,ParallelTest.class}) public class IdGeneratorBasicDistributedTest extends IdGeneratorAbstractTest { @Override protected HazelcastInstance[] newInstances(){ return createHazelcastInstanceFactory(2).newInstances(); } }
D-444	-0.05029098689556122	@RunWith(HazelcastParallelClassRunner.class) @Category({QuickTest.class,ParallelTest.class}) public class IdGeneratorBasicDistributedTest extends IdGeneratorAbstractTest { @Override protected HazelcastInstance[] newInstances(){ return createHazelcastInstanceFactory(2).newInstances(); } }
P-444	-0.0347 -0.0136 -0.0595 -0.0532 -0.0097 -0.0230 -0.0493 -0.0173 -0.0780 -0.0532 -0.0694 -0.0483 -0.0201 -0.0351 -0.0113 -0.0450 -0.0785 -0.0561 -0.0551 -0.0528 -0.0681 -0.0717 -0.0503 -0.0284 -0.0534 -0.1314 -0.0849 -0.0543 -0.1001 -0.0102 -0.0312 -0.0565 -0.0774 -0.0486 -0.0351 -0.0871 -0.0675 -0.0623 -0.0283 -0.0377 -0.0102 -0.0890 -0.0309 -0.0820 -0.0223 -0.0329 -0.0515 -0.0182 -0.0123 -0.0917 -0.0466 -0.0399 -0.0729 -0.0454 -0.0311 -0.0455 -0.0564 -0.0558 -0.0848
S-370	logger.info("{} exists but cannot be executed even when execute permissions set; " + "check volume for \"noexec\" flag; use -Dio.netty.native.workdir=[path] " + "to set native working directory separately.",tmpFile.getPath())
T-370	logger.info("{} exists but cannot be executed even when execute permissions set; " + "check volume for \"noexec\" flag; use -Dio.netty.native.workdir=[path] " + "to set native working directory separately.",tmpFile.getPath(),"io.netty.native.workdir")
H-370	-0.13936543464660645	logger.warn("{} exists but cannot be executed even when execute permissions set; " + "check volume for \"noexec\" flag; use -Dio.netty.native.workdir=[path] " + "to set native working directory separately.",tmpFile.getPath())
D-370	-0.13936543464660645	logger.warn("{} exists but cannot be executed even when execute permissions set; " + "check volume for \"noexec\" flag; use -Dio.netty.native.workdir=[path] " + "to set native working directory separately.",tmpFile.getPath())
P-370	-0.0337 -0.0971 -0.7011 -0.0702 -0.0126 -0.0413 -0.0637 -0.0094 -0.0503 -1.4425 -0.5242 -0.0606 -0.0456 -0.4867 -0.0571 -0.0259 -0.0501 -0.0714 -0.0553 -0.0373 -0.7657 -0.0503 -0.0148 -0.1291 -0.0152 -0.0819 -0.3079 -0.0225 -0.2085 -0.1005 -0.1015 -0.0305 -0.0909 -0.0308 -0.0702 -0.1141 -0.1063 -0.0831 -0.0482 -0.0261 -0.0443 -0.0825 -0.0570 -0.0479 -0.0530 -0.0463 -0.1029 -0.4746 -0.2386 -0.0490 -0.1773 -0.0498 -0.0549 -0.0477 -0.0881 -0.0562 -0.0797 -0.0567 -0.0819
S-571	v.executeBlocking(fut -> { try { v.simulateKill(); fut.complete(); } catch ( Exception e) { fut.fail(e); } } ,ar -> { if (!ar.succeeded()) { fail(ar.cause()); } } )
T-571	v.executeBlocking(fut -> { try { v.simulateKill(); fut.complete(); } catch ( Exception e) { fut.fail(e); } } ,false,ar -> { if (!ar.succeeded()) { fail(ar.cause()); } } )
H-571	-0.06535708159208298	v.executeBlocking(fut -> { try { v.simulateKill(); fut.complete(); } catch ( Exception e) { fut.fail(e); } } ,ar -> { if (!ar.succeeded()) { fail(ar.cause()); } } )
D-571	-0.06535708159208298	v.executeBlocking(fut -> { try { v.simulateKill(); fut.complete(); } catch ( Exception e) { fut.fail(e); } } ,ar -> { if (!ar.succeeded()) { fail(ar.cause()); } } )
P-571	-0.1023 -0.1017 -0.0553 -0.0754 -0.1134 -0.1172 -0.0573 -0.0301 -0.0536 -0.0728 -0.0490 -0.1114 -0.0805 -0.0554 -0.0250 -0.0708 -0.0397 -0.0825 -0.0786 -0.0338 -0.0425 -0.0623 -0.0184 -0.0733 -0.0561 -0.0312 -0.0453 -0.0890 -0.0665 -0.0872 -0.0306 -0.0678 -0.0787 -0.0322 -0.0567 -0.0644 -0.1426 -0.3817 -0.0133 -0.0624 -0.0568 -0.0060 -0.0442 -0.0860 -0.0257 -0.0322 -0.0214 -0.0728 -0.0379 -0.0713 -0.0394 -0.0849 -0.0352 -0.0187 -0.0594 -0.0459 -0.0588 -0.0861
S-292	@Override public Cell deepClone(){ byte[] copy=Bytes.copy(this.bytes,this.offset,this.length); KeyValue kv=new KeyValue(copy,0,copy.length); kv.setSequenceId(this.getSequenceId()); return kv; }
T-292	@Override public ExtendedCell deepClone(){ byte[] copy=Bytes.copy(this.bytes,this.offset,this.length); KeyValue kv=new KeyValue(copy,0,copy.length); kv.setSequenceId(this.getSequenceId()); return kv; }
H-292	-0.05358206108212471	@Override public ExtendedCell deepClone(){ byte[] copy=Bytes.copy(this.bytes,this.offset,this.length); KeyValue kv=new KeyValue(copy,0,copy.length); kv.setSequenceId(this.getSequenceId()); return kv; }
D-292	-0.05358206108212471	@Override public ExtendedCell deepClone(){ byte[] copy=Bytes.copy(this.bytes,this.offset,this.length); KeyValue kv=new KeyValue(copy,0,copy.length); kv.setSequenceId(this.getSequenceId()); return kv; }
P-292	-0.0270 -0.0278 -0.0517 -0.0518 -0.1080 -0.0302 -0.0280 -0.0631 -0.0285 -0.0839 -0.0301 -0.0555 -0.0624 -0.0859 -0.0154 -0.0790 -0.0657 -0.0794 -0.0481 -0.0595 -0.0480 -0.0855 -0.0225 -0.0549 -0.0553 -0.0775 -0.0664 -0.0355 -0.0120 -0.0390 -0.0502 -0.0602 -0.0154 -0.0769 -0.0315 -0.0414 -0.0235 -0.0304 -0.0852 -0.0522 -0.0561 -0.0501 -0.0766 -0.0701 -0.0183 -0.0691 -0.0525 -0.0481 -0.0868 -0.0702 -0.0099 -0.0768 -0.0262 -0.1457 -0.0243 -0.0519 -0.0518 -0.0789
S-80	Arrays.asList(CoreAnnotations.TextAnnotation.class,CoreAnnotations.TokensAnnotation.class,CoreAnnotations.CharacterOffsetBeginAnnotation.class,CoreAnnotations.CharacterOffsetEndAnnotation.class,CoreAnnotations.IsNewlineAnnotation.class)
T-80	Arrays.asList(CoreAnnotations.TextAnnotation.class,CoreAnnotations.TokensAnnotation.class,CoreAnnotations.CharacterOffsetBeginAnnotation.class,CoreAnnotations.CharacterOffsetEndAnnotation.class,CoreAnnotations.IsNewlineAnnotation.class,CoreAnnotations.TokenBeginAnnotation.class,CoreAnnotations.TokenEndAnnotation.class,CoreAnnotations.OriginalTextAnnotation.class)
H-80	-0.12068377435207367	Arrays.asList(CoreAnnotations.TextAnnotation.class,CoreAnnotations.TokensAnnotation.class,CoreAnnotations.CharacterOffsetBeginAnnotation.class,CoreAnnotations.CharacterOffsetEndAnnotation.class,CoreAnnotations.IsNewlineAnnotation.class,CoreAnnotations.IsNewlineAnnotation.class)
D-80	-0.12068377435207367	Arrays.asList(CoreAnnotations.TextAnnotation.class,CoreAnnotations.TokensAnnotation.class,CoreAnnotations.CharacterOffsetBeginAnnotation.class,CoreAnnotations.CharacterOffsetEndAnnotation.class,CoreAnnotations.IsNewlineAnnotation.class,CoreAnnotations.IsNewlineAnnotation.class)
P-80	-0.0488 -0.0600 -0.0268 -0.0663 -0.0587 -0.0278 -0.0773 -0.0706 -0.0335 -0.0579 -0.0376 -0.0747 -0.0941 -0.0371 -0.1010 -0.0316 -0.0288 -0.0549 -0.0450 -0.0753 -0.0891 -0.0495 -0.0977 -0.0416 -0.0465 -0.0152 -0.0496 -0.0782 -0.0687 -0.0910 -0.1327 -0.0510 -0.0867 -0.0666 -0.0337 -0.0412 -0.0278 -0.0641 -0.0583 -0.0803 -0.2091 -0.0432 -0.0959 -0.0765 -0.0273 -0.0220 -0.0323 -0.0545 -0.0471 -0.1845 -0.0961 -0.0577 -0.0781 -0.6603 -0.5928 -0.0391 -0.1183 -0.1024 -0.0539 -2.3214 -0.0718
S-583	from(Constants.PARALLEL_LOANBROKER_URI).process(new CreditScoreProcessor(Constants.CREDITAGENCY_ADDRESS)).multicast(new BankResponseAggregationStrategy()).setParallelProcessing(true)
T-583	from(Constants.PARALLEL_LOANBROKER_URI).process(new CreditScoreProcessor(Constants.CREDITAGENCY_ADDRESS)).multicast(new BankResponseAggregationStrategy()).parallelProcessing(true)
H-583	-0.0639488473534584	from(Constants.PARALLEL_LOANBROKER_URI).process(new CreditScoreProcessor(Constants.CREDITAGENCY_ADDRESS)).multicast(new BankResponseAggregationStrategy()).setParallelProcessing(true)
D-583	-0.0639488473534584	from(Constants.PARALLEL_LOANBROKER_URI).process(new CreditScoreProcessor(Constants.CREDITAGENCY_ADDRESS)).multicast(new BankResponseAggregationStrategy()).setParallelProcessing(true)
P-583	-0.0694 -0.0811 -0.0245 -0.0852 -0.0392 -0.0224 -0.0900 -0.0522 -0.0720 -0.0296 -0.0314 -0.1002 -0.0110 -0.0130 -0.1130 -0.0193 -0.0609 -0.0756 -0.1572 -0.0615 -0.0075 -0.0344 -0.0142 -0.0596 -0.0177 -0.0919 -0.0559 -0.0044 -0.0061 -0.0250 -0.0370 -0.1026 -0.0451 -0.0767 -0.0252 -0.0067 -0.0823 -0.0509 -0.0131 -0.0516 -0.0179 -0.0134 -0.0671 -0.1686 -0.0764 -0.0413 -0.0782 -0.4544 -0.1720 -0.0915
S-179	User.createCursorSupportUserList(http.get("http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json"))
T-179	User.createUsersList(http.get("http://yusuke.homeip.net/twitter4j/en/testcases/statuses/friends/T4J_hudson.json"))
H-179	-0.06641902774572372	User.createUsersList(http.get("http://yusuke.homeip.net/twitter4j/en/testcases/friends/T4J_hudson.json"))
D-179	-0.06641902774572372	User.createUsersList(http.get("http://yusuke.homeip.net/twitter4j/en/testcases/friends/T4J_hudson.json"))
P-179	-0.0169 -0.1157 -0.0777 -0.0349 -0.0161 -0.0844 -0.0398 -0.0782 -0.0584 -0.0507 -0.0444 -0.0234 -0.0536 -0.0245 -0.0283 -0.0101 -0.0815 -0.0408 -0.0191 -0.0717 -0.0208 -0.0734 -0.0278 -0.0495 -0.0485 -0.0920 -0.0291 -0.0710 -0.1079 -0.0264 -0.0525 -0.0470 -0.0654 -0.5669 -0.0408 -0.1063 -0.0954 -0.0491 -0.0154 -0.1074 -0.0305 -0.0799 -0.0832
S-267	new JedisClusterCommand<Set<String>>(connectionHandler,timeout,maxRedirections){ @Override public Set<String> execute( Jedis connection){ return connection.spop(key,count); } }
T-267	new JedisClusterCommand<Set<String>>(connectionHandler,maxRedirections){ @Override public Set<String> execute( Jedis connection){ return connection.spop(key,count); } }
H-267	-0.06343590468168259	new JedisClusterCommand<Set<String>>(connectionHandler,maxRedirections){ @Override public Set<String> execute( Jedis connection){ return connection.spop(key,count); } }
D-267	-0.06343590468168259	new JedisClusterCommand<Set<String>>(connectionHandler,maxRedirections){ @Override public Set<String> execute( Jedis connection){ return connection.spop(key,count); } }
P-267	-0.0664 -0.0135 -0.0225 -0.0279 -0.0409 -0.1021 -0.0392 -0.0713 -0.1145 -0.0948 -0.2876 -0.0405 -0.0632 -0.0267 -0.0258 -0.0118 -0.0666 -0.0336 -0.0637 -0.0277 -0.0725 -0.1081 -0.0350 -0.1066 -0.1005 -0.0498 -0.0747 -0.0111 -0.0798 -0.0263 -0.0457 -0.0884 -0.0831 -0.0618 -0.0630 -0.0524 -0.0510 -0.0617 -0.0751 -0.0514 -0.0573 -0.0608 -0.0715
S-46	new RuntimeException("Could not create TypeInformation for type " + data[0].getClass().getName() + "; please specify the TypeInformation manually via "+ "StreamExecutionEnvironment#fromElements(Collection, TypeInformation)")
T-46	new RuntimeException("Could not create TypeInformation for type " + data[0].getClass().getName() + "; please specify the TypeInformation manually via "+ "StreamExecutionEnvironment#fromElements(Collection, TypeInformation)",e)
H-46	-0.07535549253225327	new RuntimeException("Could not create TypeInformation for type " + data[0].getClass().getName() + "; please specify the TypeInformation manually via "+ "StreamExecutionEnvironment#fromElements(Collection, TypeInformation)",e)
D-46	-0.07535549253225327	new RuntimeException("Could not create TypeInformation for type " + data[0].getClass().getName() + "; please specify the TypeInformation manually via "+ "StreamExecutionEnvironment#fromElements(Collection, TypeInformation)",e)
P-46	-0.0734 -1.0956 -0.0798 -0.0839 -0.0252 -0.0943 -0.0494 -0.0201 -0.0358 -0.0399 -0.0552 -0.0460 -0.0649 -0.0439 -0.0169 -0.0202 -0.1474 -0.0315 -0.0688 -0.0397 -0.0786 -0.0164 -0.0404 -0.0896 -0.0460 -0.0260 -0.0319 -0.0180 -0.0206 -0.0945 -0.0534 -0.0282 -0.0116 -0.0290 -0.0434 -0.0587 -0.0483 -0.0400 -0.0595 -0.0321 -0.0306 -0.1047 -0.0967 -0.0760 -0.0852
S-781	new StringInputRowParser(new JSONParseSpec(new TimestampSpec("timestamp","auto"),new DimensionsSpec(Arrays.asList("dim1","dim2"),null,null)),null,null,null)
T-781	new StringInputRowParser(new JSONParseSpec(new TimestampSpec("timestamp","auto"),new DimensionsSpec(Arrays.asList("dim1","dim2"),null,null)),null,null,null,null)
H-781	-0.11907640844583511	new StringInputRowParser(new JSONParseSpec(new TimestampSpec("timestamp","auto"),new DimensionsSpec(Arrays.asList("dim1","dim2"),null,null))
D-781	-0.11907640844583511	new StringInputRowParser(new JSONParseSpec(new TimestampSpec("timestamp","auto"),new DimensionsSpec(Arrays.asList("dim1","dim2"),null,null))
P-781	-0.0803 -0.0668 -0.0510 -0.0540 -0.0673 -0.0852 -0.0614 -0.0402 -0.0581 -0.0347 -0.0606 -0.0657 -0.0282 -0.0345 -0.0396 -0.0222 -0.0916 -0.0182 -0.0410 -0.0492 -0.0121 -0.0063 -0.0408 -0.0696 -0.0068 -0.0727 -0.0232 -0.0364 -0.0588 -0.0337 -0.0774 -0.0723 -0.1225 -0.0573 -0.0918 -0.0695 -2.5461 -0.0777
S-72	Status.constructStatuses(get(getBaseURL() + "statuses/public_timeline.json",null,new Paging((long)sinceID).asPostParameterList(Paging.S),false))
T-72	Status.createStatuseList(get(getBaseURL() + "statuses/public_timeline.json",null,new Paging((long)sinceID).asPostParameterList(Paging.S),false))
H-72	-0.049558911472558975	Status.createStatuseList(get(getBaseURL() + "statuses/public_timeline.json",null,new Paging((long)sinceID).asPostParameterList(Paging.S),false))
D-72	-0.049558911472558975	Status.createStatuseList(get(getBaseURL() + "statuses/public_timeline.json",null,new Paging((long)sinceID).asPostParameterList(Paging.S),false))
P-72	-0.0160 -0.1093 -0.0278 -0.0343 -0.0210 -0.0104 -0.0661 -0.0565 -0.0638 -0.0580 -0.0179 -0.0220 -0.0716 -0.0513 -0.0720 -0.0083 -0.0902 -0.0545 -0.1081 -0.0086 -0.0855 -0.0207 -0.0562 -0.0377 -0.0624 -0.0533 -0.0305 -0.0397 -0.0176 -0.0386 -0.0515 -0.0244 -0.0522 -0.0415 -0.0677 -0.0494 -0.0120 -0.0725 -0.0477 -0.0374 -0.0854 -0.0310 -0.1196 -0.0356 -0.0579 -0.0844
S-352	getLsResultStr("/testRoot/testDir",files[1].getCreationTimeMs(),0,LsCommand.STATE_FOLDER,testUser,testUser,files[1].getPermission(),files[1].isFolder())
T-352	getLsResultStr("/testRoot/testDir",files[1].getCreationTimeMs(),1,LsCommand.STATE_FOLDER,testUser,testUser,files[1].getPermission(),files[1].isFolder())
H-352	-0.05203413963317871	getLsResultStr("/testRoot/testDir",files[1].getCreationTimeMs(),1,LsCommand.STATE_FOLDER,testUser,testUser,files[1].getPermission(),files[1].isFolder())
D-352	-0.05203413963317871	getLsResultStr("/testRoot/testDir",files[1].getCreationTimeMs(),1,LsCommand.STATE_FOLDER,testUser,testUser,files[1].getPermission(),files[1].isFolder())
P-352	-0.0251 -0.0405 -0.0561 -0.0176 -0.0145 -0.0789 -0.0313 -0.0716 -0.0448 -0.0340 -0.0621 -0.0246 -0.0510 -0.0504 -0.0492 -0.0292 -0.0820 -0.1598 -0.0388 -0.0365 -0.0242 -0.0879 -0.0307 -0.0794 -0.0103 -0.0758 -0.0586 -0.0551 -0.0863 -0.0500 -0.0442 -0.0824 -0.0212 -0.0603 -0.0665 -0.0434 -0.0695 -0.0242 -0.0686 -0.0609 -0.0206 -0.0458 -0.0738
S-680	builder(SingleSignOnDefinition.INSTANCE).addAttributes(SingleSignOnDefinition.DOMAIN,SingleSignOnDefinition.PATH,SingleSignOnDefinition.HTTP_ONLY,SingleSignOnDefinition.SECURE)
T-680	builder(SingleSignOnDefinition.INSTANCE).addAttributes(SingleSignOnDefinition.DOMAIN,SingleSignOnDefinition.PATH,SingleSignOnDefinition.HTTP_ONLY,SingleSignOnDefinition.SECURE,SingleSignOnDefinition.COOKIE_NAME)
H-680	-0.06830102950334549	builder(SingleSignOnDefinition.INSTANCE).addAttributes(SingleSignOnDefinition.DOMAIN,SingleSignOnDefinition.PATH,SingleSignOnDefinition.HTTP_ONLY,SingleSignOnDefinition.SECURE,SingleSignOnDefinition.COOKIE_NAME)
D-680	-0.06830102950334549	builder(SingleSignOnDefinition.INSTANCE).addAttributes(SingleSignOnDefinition.DOMAIN,SingleSignOnDefinition.PATH,SingleSignOnDefinition.HTTP_ONLY,SingleSignOnDefinition.SECURE,SingleSignOnDefinition.COOKIE_NAME)
P-680	-0.0276 -0.1026 -0.0235 -0.0194 -0.0538 -0.0210 -0.0649 -0.0131 -0.0620 -0.0295 -0.0255 -0.0653 -0.0361 -0.0217 -0.0668 -0.0288 -0.0643 -0.0130 -0.1248 -0.0684 -0.0314 -0.0804 -0.0333 -0.0690 -0.0650 -0.0750 -0.0760 -0.0270 -0.0687 -0.0382 -0.0718 -0.0211 -0.1081 -0.0270 -0.0751 -0.0329 -0.0246 -0.0667 -0.0355 -0.0748 -0.1101 -0.5214 -0.1207 -0.0376 -0.0427 -0.0434 -0.0516 -0.0487 -0.1117 -0.1262 -0.2343 -0.0697
S-364	log.error("Checking bounds key:[{}, {}) & col:[{}, {}) (expect {} keys)",new Object[]{keyStart,keyEnd,startCol,endCol,expected.size()})
T-364	log.debug("Checking bounds key:[{}, {}) & col:[{}, {}) (expect {} keys)",new Object[]{keyStart,keyEnd,startCol,endCol,expected.size()})
H-364	-0.05068592354655266	log.debug("Checking bounds key:[{}, {}) & col:[{}, {}) (expect {} keys)",new Object[]{keyStart,keyEnd,startCol,endCol,expected.size()})
D-364	-0.05068592354655266	log.debug("Checking bounds key:[{}, {}) & col:[{}, {}) (expect {} keys)",new Object[]{keyStart,keyEnd,startCol,endCol,expected.size()})
P-364	-0.0347 -0.0938 -0.0712 -0.0749 -0.0112 -0.0261 -0.1221 -0.0186 -0.0622 -0.0466 -0.0207 -0.0653 -0.0844 -0.0131 -0.0417 -0.0459 -0.0252 -0.1068 -0.0201 -0.0200 -0.0362 -0.0392 -0.0323 -0.0466 -0.0110 -0.0684 -0.0561 -0.0515 -0.0595 -0.0219 -0.0534 -0.0610 -0.0216 -0.0582 -0.0774 -0.0234 -0.0730 -0.0201 -0.1168 -0.0439 -0.0947 -0.0282 -0.0805
S-185	from("jms:queue2:parallelLoanRequestQueue").process(new CreditAgency()).multicast(new BankResponseAggregationStrategy().setAggregatingOutMessage(true)).setParallelProcessing(true)
T-185	from("jms:queue2:parallelLoanRequestQueue").process(new CreditAgency()).multicast(new BankResponseAggregationStrategy().setAggregatingOutMessage(true)).parallelProcessing(true)
H-185	-0.07816971838474274	from("jms:queue2:parallelLoanRequestQueue").process(new CreditAgency()).multicast(new BankResponseAggregationStrategy().setAggregatingOutMessage(true)).setParallelProcessing(true)
D-185	-0.07816971838474274	from("jms:queue2:parallelLoanRequestQueue").process(new CreditAgency()).multicast(new BankResponseAggregationStrategy().setAggregatingOutMessage(true)).setParallelProcessing(true)
P-185	-0.0498 -0.0491 -0.0136 -0.0874 -0.0162 -0.0191 -0.0119 -0.0207 -0.0256 -0.0238 -0.0362 -0.0627 -0.1426 -0.0377 -0.0077 -0.0077 -0.0263 -0.0280 -0.0178 -0.0092 -0.0660 -0.0460 -0.0142 -0.0714 -0.0179 -0.0137 -0.0548 -0.0805 -0.0409 -0.0275 -0.0696 -0.0252 -0.0663 -0.1150 -0.1101 -0.2311 -0.1756 -0.0949 -0.0874 -0.9409 -0.1463 -0.0947
S-354	testSame("var foo = function (a) {}; foo.call(this, 1);","var foo = function () {var a$jscomp$1 = 1;}; foo.call(this);")
T-354	test("var foo = function (a) {}; foo.call(this, 1);","var foo = function () {var a$jscomp$1 = 1;}; foo.call(this);")
H-354	-0.05071640387177467	test("var foo = function (a) {}; foo.call(this, 1);","var foo = function () {var a$jscomp$1 = 1;}; foo.call(this);")
D-354	-0.05071640387177467	test("var foo = function (a) {}; foo.call(this, 1);","var foo = function () {var a$jscomp$1 = 1;}; foo.call(this);")
P-354	-0.2533 -0.0401 -0.0241 -0.0393 -0.0448 -0.0283 -0.0884 -0.0581 -0.0534 -0.0084 -0.0344 -0.0726 -0.0231 -0.0548 -0.0393 -0.0567 -0.0500 -0.0501 -0.0459 -0.0633 -0.0485 -0.0343 -0.0133 -0.0348 -0.0421 -0.1094 -0.0299 -0.0413 -0.0115 -0.0152 -0.0574 -0.0343 -0.0437 -0.0152 -0.0370 -0.0724 -0.0271 -0.0547 -0.0517 -0.0318 -0.1078 -0.0884
S-183	Status.constructStatuses(get(getBaseURL() + "statuses/user_timeline/" + id+ ".json",null,paging.asPostParameterList(),http.isAuthenticationEnabled()))
T-183	Status.createStatuseList(get(getBaseURL() + "statuses/user_timeline/" + id+ ".json",null,paging.asPostParameterList(),http.isAuthenticationEnabled()))
H-183	-0.05045458674430847	Status.createStatuseList(get(getBaseURL() + "statuses/user_timeline/" + id+ ".json",null,paging.asPostParameterList(),http.isAuthenticationEnabled()))
D-183	-0.05045458674430847	Status.createStatuseList(get(getBaseURL() + "statuses/user_timeline/" + id+ ".json",null,paging.asPostParameterList(),http.isAuthenticationEnabled()))
P-183	-0.0178 -0.1035 -0.0271 -0.0279 -0.0250 -0.0127 -0.0782 -0.0621 -0.0648 -0.0534 -0.0174 -0.0209 -0.0659 -0.0566 -0.0596 -0.0091 -0.0684 -0.0396 -0.1172 -0.0092 -0.0457 -0.0533 -0.0501 -0.0595 -0.0205 -0.0234 -0.0648 -0.0402 -0.0781 -0.0592 -0.0142 -0.1084 -0.1087 -0.0494 -0.0126 -0.0737 -0.0369 -0.1060 -0.0658 -0.0193 -0.0181 -0.0341 -0.0912
S-693	addKeys(externalClasses,DATE_TIME,"org.joda.time.DateTime","org.joda.time.ReadableDateTime","javax.xml.datatype.XMLGregorianCalendar")
T-693	addKeys(externalClasses,DATE_TIME,"org.joda.time.DateTime","org.joda.time.ReadableDateTime","javax.xml.datatype.XMLGregorianCalendar","java.time.LocalDateTime")
H-693	-0.17379049956798553	addKeys(externalClasses,DATE_TIME,"org.joda.time.DateTime","org.joda.time.ReadableDateTime","javax.xml.datatype.XMLGregorianCalendar")
D-693	-0.17379049956798553	addKeys(externalClasses,DATE_TIME,"org.joda.time.DateTime","org.joda.time.ReadableDateTime","javax.xml.datatype.XMLGregorianCalendar")
P-693	-0.1205 -0.1102 -0.1001 -0.1898 -0.0298 -0.1426 -0.2973 -0.1035 -0.0475 -0.1111 -0.3360 -0.0845 -0.0375 -0.0120 -0.0737 -0.0640 -0.0639 -0.0370 -0.0589 -0.2609 -0.0982 -0.0461 -0.0182 -0.0838 -0.0854 -0.0743 -0.0294 -0.0669 -0.1368 -0.0593 -0.0855 -0.0375 -0.0853 -0.0146 -0.0839 -0.0250 -0.0531 -0.0391 -3.4637 -0.0847
S-638	twitter4j.List.constructListOfLists(get(getApiBaseURL() + V1 + user+ "/lists/memberships.json?cursor="+ cursor,true))
T-638	twitter4j.List.createListList(get(getApiBaseURL() + V1 + user+ "/lists/memberships.json?cursor="+ cursor,true))
H-638	-0.0682152658700943	twitter4j.List.createListList(get(getApiBaseURL() + V1 + user+ "/lists/memberships.json?cursor="+ cursor,true))
D-638	-0.0682152658700943	twitter4j.List.createListList(get(getApiBaseURL() + V1 + user+ "/lists/memberships.json?cursor="+ cursor,true))
P-638	-0.0216 -0.0565 -0.0310 -0.0623 -0.0557 -0.0732 -0.0396 -0.0673 -0.1215 -0.6883 -0.0620 -0.0577 -0.0483 -0.0361 -0.0382 -0.0382 -0.0607 -0.0627 -0.0386 -0.0888 -0.0444 -0.0501 -0.0583 -0.0273 -0.0301 -0.0492 -0.0441 -0.0376 -0.0167 -0.0890 -0.0239 -0.0437 -0.0313 -0.0363 -0.0243 -0.0664 -0.0987 -0.0542 -0.0867
S-110	Arrays.asList("spring-boot-starter-tomcat-","tomcat-embed-core-","tomcat-embed-el-","tomcat-embed-logging-juli-")
T-110	Arrays.asList("spring-boot-starter-tomcat-","tomcat-embed-core-","tomcat-embed-el-","tomcat-embed-logging-juli-","tomcat-embed-websocket-")
H-110	-0.10293273627758026	Arrays.asList("spring-boot-starter-tomcat-","tomcat-embed-core-","tomcat-embed-el-","tomcat-embed-logging-juli-")
D-110	-0.10293273627758026	Arrays.asList("spring-boot-starter-tomcat-","tomcat-embed-core-","tomcat-embed-el-","tomcat-embed-logging-juli-")
P-110	-0.0353 -0.0686 -0.0256 -0.0549 -0.0359 -0.1031 -0.0135 -0.0946 -0.0053 -0.1579 -0.0815 -0.1568 -0.1431 -0.0606 -0.1881 -0.0440 -0.1738 -0.0514 -0.1208 -0.1363 -0.0588 -0.1418 -0.0609 -0.1110 -0.0066 -0.0870 -0.1301 -0.0641 -0.1538 -0.0405 -0.1716 -0.2033 -0.1017 -0.0349 -0.0599 -0.1013 -0.5587 -0.0744
S-104	addListenerMethod1.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PROMISE_ADD_LISTENER,NettyConstants.SCOPE,ExecutionPolicy.BOUNDARY)
T-104	addListenerMethod2.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PROMISE_ADD_LISTENER,NettyConstants.SCOPE,ExecutionPolicy.BOUNDARY)
H-104	-0.07087759673595428	addListenerMethod2.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PROMISE_ADD_LISTENER,NettyConstants.SCOPE,ExecutionPolicy.BOUNDARY)
D-104	-0.07087759673595428	addListenerMethod2.addScopedInterceptor(NettyConstants.INTERCEPTOR_CHANNEL_PROMISE_ADD_LISTENER,NettyConstants.SCOPE,ExecutionPolicy.BOUNDARY)
P-104	-0.1385 -0.0152 -0.2676 -0.0470 -0.0107 -0.0212 -0.0883 -0.0130 -0.0347 -0.0841 -0.0443 -0.0087 -0.0210 -0.1058 -0.0157 -0.0991 -0.0859 -0.2456 -0.0617 -0.0267 -0.0947 -0.2841 -0.0907 -0.0352 -0.0631 -0.0884 -0.0187 -0.0571 -0.1089 -0.0324 -0.0643 -0.0218 -0.0235 -0.0888 -0.0072 -0.0096 -0.0881 -0.0820
S-756	GL.glTexSubImage2DEXT(target,level,xoffset,yoffset,width,height,format,type,pixels,Memory.getPosition(pixels))
T-756	GL.glTexSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixels,Memory.getPosition(pixels))
H-756	-0.04892361909151077	GL.glTexSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixels,Memory.getPosition(pixels))
D-756	-0.04892361909151077	GL.glTexSubImage2D(target,level,xoffset,yoffset,width,height,format,type,pixels,Memory.getPosition(pixels))
P-756	-0.0113 -0.0930 -0.0088 -0.0273 -0.0423 -0.0562 -0.0556 -0.0416 -0.0438 -0.0561 -0.0611 -0.0609 -0.0597 -0.0430 -0.0199 -0.0607 -0.0387 -0.0173 -0.0517 -0.0761 -0.0463 -0.1121 -0.0501 -0.0483 -0.0470 -0.0303 -0.0485 -0.0308 -0.0631 -0.0057 -0.0871 -0.0780 -0.0331 -0.0548 -0.0082 -0.0650 -0.0770
S-651	NONCONFORMING_LR_RULE(165,"rule <arg> is left recursive but doesn't conform to a pattern ANTLR can handle",ErrorSeverity.ERROR)
T-651	NONCONFORMING_LR_RULE(169,"rule <arg> is left recursive but doesn't conform to a pattern ANTLR can handle",ErrorSeverity.ERROR)
H-651	-0.16716575622558594	NONCONFORMING_LR_RULE(19,"rule <arg> is left recursive but doesn't conform to a pattern ANTLR can handle",ErrorSeverity.ERROR)
D-651	-0.16716575622558594	NONCONFORMING_LR_RULE(19,"rule <arg> is left recursive but doesn't conform to a pattern ANTLR can handle",ErrorSeverity.ERROR)
P-651	-0.4148 -0.5977 -0.0265 -0.0216 -0.0766 -0.0919 -0.1026 -0.1213 -1.1156 -1.9742 -0.0215 -0.0232 -0.0408 -0.0440 -0.0597 -0.0531 -0.0347 -0.0184 -0.0715 -0.0058 -0.0388 -0.0529 -0.0350 -0.0715 -0.0731 -0.0496 -0.0481 -0.0844 -0.0335 -0.3576 -0.0416 -0.0596 -0.0318 -0.0835 -0.0301 -0.0876 -0.0909
S-785	Status.constructStatuses(get(getBaseURL() + "statuses/retweeted_to_me.json",null,paging.asPostParameterList(),true))
T-785	Status.createStatuseList(get(getBaseURL() + "statuses/retweeted_to_me.json",null,paging.asPostParameterList(),true))
H-785	-0.05305514857172966	Status.createStatuseList(get(getBaseURL() + "statuses/retweeted_to_me.json",null,paging.asPostParameterList(),true))
D-785	-0.05305514857172966	Status.createStatuseList(get(getBaseURL() + "statuses/retweeted_to_me.json",null,paging.asPostParameterList(),true))
P-785	-0.0157 -0.1017 -0.0257 -0.0425 -0.0322 -0.0117 -0.0736 -0.0588 -0.0644 -0.0569 -0.0184 -0.0242 -0.0690 -0.0537 -0.0756 -0.0112 -0.0901 -0.0290 -0.0090 -0.0158 -0.1112 -0.0406 -0.1265 -0.0188 -0.0863 -0.0256 -0.0649 -0.0439 -0.0844 -0.0671 -0.0243 -0.1078 -0.0848 -0.0474 -0.0119 -0.0530 -0.0718 -0.0349 -0.0847
S-398	!StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),"flush") && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),"grant")
T-398	!StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),"flush") && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),"grant") && !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),"create user")&& !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),"drop user")&& !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),"create database")&& !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),"drop database")
H-398	-0.21267029643058777	!StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),"flush") || !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),"grant")
D-398	-0.21267029643058777	!StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),"flush") || !StringUtils.startsWithIgnoreCase(StringUtils.trim(ddl),"grant")
P-398	-0.0548 -0.0355 -0.0341 -0.0685 -0.0413 -1.3472 -0.0389 -0.0415 -0.0404 -0.0857 -0.0203 -0.0504 -0.1406 -0.0766 -0.0550 -0.0302 -0.0927 -2.1274 -0.0591 -0.0351 -0.0364 -0.0775 -0.0229 -1.2590 -0.0557 -0.0398 -0.0441 -0.0835 -0.0294 -0.0586 -0.1711 -0.0610 -0.0701 -0.2003 -0.0474 -0.9241
S-226	HELSINKY{ @Override public ServiceNowProducer get( ServiceNowEndpoint endpoint) throws Exception { return new HelsinkiServiceNowProducer(endpoint); } }
T-226	HELSINKI{ @Override public ServiceNowProducer get( ServiceNowEndpoint endpoint) throws Exception { return new HelsinkiServiceNowProducer(endpoint); } }
H-226	-0.16127195954322815	HELSINKY{ @Override public ServiceNowProducer get( ServiceNowEndpoint endpoint) throws Exception { return new HelsinkiServiceNowProducer(endpoint); } }
D-226	-0.16127195954322815	HELSINKY{ @Override public ServiceNowProducer get( ServiceNowEndpoint endpoint) throws Exception { return new HelsinkiServiceNowProducer(endpoint); } }
P-226	-2.5566 -0.4272 -0.1305 -0.0394 -0.0580 -0.4510 -0.0501 -0.0265 -0.0372 -0.2532 -0.0338 -0.0188 -0.1726 -0.0709 -0.0403 -0.0258 -0.0305 -0.0505 -0.0582 -0.0575 -0.0422 -0.0649 -0.0555 -0.1258 -0.3425 -0.0131 -0.1216 -0.0704 -0.0552 -0.0190 -0.0656 -0.0294 -0.0363 -0.0405 -0.0536 -0.0817
S-491	DiagnosticType.disabled("JSC_GOOG_MODULE_IN_NON_MODULE","goog.module() call must be the first statement in a module.")
T-491	DiagnosticType.error("JSC_GOOG_MODULE_IN_NON_MODULE","goog.module() call must be the first statement in a module.")
H-491	-0.08856233954429626	DiagnosticType.disabled("JSC_GOOG_MODULE_IN_NON_MODULE","goog.module() call must be the first statement in a module.")
D-491	-0.08856233954429626	DiagnosticType.disabled("JSC_GOOG_MODULE_IN_NON_MODULE","goog.module() call must be the first statement in a module.")
P-491	-0.0110 -0.0433 -0.1197 -0.9345 -0.2112 -0.0326 -0.0788 -0.0957 -0.0106 -0.0054 -0.1033 -0.0154 -0.0836 -0.0375 -0.1010 -0.0181 -0.0991 -0.0219 -0.0695 -0.0478 -0.0140 -0.0908 -0.0489 -0.1087 -0.0359 -0.0232 -0.1216 -0.0443 -0.0417 -0.0168 -0.0468 -0.0601 -0.0511 -0.1657 -0.0899
S-691	testError("class Foo extends BaseFoo { method() { Foo.base(this, 'method'); } }",GOOG_BASE_CLASS_ERROR)
T-691	testError("class Foo extends BaseFoo { method() { Foo.base(this, 'method'); } }",BASE_CLASS_ERROR)
H-691	-0.07921820133924484	testWarning("class Foo extends BaseFoo { method() { Foo.base(this, 'method'); } }",GOOG_BASE_CLASS_ERROR)
D-691	-0.07921820133924484	testWarning("class Foo extends BaseFoo { method() { Foo.base(this, 'method'); } }",GOOG_BASE_CLASS_ERROR)
P-691	-0.1031 -0.5532 -0.0577 -0.1052 -0.0422 -0.0192 -0.0280 -0.0850 -0.0711 -0.0672 -0.0605 -0.0770 -0.0506 -0.0930 -0.0499 -0.0645 -0.0381 -0.0610 -0.0642 -0.0609 -0.0614 -0.0607 -0.0465 -0.1034 -0.1361 -0.0070 -0.1119 -0.0261 -0.0859 -0.0390 -0.0876 -0.0262 -0.0599 -0.0899
S-800	Status.constructStatuses(get(getBaseURL() + "favorites/" + id+ ".json","page",String.valueOf(page),true))
T-800	Status.createStatuseList(get(getBaseURL() + "favorites/" + id+ ".json","page",String.valueOf(page),true))
H-800	-0.046564098447561264	Status.createStatuseList(get(getBaseURL() + "favorites/" + id+ ".json","page",String.valueOf(page),true))
D-800	-0.046564098447561264	Status.createStatuseList(get(getBaseURL() + "favorites/" + id+ ".json","page",String.valueOf(page),true))
P-800	-0.0178 -0.1080 -0.0348 -0.0482 -0.0216 -0.0228 -0.0673 -0.0547 -0.0690 -0.0459 -0.0151 -0.0180 -0.0604 -0.0526 -0.0534 -0.0474 -0.0093 -0.0419 -0.0551 -0.0549 -0.0500 -0.0193 -0.0197 -0.0671 -0.0302 -0.0572 -0.0427 -0.1011 -0.0340 -0.0642 -0.0190 -0.0554 -0.0598 -0.0292 -0.0825
S-545	/** * Frequency in milliseconds that the consumer offsets are auto-committed to Kafka if 'enable.auto.commit' true. */ private Long autoCommitInterval;
T-545	/** * Frequency in milliseconds that the consumer offsets are auto-committed to Kafka if 'enable.auto.commit' true. */ private Integer autoCommitInterval;
H-545	-0.06308820098638535	/** * Frequency in milliseconds that the consumer offsets are auto-committed to Kafka if 'enable.auto.commit' true. */ private Integer autoCommitInterval;
D-545	-0.06308820098638535	/** * Frequency in milliseconds that the consumer offsets are auto-committed to Kafka if 'enable.auto.commit' true. */ private Integer autoCommitInterval;
P-545	-0.0140 -0.0309 -0.0737 -0.0766 -0.1294 -0.0783 -0.0442 -0.0705 -0.0983 -0.0881 -0.0223 -0.1542 -0.0247 -0.0438 -0.0169 -0.0347 -0.0387 -0.0303 -0.0828 -0.0174 -0.0916 -0.0313 -0.0406 -0.0918 -0.0615 -0.0335 -0.0592 -0.2320 -0.0509 -0.0661 -0.0280 -0.0326 -0.0931
S-373	booleanSessionProperty(LEGACY_ORDER_BY,"Use legacy rules for column resolution in ORDER BY clause",false,featuresConfig.isLegacyOrderBy())
T-373	booleanSessionProperty(LEGACY_ORDER_BY,"Use legacy rules for column resolution in ORDER BY clause",featuresConfig.isLegacyOrderBy(),false)
H-373	-0.15001638233661652	booleanSessionProperty(LEGACY_ORDER_BY,"Use legacy rules for column resolution in ORDER BY clause",featuresConfig.isLegacyOrderBy(),false)
D-373	-0.15001638233661652	booleanSessionProperty(LEGACY_ORDER_BY,"Use legacy rules for column resolution in ORDER BY clause",featuresConfig.isLegacyOrderBy(),false)
P-373	-0.0262 -0.0346 -0.0148 -0.0500 -0.2952 -0.0208 -0.1035 -0.1271 -0.0907 -0.1396 -0.0268 -0.0732 -0.0032 -0.0124 -0.0436 -0.0445 -0.0281 -0.0811 -0.1621 -0.0383 -0.2677 -0.0647 -0.1857 -0.0807 -0.0930 -0.1672 -0.6019 -0.8826 -0.1383 -0.5422 -0.2775 -0.0832
S-784	Status.constructStatuses(get(getBaseURL() + "statuses/user_timeline/" + id+ ".json",http.isAuthenticationEnabled()))
T-784	Status.createStatuseList(get(getBaseURL() + "statuses/user_timeline/" + id+ ".json",http.isAuthenticationEnabled()))
H-784	-0.04826205596327782	Status.createStatuseList(get(getBaseURL() + "statuses/user_timeline/" + id+ ".json",http.isAuthenticationEnabled()))
D-784	-0.04826205596327782	Status.createStatuseList(get(getBaseURL() + "statuses/user_timeline/" + id+ ".json",http.isAuthenticationEnabled()))
P-784	-0.0204 -0.1063 -0.0354 -0.0378 -0.0196 -0.0224 -0.0736 -0.0610 -0.0687 -0.0521 -0.0181 -0.0209 -0.0611 -0.0582 -0.0591 -0.0084 -0.0643 -0.0408 -0.1199 -0.0099 -0.0412 -0.0515 -0.0537 -0.0594 -0.0156 -0.0228 -0.0684 -0.0383 -0.1061 -0.0697 -0.0222 -0.0218 -0.0251 -0.0873
S-151	synchronized (this) { if (transformed == null) { transformed=initializer.initializeBroadcastVariable(data); data=null; } return transformed; }
T-151	synchronized (references) { if (transformed == null) { transformed=initializer.initializeBroadcastVariable(data); data=null; } return transformed; }
H-151	-0.0706910565495491	synchronized (initializer) { if (transformed == null) { transformed=initializer.initializeBroadcastVariable(data); data=null; } return transformed; }
D-151	-0.0706910565495491	synchronized (initializer) { if (transformed == null) { transformed=initializer.initializeBroadcastVariable(data); data=null; } return transformed; }
P-151	-0.0058 -0.1023 -0.0715 -0.0994 -0.0451 -0.0763 -0.0688 -0.0088 -0.0534 -0.0671 -0.0715 -0.0682 -0.2241 -0.0483 -0.0054 -0.0843 -0.0180 -0.1089 -0.0555 -0.0580 -0.0459 -0.0371 -0.1615 -0.0544 -0.1877 -0.0239 -0.0335 -0.0514 -0.2047 -0.0298 -0.0345 -0.0571
S-612	DiagnosticType.error("JSC_NAME_REFERENCE_IN_EXTERNS","accessing name {0} in externs has no effect")
T-612	DiagnosticType.warning("JSC_NAME_REFERENCE_IN_EXTERNS","accessing name {0} in externs has no effect")
H-612	-0.07502100616693497	DiagnosticType.warning("JSC_NAME_REFERENCE_IN_EXTERNS","accessing name {0} in externs has no effect")
D-612	-0.07502100616693497	DiagnosticType.warning("JSC_NAME_REFERENCE_IN_EXTERNS","accessing name {0} in externs has no effect")
P-612	-0.0115 -0.0477 -0.1107 -0.6952 -0.0434 -0.0257 -0.0726 -0.0960 -0.0915 -0.0776 -0.0058 -0.0706 -0.0692 -0.1045 -0.0417 -0.0079 -0.0423 -0.1348 -0.0193 -0.0348 -0.0739 -0.0194 -0.0497 -0.0419 -0.0219 -0.0510 -0.0483 -0.0435 -0.0175 -0.0699 -0.0856
S-235	!template.contains(PATH_AUTO_NODE_INDEX) && !template.contains(PATH_AUTO_RELATIONSHIP_INDEX)
T-235	!template.contains(PATH_AUTO_NODE_INDEX) && !template.contains(PATH_AUTO_RELATIONSHIP_INDEX) && !template.contains("_auto_")
H-235	-0.17488057911396027	!template.contains(PATH_AUTO_RELATIONSHIP_INDEX) || !template.contains(PATH_AUTO_RELATIONSHIP_INDEX)
D-235	-0.17488057911396027	!template.contains(PATH_AUTO_RELATIONSHIP_INDEX) || !template.contains(PATH_AUTO_RELATIONSHIP_INDEX)
P-235	-0.0985 -0.8560 -0.1039 -0.0378 -0.0601 -0.0240 -0.0933 -0.0452 -0.1269 -0.9229 -0.0075 -0.0176 -0.0034 -0.0620 -0.0274 -0.0650 -0.4196 -1.1346 -0.8182 -0.1388 -0.0290 -0.0544 -0.0225 -0.0649 -0.0822 -0.0597 -0.0093 -0.0108 -0.0200 -0.0051 -0.0644 -0.1030 -0.0609 -0.2972
S-470	NbPreferences.forModule(DataTableTopComponent.class).getBoolean(DATA_LABORATORY_ONLY_VISIBLE,false)
T-470	NbPreferences.forModule(DataTableTopComponent.class).getBoolean(DATA_LABORATORY_ONLY_VISIBLE,true)
H-470	-0.07682868838310242	NbPreferences.forModule(DataTableTopComponent.class).getBoolean(DATA_LABORATORY_ONLY_VISIBLE,true)
D-470	-0.07682868838310242	NbPreferences.forModule(DataTableTopComponent.class).getBoolean(DATA_LABORATORY_ONLY_VISIBLE,true)
P-470	-0.0412 -0.1154 -0.0350 -0.0977 -0.0745 -0.0568 -0.0589 -0.1204 -0.0768 -0.0137 -0.0707 -0.0385 -0.0686 -0.0612 -0.0432 -0.0742 -0.0225 -0.0883 -0.0975 -0.0529 -0.0153 -0.0418 -0.0623 -0.0140 -0.0823 -0.3287 -0.0821 -0.2180 -0.0615 -0.0909
S-173	new SimpleAttributeDefinition("ha",new ModelNode().set(HornetQClient.DEFAULT_HA),ModelType.BOOLEAN,false)
T-173	new SimpleAttributeDefinition("ha",new ModelNode().set(HornetQClient.DEFAULT_HA),ModelType.BOOLEAN,true)
H-173	-0.07732266932725906	new SimpleAttributeDefinition("ha",new ModelNode().set(HornetQClient.DEFAULT_HA),ModelType.BOOLEAN,true)
D-173	-0.07732266932725906	new SimpleAttributeDefinition("ha",new ModelNode().set(HornetQClient.DEFAULT_HA),ModelType.BOOLEAN,true)
P-173	-0.0740 -0.0212 -0.0475 -0.0181 -0.0472 -0.0222 -0.1060 -0.0503 -0.0119 -0.0841 -0.0568 -0.0741 -0.0917 -0.0205 -0.0462 -0.0873 -0.0906 -0.0922 -0.0407 -0.0782 -0.3376 -0.1839 -0.0218 -0.0532 -0.0849 -0.0106 -0.0852 -0.1716 -0.1223 -0.0878
S-772	GL.glCopyTexSubImage2DEXT(target,level,xoffset,yoffset,x,y,width,height)
T-772	GL.glCopyTexSubImage2D(target,level,xoffset,yoffset,x,y,width,height)
H-772	-0.05774474889039993	GL.glCopyTexSubImage2D(target,level,xoffset,yoffset,x,y,width,height)
D-772	-0.05774474889039993	GL.glCopyTexSubImage2D(target,level,xoffset,yoffset,x,y,width,height)
P-772	-0.0142 -0.0945 -0.0112 -0.0805 -0.0296 -0.0333 -0.0577 -0.0500 -0.0501 -0.0453 -0.0717 -0.0606 -0.0602 -0.0605 -0.0675 -0.0277 -0.0675 -0.0460 -0.0196 -0.0643 -0.0556 -0.0666 -0.0689 -0.0746 -0.0739 -0.0545 -0.0922 -0.0998 -0.0765
S-625	/** * Gets the key of service port. * @return key of service port */ public String getPortKey(){ return mPortKey; }
T-625	/** * Gets the key of service port. * @return key of service port */ public PropertyKey getPortKey(){ return mPortKey; }
H-625	-0.05711887776851654	/** * Gets the key of service port. * @return key of service port */ public PropertyKey getPortKey(){ return mPortKey; }
D-625	-0.05711887776851654	/** * Gets the key of service port. * @return key of service port */ public PropertyKey getPortKey(){ return mPortKey; }
P-625	-0.0136 -0.0237 -0.0265 -0.0257 -0.0761 -0.0690 -0.0806 -0.0664 -0.0304 -0.0824 -0.0335 -0.0315 -0.0338 -0.1028 -0.0555 -0.0996 -0.0739 -0.0313 -0.0217 -0.1858 -0.0387 -0.0208 -0.0687 -0.0598 -0.0663 -0.0768 -0.0286 -0.0738 -0.0328 -0.0436 -0.0970
S-494	StringUtil.in(name,"base","basefont","bgsound","command","link","meta","noframes","style","title")
T-494	StringUtil.in(name,"base","basefont","bgsound","command","link","meta","noframes","script","style","title")
H-494	-0.22767853736877441	StringUtil.in(name,"base","basefont","bgsound","command","link","meta","noframes","style","title","value")
D-494	-0.22767853736877441	StringUtil.in(name,"base","basefont","bgsound","command","link","meta","noframes","style","title","value")
P-494	-0.5226 -0.0754 -0.1283 -0.2919 -0.0594 -0.1123 -0.0419 -0.0558 -0.0794 -0.0370 -0.0635 -0.0285 -0.0239 -0.0302 -0.0526 -0.0138 -0.0649 -0.0148 -0.0505 -0.2757 -0.0665 -0.0721 -0.0613 -0.0496 -0.0723 -0.0171 -0.0772 -0.1380 -0.3275 -4.0731 -0.2253 -0.0834
S-12	test(externs,js,(String)null,ConstCheck.CONST_REASSIGNED_VALUE_ERROR,null)
T-12	test(externs,js,(String)null,null,ConstCheck.CONST_REASSIGNED_VALUE_ERROR)
H-12	-0.09564772248268127	test(externs,js,(String)null,ConstCheck.CONST_REASSIGNED_VALUE_ERROR,null)
D-12	-0.09564772248268127	test(externs,js,(String)null,ConstCheck.CONST_REASSIGNED_VALUE_ERROR,null)
P-12	-0.1612 -0.2819 -0.0185 -0.0105 -0.0496 -0.0579 -0.0151 -0.0879 -0.1326 -0.0546 -0.0919 -0.0615 -0.0955 -0.0107 -0.0392 -0.0814 -0.0116 -0.0779 -0.0470 -0.0176 -0.0029 -0.0217 -0.0869 -0.0908 -0.0933 -0.0162 -0.4882 -0.0770 -0.4840 -0.1043
S-615	LOG.debug("Retrieving location for state={} of job={} from the cache.",jobId,queryableStateName)
T-615	LOG.debug("Retrieving location for state={} of job={} from the cache.",queryableStateName,jobId)
H-615	-0.06283515691757202	LOG.debug("Retrieving location for state={} of job={} from the cache.",queryableStateName,jobId)
D-615	-0.06283515691757202	LOG.debug("Retrieving location for state={} of job={} from the cache.",queryableStateName,jobId)
P-615	-0.0301 -0.0942 -0.4380 -0.0767 -0.0136 -0.0538 -0.0526 -0.0424 -0.0415 -0.0907 -0.0200 -0.0523 -0.0403 -0.0506 -0.0433 -0.0613 -0.0409 -0.0656 -0.0341 -0.0590 -0.0120 -0.0148 -0.0400 -0.0497 -0.0754 -0.0211 -0.0853 -0.0397 -0.0832
S-271	assertTrueEventually(new AssertTask(){ @Override public void run() throws Exception { assertFalse(lock.isLocked()); } } ,5)
T-271	assertTrueEventually(new AssertTask(){ @Override public void run() throws Exception { assertFalse(lock.isLocked()); } } ,20)
H-271	-0.0645911768078804	assertTrueEventually(new AssertTask(){ @Override public void run() throws Exception { assertFalse(lock.isLocked()); } } ,20)
D-271	-0.0645911768078804	assertTrueEventually(new AssertTask(){ @Override public void run() throws Exception { assertFalse(lock.isLocked()); } } ,20)
P-271	-0.0501 -0.0522 -0.0062 -0.0778 -0.0413 -0.0263 -0.0363 -0.0517 -0.0564 -0.0282 -0.0475 -0.0400 -0.0378 -0.0734 -0.0485 -0.0465 -0.0621 -0.1012 -0.0715 -0.0306 -0.0852 -0.0673 -0.0145 -0.0147 -0.0711 -0.0652 -0.2263 -0.2511 -0.0921
S-380	new JSONParseSpec(timestampSpec,new DimensionsSpec(dimensions,dimensionExclusions,spatialDimensions),JSONParseSpec.JSON)
T-380	new JSONParseSpec(timestampSpec,new DimensionsSpec(dimensions,dimensionExclusions,spatialDimensions))
H-380	-0.09427616745233536	new JSONParseSpec(timestampSpec,new DimensionsSpec(dimensions,dimensionExclusions,spatialDimensions))
D-380	-0.09427616745233536	new JSONParseSpec(timestampSpec,new DimensionsSpec(dimensions,dimensionExclusions,spatialDimensions))
P-380	-0.0836 -0.0301 -0.0476 -0.0386 -0.0574 -0.0420 -0.0480 -0.0706 -0.0298 -0.0178 -0.0130 -0.0338 -0.0639 -0.0830 -0.0436 -0.0254 -0.0385 -0.0134 -0.0568 -0.0152 -0.0431 -1.1956 -0.0774
S-296	cache.setColor(style.fontColor == null ? color : Color.tmp.set(color).mul(style.fontColor))
T-296	cache.setColors(style.fontColor == null ? color : Color.tmp.set(color).mul(style.fontColor))
H-296	-0.06764674186706543	cache.setColors(style.fontColor == null ? color : Color.tmp.set(color).mul(style.fontColor))
D-296	-0.06764674186706543	cache.setColors(style.fontColor == null ? color : Color.tmp.set(color).mul(style.fontColor))
P-296	-0.0255 -0.0807 -0.0952 -0.3300 -0.0485 -0.0303 -0.0775 -0.0404 -0.0888 -0.0444 -0.0386 -0.0342 -0.1353 -0.0467 -0.0194 -0.0767 -0.0174 -0.0641 -0.0628 -0.0634 -0.0162 -0.0944 -0.0306 -0.0861 -0.0212 -0.0792 -0.0385 -0.0825 -0.0770 -0.0836
S-584	Status.constructStatuses(get(getBaseURL() + "statuses/retweets_of_me.json",null,true))
T-584	Status.createStatuseList(get(getBaseURL() + "statuses/retweets_of_me.json",null,true))
H-584	-0.05479970574378967	Status.createStatuseList(get(getBaseURL() + "statuses/retweets_of_me.json",null,true))
D-584	-0.05479970574378967	Status.createStatuseList(get(getBaseURL() + "statuses/retweets_of_me.json",null,true))
P-584	-0.0152 -0.1078 -0.0271 -0.0564 -0.0315 -0.0218 -0.0700 -0.0585 -0.0676 -0.0566 -0.0180 -0.0200 -0.0651 -0.0540 -0.0756 -0.0095 -0.1036 -0.0551 -0.0168 -0.1344 -0.0274 -0.1094 -0.0142 -0.0900 -0.0206 -0.0574 -0.0430 -0.0757 -0.0684 -0.0409 -0.0872
S-170	refreshableViewWrapper.addView(newEmptyView,ViewGroup.LayoutParams.MATCH_PARENT,ViewGroup.LayoutParams.MATCH_PARENT)
T-170	refreshableViewWrapper.addView(newEmptyView)
H-170	-0.1870352327823639	refreshableViewWrapper.addView(newEmptyView,ViewGroup.LayoutParams.MATCH_PARENT,ViewGroup.LayoutParams.MATCH_PARENT,ViewGroup.LayoutParams.MATCH_PARENT)
D-170	-0.1870352327823639	refreshableViewWrapper.addView(newEmptyView,ViewGroup.LayoutParams.MATCH_PARENT,ViewGroup.LayoutParams.MATCH_PARENT,ViewGroup.LayoutParams.MATCH_PARENT)
P-170	-0.0398 -0.0156 -0.0380 -0.0425 -0.0824 -0.0266 -0.0409 -0.1469 -0.1515 -0.1812 -0.0595 -0.0820 -0.0782 -0.0881 -0.4275 -0.0759 -0.0113 -0.1074 -0.7451 -0.0674 -0.1206 -0.0861 -0.4832 -0.0938 -0.0176 -0.0986 -0.5185 -0.4739 -0.3468 -0.0905 -0.5839 -0.0776 -0.0241 -0.0917 -0.5181 -0.7055 -0.0820
2021-10-24 19:42:20 | INFO | fairseq_cli.generate | NOTE: hypothesis and token scores are output in base 2
2021-10-24 19:42:20 | INFO | fairseq_cli.generate | Translated 827 sentences (11656 tokens) in 9.3s (89.24 sentences/s, 1257.85 tokens/s)
2021-10-24 19:42:20 | INFO | fairseq_cli.generate | Generate test with beam=5: BLEU(score=85.5032385552283, counts=[9592, 8517, 7591, 6809], totals=[10189, 9362, 8544, 7747], precisions=[94.14074001374031, 90.97415082247383, 88.84597378277154, 87.89208725958436], bp=0.9455005318810881, sys_len=10189, ref_len=10760)
