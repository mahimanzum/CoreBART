e != null && !_name.equals("$cmd")
!mTags.containsKey(t)
PApplet.splitTokens(properties.getStringAttribute("points"))
Log.e(TAG,"Found activity " + r + " in proc activity list using "+ r.app+ " instead of expected "+ app)
JettyWebSocketClient.WS_URI.getDisplayName()
col2d.addiColumnVector(epsilon1d)
createBaseEntitlementAndCheckForCompletion(account.getId(),"bundleKey","Shotgun",ProductCategory.BASE,BillingPeriod.MONTHLY,NextEvent.CREATE,NextEvent.BLOCK,NextEvent.INVOICE)
(ChronicleEngineEndpoint)getEndpoint()
mAllowGeneratedReplies=true
directoryDelegate.renameRepositoryDirectory(dir.getObjectId(),dir,dir.getName())
ir.mHandler != null && ir.mImageListener != null
isMarked(node)
!selectorName.startsWith("--")
new WxMpMassGroupMessageGsonAdapter()
!assignableValue.getValue().equals(populateValueRequest.getProperty().getValue())
LOG.warn("I/O error when running rpc",e)
f1.getPanelDisplayName().compareToIgnoreCase(f2.getPanelDisplayName())
TypeResolver.resolve(channelTypeUID,locale)
masm.cas(size,result,newVal,address,true,true)
logger.trace("Creating bloom filter for {} elements and spec {}",numElements,spec)
makeSnapshots(allEndpoints)
new IllegalArgumentException("Could not parse '" + input + "'",e)
MeasureSpec.makeMeasureSpec(myHeight,MeasureSpec.EXACTLY)
o instanceof InternalAttribute
requestURI.length() - 6
new IndexWriter(tmpDir,new WhitespaceAnalyzer(),true,IndexWriter.MaxFieldLength.LIMITED)
!checkSimilar(last,r)
binder.bindConstant().annotatedWith(Names.named("servicePort")).to(8089)
verifyAttributes(decoder,binary("0011000315A07F440B1D07534554494f20636f6e66696775726174696f6e2064617461206f6b341C"))
grantRuntimePermissions(globalSearchPickerPackage,MICROPHONE_PERMISSIONS,false,userId)
IBinder.FIRST_CALL_TRANSACTION + 65
backgroundTaskThreadLocalManagerImpl.setUserLocalService(userLocalService)
helper.setMinTextSize(TypedValue.COMPLEX_UNIT_PX,minTextSize)
new OutOfCapacityException(String.format("SchedulerGroup %s is out of capacity. numPending: %d, maxPending: %d, reservedThreads: %d threadsHardLimit: %d",groupContext.name(),groupContext.numPending(),maxPendingPerGroup,groupContext.totalReservedThreads(),resourceManager.getTableThreadsHardLimit()))
replName != null && cursor > replName.length()
Assert.assertEquals(interop.getDoubleField(),copy.getDoubleField(),0.001)
keyword.equals(CONF_NAME)
Slog.d(TAG,"Adding signing keyset " + Long.toString(id) + " to "+ name)
format(msg,Arrays.toString(UNICAST_KEYS),Arrays.toString(MULTICAST_KEYS))
mWidth - mMinWidth
_resourceReferences.add(file)
owners.add(0,Receiver.<String>make(clazzGT.getType()))
9f / 10f
WebSockets.sendPongBlocking(applicationData,webSocketChannel)
(status & 0x08000000) != 0
assertEquals(3,hostAlertCount)
innerConfig.get(LAYER_FIELD_DROPOUT_W)
isStringFieldType(field,adminPresentation)
titleTextField.getText()
ENDER_PORTAL_FRAME(120)
assertTrue(String.format("Expected to find %s marker in file but was none",MARKER),offset >= 0)
this.callStatusLabel.setText(stateString)
new ReactTextUpdate(getText(),mJsEventCount,false,getPadding())
getLogger().warn("Unknown classloader [CCE]: " + e.getMessage())
((Number)s.first()).longValue()
SystemProperties.getBoolean("persist.enable_task_snapshots",true)
type == TokenTypes.CLASS_DEF || type == TokenTypes.ENUM_DEF || type == TokenTypes.INTERFACE_DEF
equalTo(3.0)
RCFileMergeMapper.jobClose(outputPath,success,job,console)
isLinux(expectedSql)
implement(Foo.class,MethodDelegation.to(Foo.class)).getLoaded().getDeclaredConstructor()
internalTransaction.getTransferToAddress()
data * 0.95
telephony.isRadioOn(getOpPackageName())
endTracksTo("main")
Optional.absent()
nextRenderId=39
defaultFloat=0f
UNINITIALIZED
@RunWith(HazelcastParallelClassRunner.class) @Category({QuickTest.class,ParallelTest.class}) public class IdGeneratorBasicDistributedTest extends IdGeneratorAbstractTest {   @Override protected HazelcastInstance[] newInstances(){     return createHazelcastInstanceFactory(2).newInstances();   } }
OfflineMetaRepair.class
createFromResourceStream(null,null,is,srcName,null)
AsyncTask libraryTask
getColumnSizes()[col] == 4
setPlayedDuration(playedDurationWhenStarted + position - startPosition)
new AutoValue_ModuleFiles(chunks,jsFiles,cssFiles)
writeValue(writer,this.map.get(key),indentFactor,indent)
size=500
ServletUtil.prepareParameters(new String[]{"",null,"   "},true,true,true)
registerError(expression,expression)
copyProfileConfigFiles(outFile,file)
Strings.toString(this,true)
ChangesUtil.getAfterPath(change)
document != null && document.getRootTag() != null
!ExpressionUtils.isNullLiteral(args[0])
child.mLayerType != LAYER_TYPE_NONE
polyLats.length - 1
mOpenStreetMapView.setExpectedCenter(expectedCenter)
-1L
librariesConfigurable instanceof ProjectLibrariesConfigurable || !project.isDefault()
mFirebaseRemoteConfig.fetch(cacheExpiration).addOnCompleteListener(this,new OnCompleteListener<Void>(){   @Override public void onComplete(  @NonNull Task<Void> task){     if (task.isSuccessful()) {       Toast.makeText(MainActivity.this,"Fetch Succeeded",Toast.LENGTH_SHORT).show();       mFirebaseRemoteConfig.activateFetched();     }  else {       Toast.makeText(MainActivity.this,"Fetch Failed",Toast.LENGTH_SHORT).show();     }     displayPrice();   } } )
ServiceLoader.load(DockerCmdExecFactory.class,classLoader)
SC_FILE_NAME_EXCEPTION=492
MINOR_VERSION=5
new MaxCandidatesCondition(5)
temp.reAddRight()
new AlertDialog.Builder(ctx)
true || mSpew
Assert.notNull(delegate,"ExpiringSession cannot be null")
polyglot.newInstanceUnsupported(receiver)
MultiValueMap<String,Object>
executionManager.findChildExecutionsByProcessInstanceId(processInstanceId)
AsyncTask<Void,Object,Void>
prev.isGuardBindsCache()
selenium.click("//td[2]/div/div/span[1]")
createUrl(line,el)
Math.abs(path.getDistance() - distance) > 4
mWebViewClassic.addJavascriptInterface(mTextToSpeech,ALIAS_TTS_JS_INTERFACE,true)
compose(f -> f.map(new Elapsed<>()))
mContent != null && ((Fragment)mContent).isAdded()
newField(r,"id","",Field.Store.YES,Field.Index.NOT_ANALYZED)
this.stringMatcherCache.size() >= CACHE_TURNOFF_THRESHOLD
Utils.createInformativeDialog(context,mContext.getResources().getString(R.string.title_error),mContext.getResources().getString(R.string.import_bookmark_error))
mState.value || Prefs.getBoolean(mContext,Prefs.Key.QS_DATA_SAVER_DIALOG_SHOWN,false)
map.put(counter++,ValueRow.get(values))
oldCacheEntry == null
ThemeUtils.getDefaultDisplayNameForRootFolder(getContext())
protected Message waitForOutbound(InboundMessageQueuer ch) throws InterruptedException {   return ch.nextMessageBlocking(); }
id=16507
UIUtil.invokeLaterIfNeeded(new Runnable(){   @Override public void run(){     if (myRunContext != null) {       runnable.run();       return;     }     final boolean needsRestart=isIdleQueueEmpty();     myIdleRequests.add(runnable);     if (isFocusTransferReady()) {       flushIdleRequests();     }  else {       if (needsRestart) {         restartIdleAlarm();       }     }   } } )
packageName.isEmpty()
Set paramNames=Collections.EMPTY_SET;
insertItemStacked(inventory,remainder,false)
ne(Expressions.constant(constant))
KotlinTestUtils.navigationMetadata("idea/idea-completion/testData/smart/SuperMembers2.kt")
new Attribute(rawAttributeName,name,value)
width - originX
list(OAuth2Constants.AUTHORIZATION_CODE,OAuth2Constants.REFRESH_TOKEN,OAuth2Constants.PASSWORD,OAuth2Constants.CLIENT_CREDENTIALS)
intent.resolveType(getContentResolver())
REDEFINE_MODULE.invoke(instrumentation,module,Collections.singleton(target),Collections.emptyMap(),Collections.emptyMap(),Collections.emptySet(),Collections.emptyMap())
DumbService.getInstance(getProject()).smartInvokeLater(() -> actionManager.tryToExecute(mainMenuAction,fakeMainMenuMouseEvent,null,ActionPlaces.MAIN_MENU,true))
registerProblem(rightExpression,PyBundle.message("INSP.format.requires.no.mapping"))
log.debug("Unrecognized Oracle client version at " + oraHome)
log.error("Error while closing command context",exception)
Multimap<JSType,JSError>
_constructor.newInstance(0,0,1,StringPool.BLANK,StringPool.BLANK,StringPool.BLANK)
Thread.sleep(4000)
this.sessionAuthenticationStrategy
_TestUtil.nextInt(seedRandom,2,10)
e.getMessage()
List<Data>
e == null
xml.halfOpenElement(IQ.QUERY_ELEMENT)
LOG.error(getName() + " caught: ",e)
colon > 0
mMccStr == null
dest.writeInt(txPower)
LambdaArgExtKt.foo("",10,new Function1<Integer,Unit>(){   public Unit invoke(  Integer n){     System.out.println(n);   } } )
getRestricted(null,uid,sRestrictionName,null,false,false)
layout.createSequentialGroup().addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(availableStrategiesComboBox,0,218,Short.MAX_VALUE)
!resTable.getAnalysisMode()
resp.setHeader("Access-Control-Allow-Headers",headers)
db.checkTableExists(realTablename)
doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
boolean multiValueResponse() default false;
assertRestrictBackgroundOn()
getConfiguration(config)
GridGgfsTestUtils.jsonToMap("{type:'shmem', port:" + (GridIpcSharedMemoryServerEndpoint.DFLT_IPC_PORT + 1) + "}")
public static LocalDateTimeArray localDateTimeArray(LocalDateTime[] values){   return new LocalDateTimeArray(values); }
doTestCompletionVariants("av10.xml","fill_parent","match_parent","wrap_content","@android:","@dimen/myDimen")
stopServer()
pool.drain()
!memoryOnly
new ByteBuddy().subclass(Foo.class).method(named(FOO)).intercept(MethodDelegation.to(Foo.class).appendParameterBinder(TargetMethodAnnotationDrivenBinder.ParameterBinder.ForFixedValue.OfConstant.of(Bar.class,null))).make().load(Foo.class.getClassLoader(),ClassLoadingStrategy.Default.WRAPPER).getLoaded().getDeclaredConstructor()
@Override public Number aggregate(Number mergedResult,int docId,Block[] block){   if (mergedResult == null) {     return new MutableLongValue(1L);   }  else {     mergedResult.addToValue(1L);     return mergedResult;   } }
mWindowManager.getDefaultDisplay().getRealMetrics(metrics)
new DescribeInstances(awsConfig).execute()
-Math.sin(Math.PI / 8)
ERROR_MARGIN=500
mPositionAnimator.isStarted()
LOCATION_PATTERN.matcher(output)
Nd4j.createUninitialized(forwardPassShapes[i])
resourceGetRet.put("config",ret)
Number.class.isAssignableFrom(c) || c.isPrimitive()
Exception e
!TextUtils.isEmpty(text)
new OsmBugsLocalUtil(activity,plugin.getDBBug())
new StructureViewModelBase(myPsiFile,new YAMLStructureViewElement(myPsiFile)).withSorters(Sorter.ALPHA_SORTER).withSuitableClasses(YAMLFile.class,YAMLDocument.class,YAMLKeyValue.class)
ContainerUtil.immutableSet(PLATFORM_IOS,PLATFORM_AMAZON_FIREOS,PLATFORM_ANDROID,PLATFORM_BLACKBERRY_10,PLATFORM_FIREFOXOS)
VerboseTimeout.builder().withTimeout(1000,TimeUnit.SECONDS)
shouldPersist=true
notifyChildSamplerListenersOfFilteredSamples=true
@Override public S fillFromImpl(ModelBuilder builder){   super.fillFromImpl((Job)builder);   this.messages=new ValidationMessageBase[builder._messages.length];   int i=0;   for (  ModelBuilder.ValidationMessage vm : builder._messages) {     this.messages[i++]=new ValidationMessageV3().fillFromImpl(vm);   }   ValidationMessageBase.mapValidationMessageFieldNames(this.messages,new String[]{"_train","_valid"},new String[]{"training_frame","validation_frame"});   this.error_count=builder.error_count();   ModelBuilderSchema s=(ModelBuilderSchema)Schema.schema(this.getSchemaVersion(),builder).fillFromImpl(builder);   parameters=s.parameters;   return this; }
10 * 1000
array1[3]
ChannelGroup channelGroupObj=(ChannelGroup)channelGroupSubscriptions.getItem(group);
status.isError || status == State.ONLINE
myElementHint != null && getCurrentItem() != null
ps.setNString(i,parameter)
switch (dispatchState) { case Connected:   setState(receiveState.onDispatchEndOfStream(),State.Stopped); break; default : throw new IllegalStateException(String.format("Connection is in unexpected dispatch state %s.",dispatchState)); }
PrivacyManager.getRestricted(getApplicationContext(),xAppInfo.getUid(),true)
mLoadingTile == null && mLoadingBackgroundColor != Color.TRANSPARENT
ttl >= 0
addBuildConfigSpectiStrategy(parametersBuilder,imageText)
args.length > 1 && args[1] instanceof String
Settings.Secure.getInt(getContext().getContentResolver(),ROUNDED_DIVIDER,0)
mFailedAttempts >= MAX_FAILED_ATTEMPTS
_typeSettingsProperties.toSortedString()
Arrays.asList(expected.get(2),expected.get(0),expected.get(1),expected.get(2),expected.get(4),expected.get(3),expected.get(4),expected.get(4),expected.get(5),expected.get(6))
filteredSearchRequest(query,filter,IndexHelper.determineAffectedIndices(indexRangeService,deflector,range),range)
dbManager.getDynamicPropertiesStore().saveAllowSameTokenName(1)
ReferencesSearch.search(referenceTo,scope,true)
new int[2450]
System.arraycopy(orig,0,target,0,20)
sceneRoot.setTagInternal(com.android.internal.R.id.scene_layoutid_cache,scenes)
new MapReduceIndex<K,V,FileContent>(indexId,extension.getIndexer(),storage)
new TextField<String>(BrokerConfiguration.BROKER_URL_KEY,String.class)
new NodeHistogram(application,range,responseTimes)
bindingConfig != null && converterHandler != null
disabledIf.map(DisabledIf::expression)
DiagnosticFactory3.create(ERROR,INCOMPATIBLE_DECLARATION)
d != null
TokenSet.create(IpnbPyTokenTypes.IPNB_REFERENCE,IpnbPyTokenTypes.IPNB_TARGET)
new UnilateralSortMerger<TestData.Key,TestData.Value>(memoryManager,ioManager,40 * 1024 * 1024,1024 * 1024 * 1,10,2,keySerialization,valSerialization,keyComparator,reader,parentTask,0.7f)
RtlUtils.isLtr(english2)
DISTRIBUTED_COMMAND_RESPONSE_TIMEOUT_MS_DEFAULT=5000L
AddressHelper.getPossibleSocketAddresses(address.getPort(),address.getHost(),1)
"streams:" + streamId
app.getSettings().SHOW_CAMERAS.get() || app.getSettings().SPEAK_SPEED_CAMERA.get()
HashMap<TurnPathHelper.TurnResource,Bitmap>
new AsyncWriteToken(r,finalMsg,entry.future,entry.originalMessage,entry.cache)
ctx.cache().getOrStartCache(cacheName)
row.setBackgroundDrawable(getResources().getDrawable(R.drawable.list_bg_selector))
Boolean.parseBoolean(notification.getFieldValue("isNewAlert"))
new JBSplitter("antConfigurations.splitter",0.3f)
hasCapability(GPS_CAPABILITY_MSB)
pattern.toString()
configurationPair.getValue()
old.equals(dexArchive)
doInvoke(args.first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),(args=args.rest()).first(),args.rest())
newLogMergePolicy(false)
myFixture.checkHighlighting(true,false,true)
!serverContextTakeover
name.equals("not") || name.equals("!")
cancelHardwareAnimations(true)
myIncludeTestSource=true
value.entrySet()
adviced.getDeclaredConstructor()
(DERString)encoded
ValueNode guard
from("seda:foo").startupOrder(1).delay(500)
oldCfm.isThriftIncompatible()
v.isUnknownType() || v == Indexer.idx.builtins.None
AvailablePortFinder.getNextAvailable(3000)
is.readFully(data)
!mDreamsEnabledOnBatteryConfig
MUCActivator.getAlertUIService().showAlertPopup(resources.getI18NString("service.gui.ERROR"),errorMessage)
case 12:
procs.getInt("NULLABLE")
((PyFunction)def).getParameterList().acceptChildren(new PyElementVisitor(){   @Override public void visitPyParameter(  PyParameter par){     PyNamedParameter n_param=par.getAsNamed();     assert n_param != null;     if (!n_param.isKeywordContainer() && !n_param.isPositionalContainer()) {       LookupItem item=(LookupItem)factory.createLookupElement(n_param.getName() + "=");       item.setIcon(n_param.getIcon(0));       ret.add(item);     }   } } )
exchange.getPartitioningScheme().isReplicateNullsAndAny()
psiPackage.getDirectories(scope)
user.getTimeZone().getOffset(System.currentTimeMillis())
ssl.hasDefined(CommonAttributes.CERTIFICATE_KEY_FILE)
mInterpolator == null || mNativePtr == null
service.getAllGtasksFromListId(listId,false,false)
mappingData.contextPath.setString("")
transaction.commitAllowingStateLoss()
id=10855
genericTypes.length * 2 + 1
new ConcurrentMapCache("")
randomIntBetween(1,pbr.length() - sliceOffset)
clickView != null && Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP
policy != null && !policy.inferred
(char)0
cal.add(Calendar.MILLISECOND,120)
_formatWriteFeaturesToChange != 0
future.awaitUninterruptibly()
e_("")
LOG.error("Could not get value for property[" + field.getQualifiedFieldName() + "] for product id["+ product.getId()+ "]",e)
id=16512
fieldAnnotations != null
ApiConsumerHelper.findMethod(endpoint,this)
TranslatingCompilerFilesMonitor.getInstance().scanSourceContent(myProject,roots,roots.size(),true)
rule.setQsdiscard(true)
JspUtil.makeJavaIdentifier(varName)
HighlightInfo.newHighlightInfo(HighlightInfoType.ERROR).range(range(implRef)).descriptionAndTooltip(message)
category.isDefaultOff() && !enabledRuleCategories.contains(category.getId()) && !enabledRules.contains(rule.getId())
cifar.test(100)
!isFullyCollapsed() && !mTracking && !mClosing
annotations.remove(node)
processURL(message,depth,url,baseURL)
randomIntBetween(11,50)
"Error Log is full, consider increasing " + ERROR_BUFFER_LENGTH_PROP_NAME
new ProcessInformations(sc,windows,macOrAix)
return 2;
assetDisplayPageEntry.getLayoutPageTemplateEntryId()
_buildTemplateWithGradle("form-field","field-dependency-management","--dependency-management-enabled")
lnumber <= 1
jpegQuality < 0
!isAfter(currentChange.getFirst(),child)
text.length() - 1
read=28
new TaskData(addedCount,null,true)
read.location().getValueKind()
correctedOffset >= 0 && offset < document.getTextLength()
!mLatestResult.isSslRecoverableException()
System.arraycopy(otherReferences,0,references,1,otherReferences.length)
!undirected && vizConfig.isShowArrows() && !edge.isSelfLoop()&& edge.isDirected()
public T withCancellationToken(CancellationToken cancellationToken){   operationParamsBuilder.setCancellationToken(Preconditions.checkNotNull(cancellationToken));   return getThis(); }
(union & 0x0800) != 0
elementalType.getKind()
Platform.isPPC()
new JsonUtf8Writer(buffer)
NotificationColorUtil.calculateContrast(foregroundColor,backgroundColor)
segmentsEntryRelPersistence.findBySegmentsEntryId(segmentsEntryId)
databaseProductName.startsWith("ASE") || databaseProductName.startsWith("Adaptive")
level < RF_STATUS_MEDIUM_SIGNAL
calendar.getTimeInMillis()
constraints.weightx=1f
position / duration >= maxRateBytesPerMs
nlDataOutNodes != null && nlDataOutNodes.getLength() > 0
endFunction("delete_column_statistics_by_partition: ",ret != false,null)
readSync.wait(100)
this.getAllowAdaptiveEnergy() == 0 && getLatestProposalNum() > 7
ic.readFloat("zFarOverride",0)
EgoBuilder.class
myWidthProvider.compute() / 4
"Second position set to " + pos2 + " ("+ region.getArea()+ ")."
consistency_level.filterForQuery(table,nextEndpoints)
context.setDelayer(2000L)
results.size() == 3
o instanceof MkdirsOptions
Assert.fail(String.format("Expected file %s being deleted but it was not.",filePath))
new StringLengthValidator(1,true,true)
repositoryImpl.setTypeSettings(getTypeSettings())
shell.evaluate(script.toString(),source)
assertEquals(20,semaphore.availablePermits())
(OutputScrapingExecutionFailure)executionResult
getFirstNode(element)
uploadRequest.getFileAsStream(fieldNameValue,true)
Drawable.scaleFromDensity(sourcePadding.right,sourceDensity,targetDensity,true)
JiveGlobals.getPropertyEncryptor().encrypt(value)
@ConditionalOnEnabledHealthIndicator("redis")
preds2 != null && preds2.size() == 1
tr("Error while setting serial port parameters: {0} {1} {2} {3}")
!proxyTransport.equals(ListeningPoint.UDP) && !proxyTransport.equals(ListeningPoint.TCP) && !proxyTransport.equals(ListeningPoint.TLS)
!DLFolderPermission.contains(getPermissionChecker(),groupId,folderId,ActionKeys.VIEW)
private static Factory enhanceHelper(Class cls,final Class[] interfaces,final Callbacks callbacks,ClassLoader loader,final CallbackFilter filter){   final Class base=(cls == null) ? Object.class : cls;   Object key=KEY_FACTORY.newInstance(base,interfaces,filter);   return cache.get(loader,key,new FactoryCache.AbstractCallback(){     public BasicCodeGenerator newGenerator(){       return new EnhancerGenerator(base,interfaces,filter,callbacks);     }     public Object newInstance(    Object factory,    boolean isNew){       if (isNew) {         ((Factory)factory).setCallbacks(callbacks);         return factory;       }  else {         return ((Factory)factory).newInstance(callbacks);       }     }   } ); }
new BufferCell(type.makeCellName(values[i]))
scope instanceof GlobalSearchScope || scope == null
AddFriendsActivitiesPortletTest.class
log.warn("Error connecting to node {}",node,e)
new SpinnerWidget(RuntimeEnvironment.application,formEntryPrompt,false)
bitArray.skipBits(8)
reactContext.runOnUiBackgroundQueueThread(new Runnable(){   @Override public void run(){     Process.setThreadPriority(Process.THREAD_PRIORITY_DEFAULT);   } } )
Long3 v
schedulerEngine instanceof SchedulerEngineClusterManager
textVersion.substring(0,textVersion.getIndex("#"))
wrapper.wrapSummary(attribute,request)
!isSdkLocationValid(sdkLocation)
ColorProperties.getColor("scrollBarDarkShadow")
Preconditions.checkNotNull(location,"location")
ReadCommand sent
new DefaultRouteContext(first.getBuilder().getProcessBuilder().getContext(),route,null,list)
expected=16777216
LAST_VERSION=554
localPort == 0 && platform != null
new ExtractionGeneratorOptions(false,propertyCheckBox.isSelected(),false)
new File(uri.getPath().replace("camera_photos/",""))
Map<String,Terms>
AssertionError.class
((XmlNSDescriptorImpl)data).getElementDescriptor(localName,namespace,visited,reference)
GL20.glGetVertexAttribfv(index,pname,params)
startHours == 20
Class<N>
success()
location.getX() < 1627
vector.getValue(1)
addInfo(msg,e)
homeStackInfo == null && activityType == ACTIVITY_TYPE_HOME
nextNext != null && nextNext.getElementType() == JetTokens.IDE_TEMPLATE_END
BufferUtil.zeroBuffer(1)
j < parameters.size()
items[21]
(System.currentTimeMillis() - lastAccessedTime.getTime()) >= timeout
getVal(path,true)
delegate.open(filename,idType,highIdSupplier,maxId)
e.printStackTrace(err)
myLoader.loadSkeleton(myTicket.copy(),rootsHolder,Collections.<String>emptyList(),filters,myController,true)
TreeSet<String>
element.getTextTrim()
socket.setSoTimeout(500000)
formController != null && formController.getInstancePath() != null
assertThat(response).isEqualTo("Woop woop. yay\n")
ImmutableList.of(new Identifier("a"),new Identifier("b"))
asyncWriteFuture.cancel(false)
new TreePrinter<>(node,layout,stableGen,unstableGen).printTree(cursor,System.out,true,true)
bigSecondTokenBalance.multiply(bigTokenQuant).divide(bigFirstTokenBalance).longValueExact()
VcsTestUtil.assertEqualCollections(localTags,myLocalTags)
PsiTreeUtil.getParentOfType(element,XmlComment.class) != null && element.getNode().getElementType() != XmlTokenType.XML_COMMENT_START
HBaseUtils.verifyColumns(columns,hTableDesc)
public LengthFilter create(TokenStream input){   return new LengthFilter(input,min,max); }
originalDefinition.toLowerCase().startsWith("raw") || originalDefinition.toLowerCase().startsWith("binary")
/**   * An SQL Dialect for PostgreSQL 9.3 and later. Adds support for Materialized view.  * @author Dionis Argiri  */ public class PostgreSQL93Dialect extends PostgreSQL92Dialect {   @Override public void augmentRecognizedTableTypes(  List<String> tableTypesList){     super.augmentRecognizedTableTypes(tableTypesList);     tableTypesList.add("MATERIALIZED VIEW");   } }
logger.error("Item not found error while generating chart.",e)
parent instanceof PsiModifiableCodeBlock
String.format("Field [%s] needs to be a primitive; found [%s]",fl,foi.getTypeName())
getFragmentManager().beginTransaction().replace(R.id.content_frame,fragment,CATEGORY_TAG)
tag_names.getId("dc")
new WalkUpResolveProcessor(name,psiFile,getElement(),BaseJSSymbolProcessor.MatchMode.Any)
Assert.assertEquals(20,as.getAllGlobalProperties().size())
key.equals("image") || key.equals("mapillary") || key.equals("subway_region")
Assert.assertEquals(5,users.size())
config.getIdleConnectionTimeoutInMs() > 0 && requestTimeout != -1 && requestTimeout < config.getIdleConnectionTimeoutInMs()
Assert.assertEquals(122L,assetCapsuleNew.getNetUsage())
callback.qualifies(itemType)
!consumer.verifySignatureWith(jws)
getLogger().debug("\n\tDEPRECATION: The POM for the artifact '" + artifact.getDependencyConflictId() + "' was invalid or not found on any repositories.\n"+ "\tThis may not be supported by future versions of Maven and should be corrected as soon as possible.\n"+ "\tError given: "+ e.getMessage()+ "\n")
emptyView != null && emptyView.getImportantForAccessibility() == IMPORTANT_FOR_ACCESSIBILITY_AUTO
query.isCatchup()
lp.viewType == ITEM_VIEW_TYPE_HEADER_OR_FOOTER
assertCompletionVariants(myProjectPom,"jar","test-jar","pom","ear","ejb","ejb-client","war","bundle","jboss-har","jboss-sar")
asList(DERBY,FIREBIRD,ORACLE,SQLSERVER,SYBASE)
((DaemonCodeAnalyzerImpl)DaemonCodeAnalyzer.getInstance(getProject())).cleanupAfterTest(false)
assertSizeEventually(COUNT,map,180)
net.feedForward(new INDArray[]{in,decode},false,false)
this.params.getItem()
new AtomicBoolean(true)
fileChooser.setCurrentDirectory(defaultSelection)
queryType != null && !CommonUtils.isEmpty(wordPart)
new EnterSelectionDialog(shell,err_lines,Messages.getString("ChefLog.Dialog.ErrorLines.Title"),Messages.getString("ChefLog.Dialog.ErrorLines.Message"))
isBlacklisted(i,nowMs)
assertMockEndpointsSatisfied()
buildVersion=0
super.onResume()
mData.remove(subItem)
this.setOrder(104)
Math.min(desired,heightSize)
new BulletTestCollection()
preAuthorizedToken == null
new NioEventLoopGroup(1)
selectedRingColor=0xFF33b5e5
DecimalUtility.getDecimal18FromBigDecimal(bigDecimal,scale,precision)
l < Integer.MIN_VALUE + 1 || l > Integer.MAX_VALUE
ServiceLoader.load(ReportInteraction.class,getClass().getClassLoader())
ret=false
Settings.Global.getInt(mContext.getContentResolver(),SETTING_ENABLE_SCORER,0)
engine.execute(cypher).dumpToString()
trade.getType().equalsIgnoreCase("buy")
EnumValidator.create(Target.class,true,false)
bicyclePriorityValues.put("steps",0.6d)
assertEquals(arr1,table.getBinaryByteArray(0,0))
userModel != null
height - 3
new CrypticClue("Search the upstairs drawers of a house in a village where pirates are known to have a good time.","Pirate",348,new WorldPoint(2809,3165,1),"The house in the southeast corner of Brimhaven, northeast of Davon's Amulet Store. Kill any Pirate located around Brimhaven to obtain the key.")
saveJSONObject(json,filename,null)
SSLContext.setCertificateChainFile(ctx,trustCertChainFile.getPath(),false)
new NeuralNetConfiguration.Builder().kernelSize(20,20)
buildPages.getTypesWithoutHash()
cur.getPositionInParent()
onFailure(statusCode,headers,handler)
countNewlines(headerFragment) + 1
ApplicationManager.getApplication().invokeLater(this::stopDumb,ModalityState.current(),__ -> isDisposed())
!TestUtils.isJUnit4TestMethod(method)
cause instanceof LinkageError
new ArgumentsPanel(true,JMeterUtils.getResString("paramtable"))
_assertAttibutes(sourcesJSONArray.getJSONObject(1),100,50)
arrayContaining("bar","bar-closed","foofoobar","foofoo","foofoo-closed")
super.saveExisting(item)
id=40
new StatsLogEventWrapper(tagId,10)
new RandomIndexWriter(random,directory,newIndexWriterConfig(TEST_VERSION_CURRENT,new MockAnalyzer()).setMergePolicy(newInOrderLogMergePolicy()))
anyOf(containsString("Connection is closed"),containsString("Socket closed during message assembly"),containsString("Stream closed after 2 of 3"))
Integer.parseInt(this.getOptional("kylin.server.auth-user-cache.max-entries","100"))
System.out.println("JVM options:")
executeMethodAndConvertExceptions(httpPatch)
valuesFromClass=SwingConstants.class
mapper.writeValueAsBytes(segment)
private void _runSetUp() throws Exception {   _runClassCommandName(_testClassName + "#set-up"); }
getList() != null && getList().getComments().size() > 0
new IllegalStateException("UTF-8 not supported!")
_constructor.newInstance(0,fileEntry.getFileEntryId(),fileEntry.getFileEntryId() + 1,_IMAGE_CROP_REGION,StringPool.BLANK,StringPool.BLANK)
pw.print(ps.getInstantApp(user.id))
Stream.of("CYPHER 3.4")
_folder == null
LocationManager.GPS_PROVIDER.equals(name) || LocationManager.NETWORK_PROVIDER.equals(name) || LocationManager.FUSED_PROVIDER.equals(name)
Tuple2.of(timeoutPattern2,12L)
Long.valueOf(contentLength)
Boolean.parseBoolean(getOptional("kylin.query.skip-empty-segments","true"))
dst.remaining()
LOG.debug("It is not possible to parse file " + fileLocation)
endExpression != null
KtPsiUtilKt.getHighlightingRange(expression)
mAccountHeader != null && mAccountHeader.getAccountHeaderBuilder().mProfileImagesVisible
map.get(key)
second.get(j)
(pluginId == item.pluginId) && alert.equals(item.alert) && uri.equalsIgnoreCase(item.uri)&& param.equalsIgnoreCase(item.param)&& otherInfo.equalsIgnoreCase(item.otherInfo)
viewToClick != null && viewToClick.isAttachedToWindow()
latch.startLatch.await(400,TimeUnit.MILLISECONDS)
props2.size() == 1 && !props2.get(0).getName().contains(".")
new KeycodeEntry(UNSUPPORTED_KEYCODE,CEC_KEYCODE_RECORD_FUNCTION,false)
Assert.assertEquals(4,results.size())
new ArrayList<Alert>(1)
suiteMethod.invoke(null)
RedisRule.bindToDefaultPort()
spanEvent.getNextSpanId() != -1
KotlinCompilerClient.Companion.connectToCompileService(compilerId,daemonOptions,System.out,true,true)
mPlayPause != null && getActivity() != null
Localization.lang("Bibtex key patterns")
new TimelineChunk(sourceId,sourceId,metricId,startTime,endTime,timeBytes,sampleBytes,timeBytes.length)
log.debug("Can't check auto-commit state",e)
!Algorithms.isEmpty(pref.get())
(longValue() >> 16) & 0xFFFF
event.isResuming() || event.isCancelled()
!((IdentifierTree)var).getName().contentEquals(JUNIT_PARAMS_VALUE)
blenderVersion >= 250
RunnerApi.Trigger.newBuilder().setAfterEndOfWindow(RunnerApi.Trigger.AfterEndOfWindow.getDefaultInstance())
terrainQuadGrid.getTerrainQuadAt(temp)
public class TimesNewRoman extends BasicFontMetrics { {     maxCharHeight=717;     widths[32]=250;     widths[33]=333;     widths[34]=408;     widths[35]=500;     widths[36]=500;     widths[37]=833;     widths[38]=777;     widths[39]=180;     widths[40]=333;     widths[41]=333;     widths[42]=500;     widths[43]=563;     widths[44]=250;     widths[45]=333;     widths[46]=250;     widths[47]=277;     widths[48]=500;     widths[49]=500;     widths[50]=500;     widths[51]=500;     widths[52]=500;     widths[53]=500;     widths[54]=500;     widths[55]=500;     widths[56]=500;     widths[57]=500;     widths[58]=277;     widths[59]=277;     widths[60]=563;     widths[61]=563;     widths[62]=563;     widths[63]=443;     widths[64]=920;     widths[65]=722;     widths[66]=666;     widths[67]=666;     widths[68]=722;     widths[69]=610;     widths[70]=556;     widths[71]=722;     widths[72]=722;     widths[73]=333;     widths[74]=389;     widths[75]=722;     widths[76]=610;     widths[77]=889;     widths[78]=722;     widths[79]=722;     widths[80]=556;     widths[81]=722;     widths[82]=666;     widths[83]=556;     widths[84]=610;     widths[85]=722;     widths[86]=722;     widths[87]=943;     widths[88]=722;     widths[89]=722;     widths[90]=610;     widths[91]=333;     widths[92]=277;     widths[93]=333;     widths[94]=469;     widths[95]=500;     widths[96]=333;     widths[97]=443;     widths[98]=500;     widths[99]=443;     widths[100]=500;     widths[101]=443;     widths[102]=333;     widths[103]=500;     widths[104]=500;     widths[105]=277;     widths[106]=277;     widths[107]=500;     widths[108]=277;     widths[109]=777;     widths[110]=500;     widths[111]=500;     widths[112]=500;     widths[113]=500;     widths[114]=333;     widths[115]=389;     widths[116]=277;     widths[117]=500;     widths[118]=500;     widths[119]=722;     widths[120]=500;     widths[121]=500;     widths[122]=443;     widths[123]=479;     widths[124]=200;     widths[125]=479;     widths[126]=541;   } }
new MultiIterator(iterableList)
new MockResponse().setResponseCode(404)
MethodHandles.insertArguments(ci.handle,ci.handle.type().parameterCount() - 2,false,true)
k < FILES
mpline == null || !mpline.contains(boundary)
field.setRequired(true)
Timber.e(error)
getPreferenceStore()
repo.setRecoveryInterval(1000,TimeUnit.MILLISECONDS)
new Text(shell,SWT.SINGLE | SWT.LEFT | SWT.BORDER)
assertThat(o.takeNext()).isNotNull()
new LayerVisitor(flatRegion,minimumBlockY(region),maximumBlockY(region),naturalizer)
status == SocketStatus.OPEN_WRITE && response.getWriteListener() != null
SaveImageCmdExec.class
_buf.position() - temp
xCapClient.disconnect()
UpgradeStepRegistrator.class
@Autowired HandlingEventRepository handlingEventRepository;
5 * 60 * 1000
Variable emitArrayEquals(Kind kind,Value array1,Value array2,Value length);
hgraph.getTotalOutDegree(n)
getFullJID(0)
ph_mean[i]
builder.getTokenType() == JavaTokenType.LT && context != Context.CODE_BLOCK
new NonAnnotatedConfigurationProblem(metadata.getClassName(),reader.getResource(),metadata)
TURN_DISTANCE=45
TokenSet.create(YAMLTokenTypes.SCALAR_STRING,YAMLTokenTypes.SCALAR_DSTRING,YAMLTokenTypes.TEXT)
plugin != null && !plugin.isBasePlugin()
BigDecimal.valueOf(0.25)
tagService.rename(uuid,text)
logoutRedirect != null
getLog().debug("Compiling Kotlin sources from " + sourceRoots)
editor.getColorsScheme().getAttributes(diffAttributeKey).getErrorStripeColor()
UserNotificationEventLocalServiceUtil.getDeliveredUserNotificationEventsCount(themeDisplay.getUserId(),UserNotificationDeliveryConstants.TYPE_WEBSITE,actionable,false)
logger.debug("Mlock successfull")
3 * 1000
!FlexUtils.equalLists(filesToPackage,myFilesToPackage)
duration.getHours()
GeoQueryContext.builder().setGeoPoint(geoPoints[0]).setBoost(11)
ListUtil.isEmpty(exclusions)
makeProperty(obj,boolean.class,"isEnabled","setEnabled","Enabled")
ddmStructureLocalService.fetchStructure(dlFileEntryType.getGroupId(),"auto_" + fileEntryTypeId)
m22 != 1
storeField(field,true,pexp,current,visitor,receiver.getData())
@Override public S fillFromImpl(ModelMetricsRegression modelMetrics){   super.fillFromImpl(modelMetrics);   r2=modelMetrics.r2();   return this; }
new CommandLineException("Communication error",e)
logger.info("No file to compact for user defined compaction")
id=41
type=100
StorageProxy.cas(keyspace(),columnFamily(),key,clusteringPrefix,expected,updates,options.getSerialConsistency(),options.getConsistency())
logger.fine("Creating extern file for exports")
sub.next(dataBuffer)
assertThat(response).isEqualTo("Ok.\n")
!crawlId.equals("-all") && crawlId.startsWith("-")
log_lines[9].substring(0,774)
responseFilters != null
logger.getLogger().warning("Failover took:" + (end - start) / 1000000 + "ms")
partitionId >= 0
simple.getFromReceivedDate()
acrComparator.compare(prevRow,compactedRow) >= 0
super.getHibernateTemplate().execute(new HibernateCallback(){   public Object doInHibernate(  Session session) throws HibernateException, SQLException {     Example example=Example.create(arg).ignoreCase();     Criteria crit=session.createCriteria(clazz);     crit.add(example);     List results=crit.list();     if (results.size() > 0)     return results.get(0);     return null;   } } )
blockRoot.getToken() == null || blockRoot.getToken().getType() == Token.LEFT_CURLY_BRACE
Ref.create(-1)
add(5309,1,0)
mode == MODELVIEW
FlushModeType.COMMIT.equals(session.getFlushMode()) || session.isClosed()
clickOnWebElement(by,match)
status().isFound()
public PatternReplaceFilter create(TokenStream input){   return new PatternReplaceFilter(input,p,replacement,all); }
reducer.getKeyColumns()
"//float[@name='score']='" + 1.0f + "'"
GridCacheAffinityProxy.class
-1829091458
available > 0 || !read
UIUtil.applyRenderingHints(g2)
getOptionalString(singletonMap("string",42),list)
this.xpath.setInitialText(xpath)
providerInstance.getReferencesByElement(xmlText,domCfg,context)
final Throwable lastException
numPoints / 2.0
myBalloon != null && size.width < myBalloon.getSize().width
ignite.events().localQuery(p,evtTypes)
LOG.debug("Detected JMX protocol is null for clusterName = " + clusterName + ", componentName = "+ componentName)
new Random()
webRequest.getServletContext()
i < 200
terms.size() >= maxExpansions
rootVDir.refresh(true,false)
segments.add(segment)
osmandSettings.setUsingMapVectorData(false)
/**   * Bluetooth GATT interface callbacks  */ private final IBluetoothGattServerCallback mBluetoothGattServerCallback=new IBluetoothGattServerCallback.Stub(){   /**   * Application interface registered - app is ready to go  * @hide  */   @Override public void onServerRegistered(  int status,  int serverIf){     if (DBG)     Log.d(TAG,"onServerRegistered() - status=" + status + " serverIf="+ serverIf); synchronized (mServerIfLock) {       if (mCallback != null) {         mServerIf=serverIf;         mServerIfLock.notify();       }  else {         Log.e(TAG,"onServerRegistered: mCallback is null");       }     }   }   /**   * Server connection state changed  * @hide  */   @Override public void onServerConnectionState(  int status,  int serverIf,  boolean connected,  String address){     if (DBG)     Log.d(TAG,"onServerConnectionState() - status=" + status + " serverIf="+ serverIf+ " device="+ address);     try {       mCallback.onConnectionStateChange(mAdapter.getRemoteDevice(address),status,connected ? BluetoothProfile.STATE_CONNECTED : BluetoothProfile.STATE_DISCONNECTED);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Service has been added  * @hide  */   @Override public void onServiceAdded(  int status,  BluetoothGattService service){     if (DBG)     Log.d(TAG,"onServiceAdded() - handle=" + service.getInstanceId() + " uuid="+ service.getUuid()+ " status="+ status);     if (mPendingService == null)     return;     BluetoothGattService tmp=mPendingService;     mPendingService=null;     tmp.setInstanceId(service.getInstanceId());     List<BluetoothGattCharacteristic> temp_chars=tmp.getCharacteristics();     List<BluetoothGattCharacteristic> svc_chars=service.getCharacteristics();     for (int i=0; i < svc_chars.size(); i++) {       BluetoothGattCharacteristic temp_char=temp_chars.get(i);       BluetoothGattCharacteristic svc_char=svc_chars.get(i);       temp_char.setInstanceId(svc_char.getInstanceId());       List<BluetoothGattDescriptor> temp_descs=temp_char.getDescriptors();       List<BluetoothGattDescriptor> svc_descs=svc_char.getDescriptors();       for (int j=0; j < svc_descs.size(); j++) {         temp_descs.get(j).setInstanceId(svc_descs.get(j).getInstanceId());       }     }     mServices.add(tmp);     try {       mCallback.onServiceAdded((int)status,tmp);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote client characteristic read request.  * @hide  */   @Override public void onCharacteristicReadRequest(  String address,  int transId,  int offset,  boolean isLong,  int handle){     if (VDBG)     Log.d(TAG,"onCharacteristicReadRequest() - handle=" + handle);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     BluetoothGattCharacteristic characteristic=getCharacteristicByHandle(handle);     if (characteristic == null) {       Log.w(TAG,"onCharacteristicReadRequest() no char for handle " + handle);       return;     }     try {       mCallback.onCharacteristicReadRequest(device,transId,offset,characteristic);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote client descriptor read request.  * @hide  */   @Override public void onDescriptorReadRequest(  String address,  int transId,  int offset,  boolean isLong,  int handle){     if (VDBG)     Log.d(TAG,"onCharacteristicReadRequest() - handle=" + handle);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     BluetoothGattDescriptor descriptor=getDescriptorByHandle(handle);     if (descriptor == null) {       Log.w(TAG,"onDescriptorReadRequest() no desc for handle " + handle);       return;     }     try {       mCallback.onDescriptorReadRequest(device,transId,offset,descriptor);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote client characteristic write request.  * @hide  */   @Override public void onCharacteristicWriteRequest(  String address,  int transId,  int offset,  int length,  boolean isPrep,  boolean needRsp,  int handle,  byte[] value){     if (VDBG)     Log.d(TAG,"onCharacteristicWriteRequest() - handle=" + handle);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     BluetoothGattCharacteristic characteristic=getCharacteristicByHandle(handle);     if (characteristic == null) {       Log.w(TAG,"onCharacteristicWriteRequest() no char for handle " + handle);       return;     }     try {       mCallback.onCharacteristicWriteRequest(device,transId,characteristic,isPrep,needRsp,offset,value);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Remote client descriptor write request.  * @hide  */   @Override public void onDescriptorWriteRequest(  String address,  int transId,  int offset,  int length,  boolean isPrep,  boolean needRsp,  int handle,  byte[] value){     if (VDBG)     Log.d(TAG,"onDescriptorWriteRequest() - handle=" + handle);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     BluetoothGattDescriptor descriptor=getDescriptorByHandle(handle);     if (descriptor == null) {       Log.w(TAG,"onDescriptorWriteRequest() no desc for handle " + handle);       return;     }     try {       mCallback.onDescriptorWriteRequest(device,transId,descriptor,isPrep,needRsp,offset,value);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * Execute pending writes.  * @hide  */   @Override public void onExecuteWrite(  String address,  int transId,  boolean execWrite){     if (DBG)     Log.d(TAG,"onExecuteWrite() - " + "device=" + address + ", transId="+ transId+ "execWrite="+ execWrite);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onExecuteWrite(device,transId,execWrite);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception in callback",ex);     }   }   /**   * A notification/indication has been sent.  * @hide  */   @Override public void onNotificationSent(  String address,  int status){     if (VDBG)     Log.d(TAG,"onNotificationSent() - " + "device=" + address + ", status="+ status);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onNotificationSent(device,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   }   /**   * The MTU for a connection has changed  * @hide  */   @Override public void onMtuChanged(  String address,  int mtu){     if (DBG)     Log.d(TAG,"onMtuChanged() - " + "device=" + address + ", mtu="+ mtu);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onMtuChanged(device,mtu);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   }   /**   * The PHY for a connection was updated  * @hide  */   @Override public void onPhyUpdate(  String address,  int txPhy,  int rxPhy,  int status){     if (DBG)     Log.d(TAG,"onPhyUpdate() - " + "device=" + address + ", txPHy="+ txPhy+ ", rxPHy="+ rxPhy);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onPhyUpdate(device,txPhy,rxPhy,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   }   /**   * The PHY for a connection was read  * @hide  */   @Override public void onPhyRead(  String address,  int txPhy,  int rxPhy,  int status){     if (DBG)     Log.d(TAG,"onPhyUpdate() - " + "device=" + address + ", txPHy="+ txPhy+ ", rxPHy="+ rxPhy);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onPhyRead(device,txPhy,rxPhy,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   }   /**   * Callback invoked when the given connection is updated  * @hide  */   @Override public void onConnectionUpdated(  String address,  int interval,  int latency,  int timeout,  int status){     if (DBG)     Log.d(TAG,"onConnectionUpdated() - Device=" + address + " interval="+ interval+ " latency="+ latency+ " timeout="+ timeout+ " status="+ status);     BluetoothDevice device=mAdapter.getRemoteDevice(address);     if (device == null)     return;     try {       mCallback.onConnectionUpdated(device,interval,latency,timeout,status);     }  catch (    Exception ex) {       Log.w(TAG,"Unhandled exception: " + ex);     }   } } ;
part.getStartLine()
public WordDelimiterFilter create(TokenStream input){   return new WordDelimiterFilter(input,generateWordParts,generateNumberParts,catenateWords,catenateNumbers,catenateAll,splitOnCaseChange); }
Integer.parseInt(tokens[3])
modIcon.getWidth()
Assert.assertEquals(41,classes.size())
Settings.Secure.putStringForUser(cr,OWNER_INFO,"",userId)
ImmutableList.of("/bin/bash","-e","-c",cmd)
excludeFilePathMatcherList.add(_fileSystem.getPathMatcher(excludeSyntax.getValue() + ":" + excludePattern))
submittedNode.get("values") == null
font.draw(batch,results,20,300)
target.getNodeMetaData(StaticTypesMarker.DECLARATION_INFERRED_TYPE)
listener != null && mHandler == null
ssl.hasDefined(CommonAttributes.CA_CERTIFICATE_FILE)
new ConfigPropertyVetoException(e.getLocalizedMessage(),evt)
new DummyUpgradeStep()
aeron.addExclusivePublication(controlRequestChannel,controlRequestStreamId)
assertEquals("throughput",78.5579711577,model.getThroughput(),0.00000001)
LOG.warn("Failed to get next entry from " + jarFileName + ": "+ ioEx)
ImmutableSet.of(UNDERWALL_TUNNEL_16529,UNDERWALL_TUNNEL_16530,STEPPING_STONE_16533,FENCE_16518,ROCKS_16549,ROCKS_16550,WALL_17049,WALL_17050,CRUMBLING_WALL_24222,UNDERWALL_TUNNEL,UNDERWALL_TUNNEL_16528,CREVICE_16543,UNDERWALL_TUNNEL_19032,UNDERWALL_TUNNEL_19036,BROKEN_RAFT,STEPPING_STONE_16513,ROCKS_3790,ROCKS_3791,ROCKS_3803,ROCKS_3804,ROCKS_16523,ROCKS_16524,ROCKS_3748,ROCKS_16545,ROCKS_16521,ROCKS_16522,ROCKS_16464,LOG_BALANCE_16540,LOG_BALANCE_16541,LOG_BALANCE_16542,BROKEN_FENCE,LOG_BALANCE_16546,LOG_BALANCE_16547,LOG_BALANCE_16548,CASTLE_WALL,HOLE_16520,WALL_17047,NULL_31849,ROCKS_16534,ROCKS_16535,STRONG_TREE_17074,STEPPING_STONE_16466,NULL_26884,NULL_26886,STEPPING_STONES,STEPPING_STONES_23646,STEPPING_STONES_23647,A_WOODEN_LOG,SPIKEY_CHAIN,SPIKEY_CHAIN_16538,STRANGE_FLOOR_16544,CREVICE_16539,STEPS_29993,STEPPING_STONE_14918,STEPPING_STONE_14917,ROCKY_HANDHOLDS_26404,ROCKY_HANDHOLDS_26405,ROCKY_HANDHOLDS_26406,ROCKY_HANDHOLDS_26400,ROCKY_HANDHOLDS_26401,ROCKY_HANDHOLDS_26402,LOG_BALANCE_23274,ROCKS_27984,ROCKS_27985,BOULDER_27990,ROCKS_27987,ROCKS_27988,GAP_29326,TUNNEL_30174,TUNNEL_30175,OBSTACLE_PIPE_16509,STRANGE_FLOOR,ROCKS,ROCKS_14106,LOOSE_RAILING_28849,CREVICE_9739,CREVICE_9740,HOLE_31481,HOLE_31482,LADDER_30938,LADDER_30939,LADDER_30940,LADDER_30941,ROPE_ANCHOR,ROPE_ANCHOR_30917,RUBBER_CAP_MUSHROOM,ROCKS_31757,ROCKS_31758,ROCKS_31759,PILLAR_31809,ROPESWING_23568,ROPESWING_23569,VINE_26880,VINE_26882,PIPE_21728,STEPPING_STONE_19040,PIPE_21727,LOG_BALANCE_20882,LOG_BALANCE_20884,STEPPING_STONE_21738,STEPPING_STONE_21739,TIGHTGAP,STILE_12982,MONKEYBARS_23566,OBSTACLE_PIPE_16511,STEPPING_STONE_11768,CREVICE_16465,ROCKS_19849,CROSSBOW_TREE_17062,ROCKS_17042,LOOSE_RAILING,ROCKS_2231,STEPPING_STONE_29728,STEPPING_STONE_29729,STEPPING_STONE_29730,JUTTING_WALL_17002,ROCKS_16514,ROCKS_16515,LOG_BALANCE_3933,STEPPING_STONE_13504,DARK_TUNNEL_10047,WEATHERED_WALL,WEATHERED_WALL_16526,STEPPING_STONE_19042,ROCKS_16998,ROCKS_16999,ORNATE_RAILING,ORNATE_RAILING_17000,STEPPING_STONE_10663,BALANCING_LEDGE_23548,OBSTACLE_PIPE_23140,MONKEYBARS_23567,PILE_OF_RUBBLE_23563,PILE_OF_RUBBLE_23564,CREVICE_19043,PILLAR_31561,LOG_BALANCE_3931,LOG_BALANCE_3930,LOG_BALANCE_3929,LOG_BALANCE_3932,DENSE_FOREST_3938,DENSE_FOREST_3939,DENSE_FOREST_3998,DENSE_FOREST_3999,DENSE_FOREST,LEAVES,LEAVES_3924,LEAVES_3925,STICKS,TRIPWIRE,GAP,GAP_2831,STEPPING_STONE_5948,STEPPING_STONE_5949,ROCKS_6673,ROCK_16115,CLIMBING_ROCKS_11948,CLIMBING_ROCKS_11949,BROKEN_FENCE_2618,NULL_25337,NULL_29868,NULL_29869,NULL_29870,ICE_CHUNKS_31822,NULL_31823,ICE_CHUNKS_31990,TUNNEL_30959,HOLE_30966,OBSTACLE,OBSTACLE_30767,OBSTACLE_30964,OBSTACLE_30962,LOOSE_RAILING_2186,LITTLE_BOULDER,ROCKSLIDE_33184,ROCKSLIDE_33185,NULL_33327,NULL_33328,BROKEN_WALL_33344,BIG_WINDOW,LOW_FENCE,STILE,STEPS)
CacheFactory.setMaxLifetimeProperty(getName(),maxLifetime)
new ResolveTakenPictureAsyncTask(data,promise,options,cacheDirectory,RNCameraView.this)
createRenderScript(true)
TypeSpec.parse(builder,false)
FolderList.actionHandleAccount(this,accounts[0],true)
terminationPos % 2 == 0 && data[terminationPos + 1] == (byte)0
((ChannelProgressivePromise)promise).tryProgress(progress,-1)
new ImmutableInstruction3rc(opcode,instruction.getStartRegister(),instruction.getRegisterCount(),resolvedMethod)
aliases.size() > 1
Set<K>
LinkedHashSet<XmlElementDescriptor>
FluentIterable.from(Default.class.getDeclaredClasses())
Throwable e
this.mMesh.postDraw(this.mShaderProgram)
unsetDefault.isInternal()
pyElement == rightExpression || !(pyElement instanceof PyExpression)
new GroupDialog(frame,null)
!xAppInfo.getIsSystem()
assertThat(context.getExtensions()).hasSize(39)
UpgradeStepRegistrator.class
servers == null || servers.isEmpty()
context.addStep(response,operation,new NewStepHandler(){   public void execute(  final NewOperationContext context,  final ModelNode operation){     if (context.completeStep() == NewOperationContext.ResultAction.KEEP && context.isModelAffected()) {     }   } } ,NewOperationContext.Stage.VERIFY)
myBooks.size()
new GitException(ERROR_UPDATE_REMOTE_NAME_MISSING)
cachedMemoryUsageBytes <= softMemoryLimitBytes
retryPolicy.onReadTimeout(rcl,rte.blockFor,rte.received,rte.dataPresent,queryRetries)
paymentStateContext.getPaymentInfoPlugin() == null || paymentStateContext.getPaymentInfoPlugin().getStatus() == null
HttpConnectionUtil.getClient(timeout)
new IllegalStateException("Could not find sliceShift")
mService.mAppOps.startOpNoThrow(mAppOp,uid,packageName,true)
uri == null || uri.length() == 0
bag.recycle(reserved)
List<Number>
builder.setView(frame,false,true)
P extends PersistentTaskParams
FrameType.SETTINGS.check(0,settings.length)
PyQualifiedName.fromDottedString(name)
method.getName().equals(writeMethodToUse.getName()) && !method.equals(writeMethodToUse) && !method.isBridge()&& method.getParameterTypes().length == writeMethodToUse.getParameterTypes().length
specBuilder.setDigests(KeyProperties.DIGEST_NONE)
copyDocComment(sourceMethod,resultMethod)
USE_NOTIFICATION_LISTENER=true
this.healthMvcEndpointProperties.getMapping() != null && this.healthMvcEndpointProperties.getMapping().size() > 0
rightTuple.setStagePrevious(last)
StringUtil.contains(text,end,next,startChar)
!isPartialResponse(message) || callback == null
new IOException(ExceptionMessage.BLOCK_UNAVAILABLE.getMessage(blockId),e)
booleanPreference(preference,value,R.string.p_use_contact_picker,R.string.EPr_use_contact_picker_desc_disabled,R.string.EPr_use_contact_picker_desc_enabled)
parent.resolveFile(iconfile)
UseItemCaptureMessage.newBuilder().setEncounterId(this.getEncounterId()).setSpawnPointId(this.getSpawnPointId())
ufsPath.toString()
assertEquals(9,stages.size())
StreamException se
args.length == 0 || (args.length == 1 && args[0].equals("-a"))
createMessageConsumer(session,destinationName,messageSelector,true,null)
PsiPolyVariantReference reference=(PsiPolyVariantReference)configureByFile(getTestName(true) + ".kt");
renameContactPanel.getNewName()
!subscribers[i].queue.isEmpty()
"GET".equalsIgnoreCase(httpMethod)
useInternetToDownload.setOnPreferenceChangeListener(this)
Activate(app)
sort.sort(inputRects.items,new Comparator<Rect>(){   public int compare(  Rect o1,  Rect o2){     int n1=o1.width > o1.height ? o1.width : o1.height;     int n2=o2.width > o2.height ? o2.width : o2.height;     return n2 - n1;   } } )
-1346395749
new RegExpBasedFilterInvocationDefinitionMap()
resultEndpoint.expectedMinimumMessageCount(2)
event.getGameState() == GameState.LOGGED_IN
items[32]
Integer.toString(types.size())
fb.limit()
manifest.getRequirePlugins()
anchorView.getApplicationWindowToken()
Map<String,ModContainer>
new SQLException("Error downloading gallery image " + imageUri,e)
LOG.warn("The given state from the response: " + billToDTO.getAddressStateRegion() + " could not be found"+ " as a state abbreviation in BLC_STATE")
onlyInA.addAll(onlyInB)
new AudioNode(assetManager,"Sound/Environment/Ocean Waves.ogg",false)
app.getDaynightHelper().isNightMode()
new ThingUID(WEMO_MOTION_TYPE_UID,device.getDetails().getSerialNumber())
Settings.Global.getInt(mContext.getContentResolver(),Settings.Global.MOBILE_DATA_ALWAYS_ON,1)
5 * 60 * 1000
fis != null && fis.length > 0
config.properties().get(REDIS_SHARED_POOL) != null
/**   * Column number filter.   */ private CsvFilter columnFilter;
defaultCometSupport(defaultToBlocking)
fragmentCollectionPersistence.findByGroupId(groupId)
x + leftSmallWidth + rightSmallWidth
clearTetheredNotification()
@Override public JavaExecHandleBuilder setIgnoreExitValue(boolean ignoreExitValue){   super.setIgnoreExitValue(ignoreExitValue);   return this; }
getPath("checks/javadoc/Input_03.java")
BaseMessages.getString(PKG,"RepositoryExplorerDialog.Slave.DoesNotExists.Message",slaveServerName)
@RunWith(HazelcastParallelClassRunner.class) @Category({QuickTest.class,ParallelTest.class}) public class QueueBasicLocalTest extends QueueAbstractTest {   @Override protected HazelcastInstance[] newInstances(  Config config){     return createHazelcastInstanceFactory(1).newInstances(config);   } }
isStatic || constructorEntryPoint
currentNumOfAttempts >= maxAttempts
routeFromMapPoint=true
@NotNull Id id
ByteBuffer audioData
bedtime - SystemClock.uptimeMillis()
logger.fine("Collapsed " + numRenamedPropertyNames + " properties into "+ numNewPropertyNames+ " and skipped renaming "+ numSkippedPropertyNames+ " properties.")
CharArrayUtil.indexOf(whiteSpace,pattern,0) < 0
arg2.charAt(arg2.length() - 1) == quotedChar && arg2.length() > 1
this.thrown.expectMessage("File must not be null")
suppression.equals(toolId) || suppression.equalsIgnoreCase(SuppressionUtil.ALL)
command instanceof Comparable
cachedDevice != null && cachedDevice.getName() != null
ACRA.log.i(LOG_TAG,context.getPackageName() + " reports will be sent by Http.")
events.add(0,event)
WebUtils.toHttp(response).sendError(HttpServletResponse.SC_UNAUTHORIZED)
mapContainer.getMapConfig().getMaxIdleSeconds() * 1000L
is(1)
Loggers.get(getClass()).warn(format("Termination of pool %s failed",getClass().getSimpleName()),ie)
new File(projectDirectory,"pom.xml").isFile()
public class GraphQLEnumType implements GraphQLType, GraphQLInputType, GraphQLOutputType {   String name;   private Coercing coercing;   public String getName(){     return name;   }   public void setName(  String name){     this.name=name;   }   public Coercing getCoercing(){     return coercing;   }   public void setCoercing(  Coercing coercing){     this.coercing=coercing;   } }
!packaging.equals("jar")
mCryptoPerformanceMap.get(userId)
!cls.isInterface() && !Modifier.isAbstract(cls.getModifiers()) && !cls.isEnum()&& !cls.getSimpleName().isEmpty()
FlatJoinFunction.class
MockSpecModel.newBuilder().rawProps(ImmutableList.of(makePropModel("param0"),makePropModel("param1")))
states.length >= 14
Context.getProviderService().getAllProviderAttributeTypes(true)
length=3_000
getConnection(URL)
Collections.singletonList(entry)
mSeekBar.setProgress(mLastProgress > -1 ? mLastProgress : mOriginalStreamVolume,true)
reader.waitFor()
KotlinFacetSettingsProvider.Companion.getInstance(module.getProject()).getInitializedSettings(module)
width <= 0
mDemoSlider.setDuration(4000)
comparison=superCompareTo
mProviderRequest.reportLocation && !mDisableGps && isEnabled()
callback.disconnectCallback(name,jsa)
SamlAdapterTestStrategy.uploadSP("http://localhost:8081/auth")
new IOException("Unexpected endpoints returned from the Routing Generator")
WordPress.getCurrentBlog().getLocalTableBlogId()
randomAlphaOfLength(11)
types == null || types.isEmpty()
createForeignKeyColumn(qb,attribute,false)
uncompressedProto.length < 2570000
ai.uid < Process.FIRST_APPLICATION_UID
context.castMode(NEVER).formatSeparator().keyword("limit").sql(' ').visit(offsetOrZero).sql(", ").visit(numberOfRowsOrMax)
previousLine.endsWith(StringPool.COMMA) && (previousLineTabCount == lineTabCount) && !previousLine.contains(StringPool.CLOSE_CURLY_BRACE)&& !line.endsWith(StringPool.OPEN_CURLY_BRACE)
1000 * 60
boolean value() default true;
public List<CexIOArchivedOrder> archivedOrders(TradeHistoryParams tradeHistoryParams) throws IOException {   String baseCcy=null;   String counterCcy=null;   Integer limit=null;   Long dateTo=null;   Long dateFrom=null;   Long lastTxDateTo=null;   Long lastTxDateFrom=null;   String status;   if (tradeHistoryParams instanceof CexIOTradeHistoryParams) {     CexIOTradeHistoryParams params=(CexIOTradeHistoryParams)tradeHistoryParams;     CurrencyPair currencyPair=params.currencyPair;     baseCcy=currencyPair == null ? null : currencyPair.base.getCurrencyCode();     counterCcy=currencyPair == null ? null : currencyPair.counter.getCurrencyCode();     limit=params.limit;     dateTo=params.dateTo;     dateFrom=params.dateFrom;     lastTxDateTo=params.lastTxDateTo;     lastTxDateFrom=params.lastTxDateFrom;     status=params.status;   }  else {     status="d";     if (tradeHistoryParams instanceof TradeHistoryParamsTimeSpan) {       TradeHistoryParamsTimeSpan tradeHistoryParamsTimeSpan=(TradeHistoryParamsTimeSpan)tradeHistoryParams;       lastTxDateFrom=toUnixTimeNullSafe(tradeHistoryParamsTimeSpan.getStartTime());       lastTxDateTo=toUnixTimeNullSafe(tradeHistoryParamsTimeSpan.getEndTime());     }     if (tradeHistoryParams instanceof TradeHistoryParamCurrencyPair) {       CurrencyPair currencyPair=((TradeHistoryParamCurrencyPair)tradeHistoryParams).getCurrencyPair();       baseCcy=currencyPair == null ? null : currencyPair.base.getCurrencyCode();       counterCcy=currencyPair == null ? null : currencyPair.counter.getCurrencyCode();     }     if (tradeHistoryParams instanceof TradeHistoryParamLimit) {       limit=((TradeHistoryParamLimit)tradeHistoryParams).getLimit();     }     if (tradeHistoryParams instanceof TradeHistoryParamPaging) {       limit=((TradeHistoryParamPaging)tradeHistoryParams).getPageLength();     }   }   ArchivedOrdersRequest request=new ArchivedOrdersRequest(limit,dateFrom,dateTo,lastTxDateFrom,lastTxDateTo,status);   return cexIOAuthenticated.archivedOrders(signatureCreator,baseCcy,counterCcy,request); }
Long.toString(arr[doc])
props.getProperty(propName)
new GoogleClosureCompileJavaScriptMinifier()
SyntheticLibrary.newImmutableLibrary(Collections.singleton(root),Collections.emptySet(),Collections.emptySet(),excludePattern)
assertEquals("Range for response status value " + result.getResponse().getStatus(),HttpStatus.Series.REDIRECTION,getHttpStatusSeries(result))
myClassScopeTypeNames != null
LowLevelSearchUtil.processElementsContainingWordInElement(occurenceProcessor,psiFile,searcher,true,new EmptyProgressIndicator())
id=10832
System.currentTimeMillis() + WAIT_MILLIS_BEFORE_JOIN
Thread.sleep(2000)
new MapJsonReader(streamDescriptor,writeStackType,checkForNulls,hiveStorageTimeZone,sessionTimeZone)
FILES_BYTES * 1000.0
payload.writeBytes((byte[])each)
clipItem.coerceToText(mContext)
DiagnosticType.disabled("JSC_GOOG_MODULE_IN_NON_MODULE","goog.module() call must be the first statement in a module.")
emitReturnNoVal()
assertEquals("We get the wrong sayHello result","hello",result)
ImmutableBiMap<Integer,String>
getDirectory(createTempDir())
Arrays.asList(CoreAnnotations.TextAnnotation.class,CoreAnnotations.TokensAnnotation.class,CoreAnnotations.CharacterOffsetBeginAnnotation.class,CoreAnnotations.CharacterOffsetEndAnnotation.class,CoreAnnotations.BeforeAnnotation.class,CoreAnnotations.AfterAnnotation.class,CoreAnnotations.TokenBeginAnnotation.class,CoreAnnotations.TokenEndAnnotation.class,CoreAnnotations.PositionAnnotation.class,CoreAnnotations.IndexAnnotation.class,CoreAnnotations.OriginalTextAnnotation.class,CoreAnnotations.ValueAnnotation.class,CoreAnnotations.IsNewlineAnnotation.class,CoreAnnotations.TokenIndexAnnotation.class)
this.assignmentManager.isRegionInTransition(regionInfo) != null
type.getCanonicalText(false)
Log.w(mTag,"Adjusting remote volume without a controller!")
commitNode.getBranch()
ProcessUtil.class
st.setObject(index,javaTypeDescriptor.unwrap(value,UUID.class,options),getSqlType())
endElement == null || !endElement.isValid()
TestWadlFunctions basicTest=new TestWadlFunctions();
syncContext.setPortletPreferencesMap(getPortletPreferencesMap())
addOption(url,"MV_STORE","true")
srcActivity.getParent() == null || !(srcActivity.getParent() instanceof PvmActivity)
glyph.setSize(sizeSlider.getValue())
_buildTemplateWithGradle("control-menu-entry","entry-dependency-management","--dependency-management-enabled")
lockForRescale()
BlockLiquid.getFlowingBlock(material)
i < 30
StructuredContentNestedCollectionResource.class
/**   * {@code "content-security-policy"}  */ public static final AsciiString CONTENT_SECURITY_POLICY=new AsciiString("content-security-policy");
power >= POWER_REQ
String.format(Locale.getDefault(),"Time taken: %02d:%02d.%03d",minutes,seconds,milliseconds)
fieldDeser.getPropertyValueDirect(currentObject)
index / 2
copticDate.dayOfMonth()
w == winShowWhenLocked && mPolicy.isKeyguardShowingOrOccluded()
SearchSourceBuilder.fromXContent(parser,context,aggParsers,suggesters)
user.isAuthorized("essentials.world." + toPlayer.getWorld().getName())
getClientSSLContext()
JsonRecordHiveMapper.class
mTextUtil.nextRandomParagraph(WORD_LENGTH,STYLE_TEXT)
result.isEmpty() || !(result.get(0) instanceof Separator)
assertEquals(0,factory.getConfiguration().getResultMapNames().size())
stdErr.println(ansi.asErrorText(message))
KeyValueBinding attributeBinding
new HTTPArgument("",text.replaceAll("\n","\r\n"),false)
LOGGER.log(Level.SEVERE,LocalizationMessages.ERROR_COMMITTING_OUTPUT_STREAM(),e)
Files.createDirIfNoExists(path)
Item[]
1024 * 10
getAction().toString()
Collection<trainingListeners>
@RunWith(HazelcastParallelClassRunner.class) @Category({QuickTest.class,ParallelTest.class}) public class AtomicReferenceBasicLocalTest extends AtomicReferenceAbstractTest {   @Override protected HazelcastInstance[] newInstances(){     return createHazelcastInstanceFactory(1).newInstances();   } }
dbManager.getGenesisBlockId()
ARCEUUS_HOME_TELEPORT=143
!this.fs.delete(filePath,false)
Log_OC.d(TAG,"onResume() start")
assertThat(dtos).extracting("id").containsOnly(100L,103L)
p.getNumberValue()
robot.setAutoDelay(800)
RandomStringUtils.randomAlphanumeric(255)
keySyncOperation.startsWith(targetKey)
_ddmStructure.getDefinition()
word.length() >= line_max_size
handlers.length == 0 || handlers[0] == null
new BitSet(hashSize)
new AlertDialog.Builder(getActivity(),R.style.Theme_ownCloud_Dialog)
new SVNReporter(info,info.getAnchor().getFile(info.getTargetName()),false,true,SVNDepth.INFINITY,false,false,SVNDebugLog.getDefaultLog())
Math.max(tmp.getMaximumFractionDigits(),10)
public LowerCaseTokenizer create(Reader input){   return new LowerCaseTokenizer(input); }
db.hashMapCreate("cache")
new GermanWordSplitter(false)
options.setLanguageOut(LanguageMode.ECMASCRIPT5)
new WKTWriter(3)
assertEquals(2,props.getDisabledPlugins().length)
@Override public Response doBackgroundCall(){   mTraktClient.setAuthentication(mUsername,mPassword);   return mTraktClient.accountService().test().status; }
In.forValue(apiKeyAuthConfig.in().toValue())
assertEquals(0.7592592592592592,mm.auc_obj()._auc,1e-8)
configurations.maybeCreate(Dependency.ARCHIVES_CONFIGURATION)
String getValueAsString(String dimension);
new CrypticClue("This crate holds a better reward than a broken arrow.",CRATE_356,new WorldPoint(2671,3437,0),"Inside the Ranging Guild. Search the crate behind the northern most building.")
row("p_comment",null,5.0,0.0,null,null,null)
platform.map(version::compareTo).orElse(0) > 0
Boolean.parseBoolean(conf.get("mapreduce.job.is-mem-hungry"))
i < totalReplyTo
"set responseContext to be" + resContext
classes.add(0,cls)
checkMatch(inv,x,y,true)
r.scheduleConfigurationChanged(taskConfig,true)
z + 1 >= size
item(GREEN_ROBE_TOP)
queryMixin.rightJoin(target,alias)
result == JOptionPane.NO_OPTION || result == JOptionPane.CLOSED_OPTION
Executors.newCachedThreadPool()
log.infof("started ResourceAdapterService %s",context.getController().getName())
position >= getItemCount()
driver.findElementByPartialLinkText("Rickrolling")
canvas.clipPath(mRenderPath)
assertSameLines("<?xml version=\"1.0\"?>\r\n" + "<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n" + "         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n"+ "    <modelVersion>4.0.0</modelVersion>\r\n"+ "    <groupId>foo</groupId>\r\n"+ "    <artifactId>bar</artifactId>\r\n"+ "    <version>baz</version>\r\n"+ "</project>",VfsUtil.loadText(myProjectPom))
assertClusterSizeEventually(2,h2)
_numAlphaFactors=10
context.getAssets().addAssetPathAsSharedLibrary(WebViewFactory.getLoadedPackageInfo().applicationInfo.sourceDir)
LOG.trace("Finding components in url: {}",url)
j < arguments.length
grantRuntimePermissionsLPw(deviceProvisionPackage,ACCOUNTS_PERMISSIONS,userId)
SECONDS.toMillis(10)
@Priority(5)
errorCheckInterval=500
mGnssCallback != null
literalValue != null && literalValue.getElementList().size() > 1
MLPMnistTwoLayerExample.class
Assert.assertEquals(1L,args.getAllowCreationOfContracts())
private CharSequence text;
context.setDelayer(2000)
assertTrue(voyageReport.has("onboardCargos"))
new RMNodeStatusEvent(node.getNodeID(),status,new ArrayList<ContainerStatus>(),null,null)
newInstance(classResourcesKey,resDir,displayId,config,scale,isThemeable,token)
!(numBits > 1 && numBits < 8)
(excluded == null) && (line.length() > 80) && !line.startsWith("import ")&& !line.startsWith("package ")&& !line.matches("\\s*\\*.*")
UserGroupRoleLocalServiceUtil.createUserGroupRole(userGroupRolePK)
len >= 0
!StringUtils.isBlank(outFileName)
new DigestEncodeFunction()
!GrantCredentialsPermissionActivity.class.getName().equals(targetActivityInfo.getClass().getName()) && !CantAddAccountActivity.class.equals(targetActivityInfo.getClass().getName()) && PackageManager.SIGNATURE_MATCH != pm.checkSignatures(authUid,targetUid)
driverPropertySource.getPropertiesWithDefaults()
new IntentStarter(act,TextToSpeech.Engine.ACTION_INSTALL_TTS_DATA)
LdapUtils.getFullDn(dn,ctx).toString()
status.augmentDescription(msg)
@InputMagicNumberIntMethodAnnotation(value=-45)
monitoringStatus.updateMonitoringStatusTime(System.currentTimeMillis() - 1000 * 3600l)
OracleDataType.class
etp.setSummary(s)
ApplicationManager.getApplication().invokeLater(() -> {   final DartProblemsView problemsView=DartProblemsView.getInstance(myProject);   problemsView.showErrorNotificationTerse("Analysis server has terminated"); } ,ModalityState.NON_MODAL,myProject.getDisposed())
logger.debug("Line-in of {} is not connected",remoteHandler.getUDN())
parentClass.getClassName()
mIconRes != -1
new IndexWriter(dir,true,new WhitespaceAnalyzer(),true,IndexWriter.MaxFieldLength.LIMITED)
dst.equals(zr)
this.vertices.containsKey(node) || this.chainedTasks.containsKey(node) || this.iterations.containsKey(node)
isFastScrollAlwaysVisible()
resolution.apply(initializationStrategy,classFileLocator,typeStrategy,byteBuddy,nativeMethodStrategy,bootstrapInjectionStrategy,accessControlContext,listener)
name.equals("getNetworkOperatorName") || name.equals("gsm.operator.alpha")
Variable emitAddress(StackSlotValue slot);
infos == null || infos.length == 0
String.class
HornetQEmbeddedConfigurationFactory.class
GL.glGenTextures(n,toBuffer(textures,offset),0)
ys.atd(row)
GitLocalBranch currentBranch=repository.getCurrentBranch();
@Override public Variable emitArrayEquals(Kind kind,Value array1,Value array2,Value length){   Variable result=newVariable(LIRKind.value(Kind.Int));   append(new AMD64ArrayEqualsOp(this,kind,result,array1,array2,asAllocatable(length)));   return result; }
refresh()
removeCachedServiceLocked(getChangingUserId())
assertEquals(2,boo.getFoo().getCounter())
new BooleanPreference("use_map_markers",true)
DBG=true
(switchValues & SW_CAMERA_LENS_COVER_BIT) != 0
new ReferenceVariantsHelper(bindingContext,visibilityFilter).getReferenceVariants(callNameExpression,new DescriptorKindFilter(DescriptorKindFilter.FUNCTIONS_MASK | DescriptorKindFilter.CLASSIFIERS_MASK,Collections.<DescriptorKindExclude>emptyList()),false,nameFilter)
log.debug("Checking bounds [{}, {}) (expect {} keys)",new Object[]{startCol,endCol,expected.size()})
Color.fromRGB(0x51301A)
cancelSubscriptionAndCheckForCompletion(bpSubscription,clock.getUTCNow(),NextEvent.CANCEL,NextEvent.CANCEL,NextEvent.INVOICE_ADJUSTMENT)
timeoutLatch.await(2500,TimeUnit.MILLISECONDS)
cacheCanvas.clipRect(0,0,width,tabHeight)
!world.isAirBlock(pos) && !canSkip(pos) && boxIterator != null
conf.getInt(Constants.TFS_PERMISSIONS_UMASK_KEY)
VERSION=42
given().contentType(ContentType.BINARY).content(file).when().put("/file")
-11f
ConfigurePortletSMRootLayoutTest.class
evaluator.addComponentTypeFromArrayExpression(resolveParent,arrayExpression)
latch.awaitFirst()
serialVersionUID=1975269372645791816L
logger.error("{} is already cancelled",impl.uuid())
items[18]
epochs <= 0
ColorProperties.getColor("sliderGradientDark")
MAX_BATCH_SIZE=1000
mNotificationManager.cancel(NOTIFICATION_TAG,SystemMessage.NOTE_TV_PIP)
rep.getAccountManagement()
public Integer getWidth(){   return width; }
Object... args
new Packet(data,0)
mInner.cancel()
GroovyBundle.message("groovy.configure.facet.question.text",module.getName())
final var user=new UserResource();
item.getAddress().equalsIgnoreCase(id)
text == null || text.contains("${")
v.getCreationTime() + timeToLive < now
assertEquals(1.2918350219726562,score,1e-4)
new MaterialDialog.Builder(this).title(R.string.useGoogleLocationServices).content(R.string.useGoogleLocationServicesPrompt,true)
Runnable t=new RunAfterTester(new DisconnectionBehavior(h1,h2),new MultiCallBuilder(h1));
codeItem.getOffset()
(maxValue - minValue) >= 0
zkClient.destroy()
removeUserGroupIds.isEmpty()
label.getPackageIdentifier()
getViewHeightWithTitle()
this.nameDefinitionMultimap.remove(name,def)
layout.isTypeControlPanel() || layout.isPublicLayout() || SitesUtil.isUserGroupLayoutSetViewable(permissionChecker,layout.getGroup())
adminPreferences.getBoolean(AdminPreferencesActivity.KEY_CHANGE_PASSWORD,true)
publishWorkspaceStatusEvent(workspaceId,STOPPED,status,"Error occurs on workspace runtime stop. Error: " + event.getError())
Rule.getRules(true,ActivityForwarding.this)
locale != null
DEBUG_LOC_AGAIN
UpgradeStepRegistrator.class
factory.getEmbeddedServletContainer(exampleServletRegistration(),new FilterRegistrationBean(new ExampleFilter()))
createIntent().setAction(ACTION_FIND_DEVICE).putExtra(EXTRA_FIND_START,start)
VideoContent.createRemoteVideo(fileReference,baseVideoContent.getW(),baseVideoContent.getH(),baseVideoContent.getDuration(),baseVideoContent.getFastThumb())
!e.awaitTermination(24,TimeUnit.HOURS)
mStack.size() > 1
getLogger().warn("Unknown classloader [ITE]: " + e.getMessage())
show.isInternal()
paused
mEventInterceptor.onPreMeasurePopupView(this,mContentView,w,h)
new Alarm(this)
FairSharePolicy.class
smppClient.scheduleReconnect()
mTouchProgressOffset=0.6f
new char[8192]
public @JsonProperty("method") String method;
verify(mock)
out.write(BYTE_FULL)
new PartitionsStatsRequest(databaseName,tableName,columnNames,partitionNames)
super.getIsNullProvider(path)
AndroidAptCompiler.getResourceDirForApkCompiler(depFacet.getModule(),depFacet)
new Notification(StatusBarTest.this,R.drawable.stat_sys_phone,"Incoming call from: Imperious Leader",System.currentTimeMillis() - (1000 * 60 * 60* 24))
Math.floor((double)(powerQuery[out] * totalPowerContained) / totalPowerQuery)
new MailFolder(folders[i].getMessageCount(),folders[i].getName(),folders[i].getNewMessageCount())
/**   * Get a default <code>Factory</code> without a  {@link Connection}  */ final static Factory getStaticFactory(SQLDialect dialect){   return DEFAULT_INSTANCES[dialect.ordinal()]; }
buffer.put(bufferData)
mMessageReference != null && mMessageReference.flag != null
